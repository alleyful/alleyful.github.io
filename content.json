{"pages":[],"posts":[{"title":"모의고사","text":"문제 설명수포자는 수학을 포기한 사람의 준말입니다. 수포자 삼인방은 모의고사에 수학 문제를 전부 찍으려 합니다.수포자는 1번 문제부터 마지막 문제까지 다음과 같이 찍습니다. 1번 수포자가 찍는 방식: 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, …2번 수포자가 찍는 방식: 2, 1, 2, 3, 2, 4, 2, 5, 2, 1, 2, 3, 2, 4, 2, 5, …3번 수포자가 찍는 방식: 3, 3, 1, 1, 2, 2, 4, 4, 5, 5, 3, 3, 1, 1, 2, 2, 4, 4, 5, 5, … 1번 문제부터 마지막 문제까지의 정답이 순서대로 들은 배열 answers가 주어졌을 때, 가장 많은 문제를 맞힌 사람이 누구인지 배열에 담아 return 하도록 solution 함수를 작성해주세요. 제한 조건시험은 최대 10,000 문제로 구성되어있습니다.문제의 정답은 1, 2, 3, 4, 5중 하나입니다.가장 높은 점수를 받은 사람이 여럿일 경우, return하는 값을 오름차순 정렬해주세요. 입출력 예 answers return [1,2,3,4,5] [1] [1,3,2,4,2] [1,2,3] 입출력 예 설명 입출력 예 #1 수포자 1은 모든 문제를 맞혔습니다. 수포자 2는 모든 문제를 틀렸습니다. 수포자 3은 모든 문제를 틀렸습니다. 따라서 가장 문제를 많이 맞힌 사람은 수포자 1입니다. 입출력 예 #2 모든 사람이 2문제씩을 맞췄습니다. 12345678910111213141516171819202122232425function solution(answers) { const pattens = [ [1, 2, 3, 4, 5], [2, 1, 2, 3, 2, 4, 2, 5], [3, 3, 1, 1, 2, 2, 4, 4, 5, 5] ]; const results = answers.reduce((target, answer, index) =&gt; { pattens.map((patten, i) =&gt; { (patten[0] === answer) &amp;&amp; target[i]++; patten.push(patten.shift()); }); return target; }, new Array(pattens.length).fill(0)); let topClass = Math.max(...results); return results.reduce((target, result, index) =&gt; { (result === topClass) &amp;&amp; target.push(index + 1); return target; }, [])}","link":"/2019/06/11/algorithm-programmers-level1-02/"},{"title":"K번째수","text":"문제 설명배열 array의 i번째 숫자부터 j번째 숫자까지 자르고 정렬했을 때, k번째에 있는 수를 구하려 합니다. 예를 들어 array가 [1, 5, 2, 6, 3, 7, 4], i = 2, j = 5, k = 3이라면 array의 2번째부터 5번째까지 자르면 [5, 2, 6, 3]입니다. 1에서 나온 배열을 정렬하면 [2, 3, 5, 6]입니다. 2에서 나온 배열의 3번째 숫자는 5입니다.배열 array, [i, j, k]를 원소로 가진 2차원 배열 commands가 매개변수로 주어질 때, commands의 모든 원소에 대해 앞서 설명한 연산을 적용했을 때 나온 결과를 배열에 담아 return 하도록 solution 함수를 작성해주세요. 제한사항 array의 길이는 1 이상 100 이하입니다. array의 각 원소는 1 이상 100 이하입니다. commands의 길이는 1 이상 50 이하입니다. commands의 각 원소는 길이가 3입니다. 입출력 예 array commands return [1, 5, 2, 6, 3, 7, 4] [[2, 5, 3], [4, 4, 1], [1, 7, 3]] [5, 6, 3] 입출력 예 설명 [1, 5, 2, 6, 3, 7, 4]를 2번째부터 5번째까지 자른 후 정렬합니다. [2, 3, 5, 6]의 세 번째 숫자는 5입니다. [1, 5, 2, 6, 3, 7, 4]를 4번째부터 4번째까지 자른 후 정렬합니다. [6]의 첫 번째 숫자는 6입니다. [1, 5, 2, 6, 3, 7, 4]를 1번째부터 7번째까지 자릅니다. [1, 2, 3, 4, 5, 6, 7]의 세 번째 숫자는 3입니다. 12345678function solution(array, commands) { return commands.reduce((target, commans) =&gt; { target.push((array.slice(commans[0]-1, commans[1]).sort((a, b) =&gt; a - b))[commans[2]-1]); return target; }, [])}","link":"/2019/06/12/algorithm-programmers-level1-03/"},{"title":"체육복","text":"문제 설명점심시간에 도둑이 들어, 일부 학생이 체육복을 도난당했습니다.다행히 여벌 체육복이 있는 학생이 이들에게 체육복을 빌려주려 합니다.학생들의 번호는 체격 순으로 매겨져 있어, 바로 앞번호의 학생이나 바로 뒷번호의 학생에게만 체육복을 빌려줄 수 있습니다.예를 들어, 4번 학생은 3번 학생이나 5번 학생에게만 체육복을 빌려줄 수 있습니다.체육복이 없으면 수업을 들을 수 없기 때문에 체육복을 적절히 빌려 최대한 많은 학생이 체육수업을 들어야 합니다. 전체 학생의 수 n, 체육복을 도난당한 학생들의 번호가 담긴 배열 lost, 여벌의 체육복을 가져온 학생들의 번호가 담긴 배열 reserve가 매개변수로 주어질 때, 체육수업을 들을 수 있는 학생의 최댓값을 return 하도록 solution 함수를 작성해주세요. 제한사항 전체 학생의 수는 2명 이상 30명 이하입니다. 체육복을 도난당한 학생의 수는 1명 이상 n명 이하이고 중복되는 번호는 없습니다. 여벌의 체육복을 가져온 학생의 수는 1명 이상 n명 이하이고 중복되는 번호는 없습니다. 여벌 체육복이 있는 학생만 다른 학생에게 체육복을 빌려줄 수 있습니다. 여벌 체육복을 가져온 학생이 체육복을 도난당했을 수 있습니다. 이때 이 학생은 체육복을 하나만 도난당했다고 가정하며, 남은 체육복이 하나이기에 다른 학생에게는 체육복을 빌려줄 수 없습니다. 입출력 예 n lost reserve return 5 [2, 4] [1, 3, 5] 5 5 [2, 4] [3] 4 3 [3] [1] 2 입출력 예 설명 예제 #1 1번 학생이 2번 학생에게 체육복을 빌려주고, 3번 학생이나 5번 학생이 4번 학생에게 체육복을 빌려주면 학생 5명이 체육수업을 들을 수 있습니다. 예제 #2 3번 학생이 2번 학생이나 4번 학생에게 체육복을 빌려주면 학생 4명이 체육수업을 들을 수 있습니다. 12345678910111213141516171819202122function solution(n, lost, reserve) { let reserveList = reserve; let reserveLostIndex = -1; let lostList = lost.reduce((target, item) =&gt; { reserveLostIndex = reserveList.findIndex(reser =&gt; item === reser); reserveLostIndex &gt;= 0 ? reserveList.splice(reserveLostIndex, 1) : target.push(item); return target; }, []); return n - lostList.reduce((target, item) =&gt; { let index = reserveList.findIndex(reser =&gt; reser === item - 1 || reser === item + 1); index &gt;= 0 &amp;&amp; ( reserveList.splice(index, 1), target-- ); return target; }, lostList.length);}","link":"/2019/06/13/algorithm-programmers-level1-04/"},{"title":"2016년","text":"문제 설명2016년 1월 1일은 금요일입니다. 2016년 a월 b일은 무슨 요일일까요?두 수 a ,b를 입력받아 2016년 a월 b일이 무슨 요일인지 리턴하는 함수, solution을 완성하세요.요일의 이름은 일요일부터 토요일까지 각각 1SUN,MON,TUE,WED,THU,FRI,SAT 입니다. 예를 들어 a=5, b=24라면 5월 24일은 화요일이므로 문자열 TUE를 반환하세요. 제한 조건 2016년은 윤년입니다. 2016년 a월 b일은 실제로 있는 날입니다. (13월 26일이나 2월 45일같은 날짜는 주어지지 않습니다) 입출력 예 a b result 5 24 TUE Solution 1123456function solution(a, b) { const date = `2016/${a}/${b}`; const weekName = [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"]; const week = new Date(date); return weekName[week.getDay()];} Solution 2123function solution(a, b) { return ['SUN', 'MON', 'TUE', 'WED', 'THU', 'FRI', 'SAT'][new Date(2016, a - 1, b).getDay()];}","link":"/2019/06/13/algorithm-programmers-level1-05/"},{"title":"가운데 글자 가져오기","text":"문제 설명단어 s의 가운데 글자를 반환하는 함수, solution을 만들어 보세요.단어의 길이가 짝수라면 가운데 두글자를 반환하면 됩니다. 제한사항s는 길이가 1 이상, 100이하인 스트링입니다. 입출력 예 s return “abcde” “c” “qwer” “we” Solution 112345function solution(s) { let string = [...s]; const leng = string.length; return (leng % 2 === 0 ? string.splice(leng/2 - 1, 2) : string.splice(leng/2, 1)).join('');} Solution 2123function solution(s) { return s.substr(Math.ceil(s.length / 2) - 1, s.length % 2 === 0 ? 2 : 1);}","link":"/2019/06/13/algorithm-programmers-level1-06/"},{"title":"같은 숫자는 싫어","text":"문제 설명배열 arr가 주어집니다. 배열 arr의 각 원소는 숫자 0부터 9까지로 이루어져 있습니다.이때, 배열 arr에서 연속적으로 나타나는 숫자는 하나만 남기고 전부 제거하려고 합니다.배열 arr에서 제거 되고 남은 수들을 return 하는 solution 함수를 완성해 주세요.단, 제거된 후 남은 수들을 반환할 때는 배열 arr의 원소들의 순서를 유지해야 합니다.예를들면 arr = [1, 1, 3, 3, 0, 1, 1] 이면 [1, 3, 0, 1] 을 return 합니다. arr = [4, 4, 4, 3, 3] 이면 [4, 3] 을 return 합니다. 배열 arr에서 연속적으로 나타나는 숫자는 제거하고 남은 수들을 return 하는 solution 함수를 완성해 주세요. 제한사항 배열 arr의 크기 : 1,000,000 이하의 자연수 배열 arr의 원소의 크기 : 0보다 크거나 같고 9보다 작거나 같은 정수 입출력 예 arr answer [1,1,3,3,0,1,1] [1,3,0,1] [4,4,4,3,3] [4,3] 입출력 예 설명입출력 예 #1,2문제의 예시와 같습니다. Solution 11234567function solution(arr){ return arr.reduce((target, item, index) =&gt; { (index === 0 || target[target.length-1] !== item) &amp;&amp; target.push(item); return target; }, []);} Solution 2123function solution(arr){ return arr.filter((v, i) =&gt; v !== arr[i + 1]);}","link":"/2019/06/13/algorithm-programmers-level1-07/"},{"title":"나누어 떨어지는 숫자 배열","text":"문제 설명array의 각 element 중 divisor로 나누어 떨어지는 값을 오름차순으로 정렬한 배열을 반환하는 함수, solution을 작성해주세요.divisor로 나누어 떨어지는 element가 하나도 없다면 배열에 -1을 담아 반환하세요. 제한사항arr은 자연수를 담은 배열입니다.정수 i, j에 대해 i ≠ j 이면 arr[i] ≠ arr[j] 입니다.divisor는 자연수입니다.array는 길이 1 이상인 배열입니다. 입출력 예 arr divisor return [5, 9, 7, 10] 5 [5, 10] [2, 36, 1, 3] 1 [1, 2, 3, 36] [3,2,6] 10 [-1] 입출력 예 설명 입출력 예#1 arr의 원소 중 5로 나누어 떨어지는 원소는 5와 10입니다. 따라서 [5, 10]을 리턴합니다. 입출력 예#2 arr의 모든 원소는 1으로 나누어 떨어집니다. 원소를 오름차순으로 정렬해 [1, 2, 3, 36]을 리턴합니다. 입출력 예#3 3, 2, 6은 10으로 나누어 떨어지지 않습니다. 나누어 떨어지는 원소가 없으므로 [-1]을 리턴합니다. Solution 112345678910function solution(arr, divisor) { const result = arr.reduce((target, item) =&gt; { (item % divisor === 0) &amp;&amp; target.push(item); return target; }, []); return result.length &gt; 0 ? result.sort((a, b) =&gt; a - b) : [-1];}","link":"/2019/06/14/algorithm-programmers-level1-08/"},{"title":"두 정수 사이의 합","text":"문제 설명두 정수 a, b가 주어졌을 때 a와 b 사이에 속한 모든 정수의 합을 리턴하는 함수, solution을 완성하세요.예를 들어 a = 3, b = 5인 경우, 3 + 4 + 5 = 12이므로 12를 리턴합니다. 제한 조건a와 b가 같은 경우는 둘 중 아무 수나 리턴하세요.a와 b는 -10,000,000 이상 10,000,000 이하인 정수입니다.a와 b의 대소관계는 정해져있지 않습니다. 입출력 예 a b return 3 5 12 3 3 3 5 3 12 Solution 112345678function solution(a, b) { const array = [a, b].sort((a, b) =&gt; a - b); const bigNum = array[1]; const smallNum = array[0]; const baseNum = smallNum - 1; const length = bigNum - smallNum + 1; return bigNum === smallNum ? bigNum : (baseNum * length) + ((1 + length) * length / 2);} Solution 2123function solution(a, b) { return (a + b) * ((a &gt; b ? a - b : b - a) + 1) / 2;}","link":"/2019/06/14/algorithm-programmers-level1-09/"},{"title":"문자열 내 마음대로 정렬하기","text":"문제 설명문자열로 구성된 리스트 strings와, 정수 n이 주어졌을 때, 각 문자열의 인덱스 n번째 글자를 기준으로 오름차순 정렬하려 합니다.예를 들어 strings가 [sun, bed, car]이고 n이 1이면 각 단어의 인덱스 1의 문자 u, e, a로 strings를 정렬합니다. 제한 조건strings는 길이 1 이상, 50이하인 배열입니다.strings의 원소는 소문자 알파벳으로 이루어져 있습니다.strings의 원소는 길이 1 이상, 100이하인 문자열입니다.모든 strings의 원소의 길이는 n보다 큽니다.인덱스 1의 문자가 같은 문자열이 여럿 일 경우, 사전순으로 앞선 문자열이 앞쪽에 위치합니다. 입출력 예 strings n return [sun, bed, car] 1 [car, bed, sun] [abce, abcd, cdx] 2 [abcd, abce, cdx] 입출력 예 설명 입출력 예 1 sun, bed, car의 1번째 인덱스 값은 각각 u, e, a 입니다. 이를 기준으로 strings를 정렬하면 [car, bed, sun] 입니다. 입출력 예 2 abce와 abcd, cdx의 2번째 인덱스 값은 c, c, x입니다. 따라서 정렬 후에는 cdx가 가장 뒤에 위치합니다.abce와 abcd는 사전순으로 정렬하면 abcd가 우선하므로, 답은 [abcd, abce, cdx] 입니다. Solution 1123function solution(strings, n) { return strings.sort((p, c) =&gt; p[n] === c[n] ? p.localeCompare(c) : p[n].localeCompare(c[n]))} Solution 21234function solution(strings, n) { return strings.sort((p, c) =&gt; p[n] === c[n] ? (p &lt; c ? -1 : (p &gt; c ? 1 : 0)) : (p[n] &lt; c[n] ? -1 : (p[n] &gt; c[n] ? 1 : 0)))}","link":"/2019/06/14/algorithm-programmers-level1-10/"},{"title":"완주하지 못한 선수","text":"문제 설명수많은 마라톤 선수들이 마라톤에 참여하였습니다. 단 한 명의 선수를 제외하고는 모든 선수가 마라톤을 완주하였습니다. 마라톤에 참여한 선수들의 이름이 담긴 배열 participant와 완주한 선수들의 이름이 담긴 배열 completion이 주어질 때, 완주하지 못한 선수의 이름을 return 하도록 solution 함수를 작성해주세요. 제한사항 마라톤 경기에 참여한 선수의 수는 1명 이상 100,000명 이하입니다. completion의 길이는 participant의 길이보다 1 작습니다. 참가자의 이름은 1개 이상 20개 이하의 알파벳 소문자로 이루어져 있습니다. 참가자 중에는 동명이인이 있을 수 있습니다. 입출력 예 participant completion return [leo, kiki, eden] [eden, kiki] leo [marina, josipa, nikola, vinko, filipa] [josipa, filipa, marina, nikola] vinko [stanko, ana, mislav] [mislav, stanko, mislav, ana] mislav 입출력 예 설명 예제 #1 leo는 참여자 명단에는 있지만, 완주자 명단에는 없기 때문에 완주하지 못했습니다. 예제 #2 vinko는 참여자 명단에는 있지만, 완주자 명단에는 없기 때문에 완주하지 못했습니다. 예제 #3 mislav는 참여자 명단에는 두 명이 있지만, 완주자 명단에는 한 명밖에 없기 때문에 한명은 완주하지 못했습니다. 1234567891011function solution(participant, completion) { participant.sort(); completion.sort(); return participant.reduce((target, name, index) =&gt; { name !== completion[index] &amp;&amp; target.push(name); return target; }, [])[0];}","link":"/2019/06/10/algorithm-programmers-level1-01/"},{"title":"Day0 Hello World","text":"ObjectiveIn this challenge, we review some basic concepts that will get you started with this series. You will need to use the same (or similar) syntax to read input and write output in challenges throughout HackerRank. Check out the Tutorial tab for learning materials and an instructional video! TaskTo complete this challenge, you must save a line of input from stdin to a variable, print Hello, World. on a single line, and finally print the value of your variable on a second line. You’ve got this! Note: The instructions are Java-based, but we support submissions in many popular languages. You can switch languages using the drop-down menu above your editor, and the InputString variable may be written differently depending on the best-practice conventions of your submission language. Input FormatA single line of text denoting inputString (the variable whose contents must be printed). Output FormatPrint Hello, World. on the first line, and the contents of inputString on the second line. Sample Input 01Welcome to 30 Days of Code! ##Sample Output 0 12Hello, World. Welcome to 30 Days of Code! ExplanationOn the first line, we print the string literal Hello, World.. On the second line, we print the contents of the inputString variable which, for this sample case, happens to be Welcome to 30 Days of Code!. If you do not print the variable’s contents to stdout, you will not pass the hidden test case. Solution1234567function processData(inputString) { // This line of code prints the first line of output console.log(\"Hello, World.\"); // Write the second line of output that prints the contents of 'inputString' here.}","link":"/2019/06/15/algorithm/hackerrank/Day0_HelloWorld/"},{"title":"Day5 Loops","text":"ObjectiveIn this challenge, we’re going to use loops to help us do some simple math. Check out the Tutorial tab to learn more. TaskGiven an integer, n, print its first 10 multiples. Each multiple n x i (where 1 &lt;= i &lt;= 10) should be printed on a new line in the form: n x i = result. Input FormatA single integer, n. Constraints 2 &lt;= n &lt;= 20 Output FormatPrint 10 lines of output; each line i (where 1 &lt;= i &lt;= 10) contains the result of n x i in the form:n x i = result. Sample Input12 ##Sample Output 123456789102 x 1 = 22 x 2 = 42 x 3 = 62 x 4 = 82 x 5 = 102 x 6 = 122 x 7 = 142 x 8 = 162 x 9 = 182 x 10 = 20 Solution 11234567function main() { const n = parseInt(readLine(), 10); for (let i = 1; i &lt;= 10; i++) { console.log(`${n} x ${i} = ${n * i}`); }} Solution 212345678function main() { const n = parseInt(readLine(), 10); new Array(10).fill(n).forEach((time, index) =&gt; { console.log(`${time} x ${index + 1} = ${time * (index + 1)}`); });}","link":"/2019/06/15/algorithm/hackerrank/Day5_Loops/"},{"title":"Day9 Recursion 3","text":"ObjectiveToday, we’re learning and practicing an algorithmic concept called Recursion. Check out the Tutorial tab for learning materials and an instructional video! Recursive Method for Calculating Factorial TaskWrite a factorial function that takes a positive integer, N as a parameter and prints the result of N! (N factorial). Note: If you fail to use recursion or fail to name your recursive function factorial or Factorial, you will get a score of 0. Input FormatA single integer, N (the argument to pass to factorial). Constraints 2 &lt;= N &lt;= 12 Your submission must contain a recursive function named factorial. Output FormatPrint a single integer denoting N!. Sample Input13 Sample Output16 ExplanationConsider the following steps: factorial(3) = 3 X factorial(2) factorial(2) = 2 X factorial(1) factorial(1) = 1 From steps 2 and 3, we can say factorial(2) = 2 X 1 = 2; then when we apply the value from factorial(2) to step 1, we get factorial(3) = 3 X 2 X 1 = 6. Thus, we print 6 as our answer. Solutions 11234function factorial(n) { return n &lt; 2 ? 1 : n * factorial(n - 1);} Solution 21234function factorial(n) { return (!+n) ? 1 : n * factorial(n - 1);} Solution 312345678910let memoization = [0, 1];const factorial = (n) =&gt; { (typeof memoization[n] !== 'number') &amp;&amp; ( memoization[n] = (n - 1) &gt; 0 ? n * factorial(n - 1) : 1 ); return memoization[n];}","link":"/2019/06/16/algorithm/hackerrank/Day9_Recursion3/"},{"title":"Day3 Intro to Conditional Statements","text":"ObjectiveIn this challenge, we’re getting started with conditional statements. Check out the Tutorial tab for learning materials and an instructional video! TaskGiven an integer, n, perform the following conditional actions: If n is odd, print Weird If n is even and in the inclusive range of 2 to 5, print Not Weird If n is even and in the inclusive range of 6 to 20, print Weird If n is even and greater than 20, print Not Weird Complete the stub code provided in your editor to print whether or not is weird. Input FormatA single line containing a positive integer, n. Constraints 1 &lt;= n &lt;= 100 Output FormatPrint Weird if the number is weird; otherwise, print Not Weird. Sample Input 013 ##Sample Output 0 1Weird Sample Input 1124 ##Sample Output 1 1Not Weird ExplanationSample Case 0: n = 3n is odd and odd numbers are weird, so we print Weird. Sample Case 1: n = 24n &gt; 20 and n is even, so it isn’t weird. Thus, we print Not Weird. Solution 11234567891011121314151617// Complete the solve function below.function main() { var N = parseInt(readLine()); if(N % 2 == 0) { if(N &gt;= 2 &amp;&amp; N &lt; 6) { console.log('Not Weird'); } else if(N &gt;= 6 &amp;&amp; N &lt;= 20) { console.log('Weird'); } else if(N &gt; 20) { console.log('Not Weird'); } } else { console.log('Weird'); }} Solution 212345678// Complete the solve function below.function main() { const N = parseInt(readLine(), 10); let result = (N % 2 === 1 || (N % 2 === 0 &amp;&amp; N &gt;= 6 &amp;&amp; N &lt;= 20)) ? 'Weird' : 'Not Weird'; console.log(result);}","link":"/2019/06/15/algorithm/hackerrank/Day3_IntroToConditionalStatements/"},{"title":"Day10 Binary Numbers","text":"ObjectiveToday, we’re working with binary numbers. Check out the Tutorial tab for learning materials and an instructional video! TaskGiven a base-10 integer, n, convert it to binary (base-2). Then find and print the base-10 integer denoting the maximum number of consecutive 1‘s in n‘s binary representation. Input FormatA single integer, n. Constraints 1 &lt;= n &lt;= 106 Output FormatPrint a single base-10 integer denoting the maximum number of consecutive 1‘s in the binary representation of n. Sample Input 115 Sample Output 111 Sample Input 2113 Sample Output 212 ExplanationSample Case 1:The binary representation of 5 is 101, so the maximum number of consecutive 1‘s is 1. Sample Case 2:The binary representation of 13 is 1101, so the maximum number of consecutive 1‘s is 2. Solution 112345678910111213141516171819202122function main() { let n = parseInt(readLine(), 10); let values = []; while (+n != 0) { values.push(n % 2); n = Math.floor(n / 2); } let { result } = values.reduce((target, item, index) =&gt; { item ? target['accumulator']++ : (target['accumulator'] = 0); target['accumulator'] &gt; target['result'] &amp;&amp; (target['result'] = target['accumulator']); return target; }, { accumulator: 0, result: 0 }); console.log(result);} Solution 212345678910111213141516function main() { const n = parseInt(readLine(), 10); let result = 0; const temp = n.toString(2).split('').reduce((target, num) =&gt; { let value = Number(num) &gt; 0 ? Number(target) + Number(num) : ( result = target &gt; result ? target : result, 0 ); return value; }, 0); console.log(result - temp &gt; 0 ? result : temp)} Solution 31234567891011121314151617181920212223function main() { const n = parseInt(readLine(), 10); const array = n.toString(2).split(''); let max = 0; let cur = 0; for (let i = 0, itotal = array.length; i &lt; itotal; i++) { if (array[i] == 1) { cur++; } else if (array[i] == 0) { if (cur &gt; max) { max = cur; } cur = 0; } } if (cur &gt; max) { max = cur; } console.log(max);}","link":"/2019/06/16/algorithm/hackerrank/Day10_BinaryNumbers/"},{"title":"Day4 Class vs. Instance","text":"ObjectiveIn this challenge, we’re going to learn about the difference between a class and an instance; because this is an Object Oriented concept, it’s only enabled in certain languages. Check out the Tutorial tab for learning materials and an instructional video! TaskWrite a Person class with an instance variable, , and a constructor that takes an integer, , as a parameter. The constructor must assign to after confirming the argument passed as is not negative; if a negative argument is passed as , the constructor should set to and print Age is not valid, setting age to 0.. In addition, you must write the following instance methods: yearPasses() should increase the instance variable by .amIOld() should perform the following conditional actions:If , print You are young..If and , print You are a teenager..Otherwise, print You are old..To help you learn by example and complete this challenge, much of the code is provided for you, but you’ll be writing everything in the future. The code that creates each instance of your Person class is in the main method. Don’t worry if you don’t understand it all quite yet! Note: Do not remove or alter the stub code in the editor. Input FormatInput is handled for you by the stub code in the editor. The first line contains an integer, T (the number of test cases), and the T subsequent lines each contain an integer denoting the age of a Person instance. Constraints 1 &lt;= T &lt;= 4 -5 &lt;= age &lt;= 30 Output FormatComplete the method definitions provided in the editor so they meet the specifications outlined above; the code to test your work is already in the editor. If your methods are implemented correctly, each test case will print 2 or 3 lines (depending on whether or not a valid initialAge was passed to the constructor). Sample Input123454-1101618 ##Sample Output 123456789101112Age is not valid, setting age to 0.You are young.You are young.You are young.You are a teenager.You are a teenager.You are old.You are old.You are old. ExplanationTest Case 0: initialAge = -1Because initialAge &lt; 0, our code must set age to 0 and print the “Age is not valid…” message followed by the young message. Three years pass and age = 3, so we print the young message again. Test Case 1: initialAge = 10Because initialAge &lt; 13, our code should print that the person is young. Three years pass and age = 13, so we print that the person is now a teenager. Test Case 2: initialAge = 16Because 13 &lt;= initialAge &lt; 18, our code should print that the person is a teenager. Three years pass and age = 19, so we print that the person is old. Test Case 3: initialAge = 18Because initialAge &gt;= 18, our code should print that the person is old. Three years pass and the person is still old at age = 21, so we print the old message again. The extra line at the end of the output is supposed to be there and is trimmed before being compared against the test case’s expected output. If you’re failing this challenge, check your logic and review your print statements for spelling errors. Solution12345678910111213141516171819function Person(initialAge){ // Add some more code to run some checks on initialAge (initialAge &lt;= 0) &amp;&amp; (console.log('Age is not valid, setting age to 0.')); this.age = (initialAge &lt;= 0) ? 0 : initialAge; this.amIOld=function(){ // Do some computations in here and print out the correct statement to the console let age = this.age; let result = ''; console.log(`You are ${(age &gt;= 13 &amp;&amp; age &lt; 18) ? 'a teenager.' : ((age &lt; 13) ? 'young.' : 'old.')}`); }; this.yearPasses=function(){ // Increment the age of the person in here return this.age++; };}","link":"/2019/06/15/algorithm/hackerrank/Day4_ClassVsInstance/"},{"title":"Day7 Arrays","text":"ObjectiveToday, we’re learning about the Array data structure. Check out the Tutorial tab for learning materials and an instructional video! TaskGiven an array, A, of N integers, print A‘s elements in reverse order as a single line of space-separated numbers. Input FormatThe first line contains an integer, N (the size of our array).The second line contains N space-separated integers describing array A‘s elements. Constraints 1 &lt;= N &lt;= 1000 1 &lt;= Ai &lt;= 10000, where Ai is the ith integer in the array. Output FormatPrint the elements of array A in reverse order as a single line of space-separated numbers. Sample Input1241 4 3 2 Sample Output12 3 4 1 SolutionsSolution 11234567function main() { const n = parseInt(readLine(), 10); const arr = readLine().split(' ').map(arrTemp =&gt; parseInt(arrTemp, 10)); console.log(arr.reverse().join(' '));} Solution 2123456789101112131415161718function main() { const n = parseInt(readLine(), 10); const arr = readLine().split(' ').map(arrTemp =&gt; parseInt(arrTemp, 10)); const reverseArray = (array) =&gt; { let temp = null; const length = array.length; for (let i = 0; i &lt; length / 2; i++){ temp = array[i]; array[i] = array[length - 1 - i]; array[length - 1 - i] = temp; } return array; }; console.log(reverseArray(arr).join(' '));}","link":"/2019/06/15/algorithm/hackerrank/Day7_Arrays/"},{"title":"Day1 Data Types","text":"ObjectiveToday, we’re discussing data types. Check out the Tutorial tab for learning materials and an instructional video! TaskComplete the code in the editor below. The variables i, d, and s are already declared and initialized for you. You must: Declare 3 variables: one of type int, one of type double, and one of type String. Read 3 lines of input from stdin (according to the sequence given in the Input Format section below) and initialize your 3 variables. Use the + operator to perform the following operations: Print the sum of i plus your int variable on a new line. Print the sum of d plus your double variable to a scale of one decimal place on a new line. Concatenate s with the string you read as input and print the result on a new line. Note: If you are using a language that doesn’t support using + for string concatenation (e.g.: C), you can just print one variable immediately following the other on the same line. The string provided in your editor must be printed first, immediately followed by the string you read as input. Input FormatThe first line contains an integer that you must sum with i. The second line contains a double that you must sum with d. The third line contains a string that you must concatenate with s. Output FormatPrint the sum of both integers on the first line, the sum of both doubles (scaled to 1 decimal place) on the second line, and then the two concatenated strings on the third line. Sample Input 0123124.0is the best place to learn and practice coding! ##Sample Output 0 123168.0HackerRank is the best place to learn and practice coding! ExplanationWhen we sum the integers 4 and 12, we get the integer 16.When we sum the floating-point numbers 4.0 and 4.0, we get 8.0. When we concatenate HackerRank with is the best place to learn and practice coding!, we get HackerRank is the best place to learn and practice coding!. You will not pass this challenge if you attempt to assign the Sample Case values to your variables instead of following the instructions above and reading input from stdin. SolutionsSolution 1123456789101112131415161718// Declare second integer, double, and String variables.var first = +input_stdin_array[0];var second = +input_stdin_array[1];var third = input_stdin_array[2];// Read and save an integer, double, and String to your variables.// Print the sum of both integer variables on a new line.console.log(i + first);// Print the sum of the double variables on a new line.console.log((d + second).toFixed(1));// Concatenate and print the String variables on a new line// The 's' variable above should be printed first.console.log(s+third); Solution 2123456789101112131415161718// Declare second integer, double, and String variables.let first, second, third;// Read and save an integer, double, and String to your variables.first = parseInt(readLine());second = parseFloat(readLine());third = readLine();// Print the sum of both integer variables on a new line.console.log(i + first);// Print the sum of the double variables on a new line.console.log((d + second).toFixed(1));// Concatenate and print the String variables on a new line// The 's' variable above should be printed first.console.log(s + third);","link":"/2019/06/15/algorithm/hackerrank/Day1_DataTypes/"},{"title":"Day6 Let's Review","text":"ObjectiveToday we’re expanding our knowledge of Strings and combining it with what we’ve already learned about loops. Check out the Tutorial tab for learning materials and an instructional video! TaskGiven a string, S, of length N that is indexed from 0 to N - 1, print its even-indexed and odd-indexed characters as 2 space-separated strings on a single line (see the Sample below for more detail). Note: 0 is considered to be an even index. Input FormatThe first line contains an integer, T (the number of test cases).Each line i of the T subsequent lines contain a String, S. Constraints 1 &lt;= T &lt;= 10 2 &lt;= length of S &lt;= 10000 Output FormatFor each String Sj (where 0 &lt;= j &lt;= T - 1), print Sj‘s even-indexed characters, followed by a space, followed by Sj‘s odd-indexed characters. Sample Input1232HackerRank ##Sample Output 12Hce akrRn ak ##Explanation Test Case 0: S = “Hacker”S[0] = “H”S[1] = “a”S[2] = “c”S[3] = “k”S[4] = “e”S[5] = “r” The even indices are 0, 2, and 4, and the odd indices are 1, 3, and 5. We then print a single line of 2 space-separated strings; the first string contains the ordered characters from S‘s even indices (Hce), and the second string contains the ordered characters from S‘s odd indices (akr). Test Case 1: S = “Rank”S[0] = “R”S[1] = “a”S[2] = “n”S[3] = “k” The even indices are 0 and 2, and the odd indices are 1 and 3. We then print a single line of 2 space-separated strings; the first string contains the ordered characters from S‘s even indices (Rn), and the second string contains the ordered characters from S‘s odd indices (ak). Solution 1123456789101112131415function processData(input) { let array = input.split('\\n'); array.shift(); array.map((value, index) =&gt; { let odd = ''; let even = ''; value.split('').map((value, index) =&gt; { index % 2 === 0 ? odd += value : even += value; }); console.log(`${odd} ${even}`); });} Solution 21234567891011121314151617function processData(input) { //Enter your code here input.split(\"\\n\").reduce((target, item, index) =&gt; { if (index &amp;&amp; Number.isNaN(+item)) { let result = item.split('').reduce((target, text, index) =&gt; { target[+(index % 2 !== 0)] += text; return target; }, new Array(2).fill('')).join(' '); console.log(result); } return target; }, '');}","link":"/2019/06/15/algorithm/hackerrank/Day6_LetsReview/"},{"title":"Day2 Operators","text":"ObjectiveIn this challenge, you’ll work with arithmetic operators. Check out the Tutorial tab for learning materials and an instructional video! TaskGiven the meal price (base cost of a meal), tip percent (the percentage of the meal price being added as tip), and tax percent (the percentage of the meal price being added as tax) for a meal, find and print the meal’s total cost. Note: Be sure to use precise values for your calculations, or you may end up with an incorrectly rounded result! Input FormatThere are 3 lines of numeric input:The first line has a double, mealCost (the cost of the meal before tax and tip).The second line has an integer, tipPercent (the percentage of mealCost being added as tip).The third line has an integer, taxPercent (the percentage of mealCost being added as tax). Output FormatPrint the total meal cost, where totalCost is the rounded integer result of the entire bill (mealCost with added tax and tip). Sample Input 012312.00208 ##Sample Output 0 115 ExplanationGiven:mealCost = 12, tipPercent = 20, taxPercent = 8 Calculations: tip = 12 x = 2.4 tax = 12 x = 0.96 totalCost = mealCost + tip + tax = 12 + 2.4 + 0.96 = 15.36 round(totalCost) = 15 We round totalCost to the nearest dollar (integer) and then print our result, 15. Solution1234567891011121314151617function main() { var cost = +input_stdin_array[0]; var tip = cost * input_stdin_array[1] / 100; var tax = cost * input_stdin_array[2] / 100; var total = cost + tip + tax; var round = Math.round(total); console.log('The total meal cost is ' + round + ' dollars.');}// Complete the solve function below.function solve(meal_cost, tip_percent, tax_percent) { let totalCost = meal_cost * (1 + (tip_percent / 100) + (tax_percent / 100)); console.log(Math.round(totalCost));}","link":"/2019/06/15/algorithm/hackerrank/Day2_Operator/"},{"title":"Day8 Dictionaries and Maps","text":"ObjectiveToday, we’re learning about Key-Value pair mappings using a Map or Dictionary data structure. Check out the Tutorial tab for learning materials and an instructional video! TaskGiven n names and phone numbers, assemble a phone book that maps friends’ names to their respective phone numbers. You will then be given an unknown number of names to query your phone book for. For each name queried, print the associated entry from your phone book on a new line in the form name=phoneNumber; if an entry for name is not found, print Not found instead. Note: Your phone book should be a Dictionary/Map/HashMap data structure. Input FormatThe first line contains an integer, n, denoting the number of entries in the phone book.Each of the n subsequent lines describes an entry in the form of 2 space-separated values on a single line. The first value is a friend’s name, and the second value is an 8-digit phone number. After the n lines of phone book entries, there are an unknown number of lines of queries. Each line (query) contains a name to look up, and you must continue reading lines until there is no more input. Note: Names consist of lowercase English alphabetic letters and are first names only. Constraints 1 &lt;= n &lt;= 105 1 &lt;= queries &lt;= 105 Output FormatOn a new line for each query, print Not found if the name has no corresponding entry in the phone book; otherwise, print the full name and phoneNumber in the format name=phoneNumber. Sample Input12345673sam 99912222tom 11122222harry 12299933samedwardharry Sample Output123sam=99912222Not foundharry=12299933 ExplanationWe add the following n = 3 (Key,Value) pairs to our map so it looks like this: phoneBook = {(sam, 99912222), (tom, 11122222), (harry, 12299933)} We then process each query and print key=value if the queried key is found in the map; otherwise, we print Not found. Query 0: samSam is one of the keys in our dictionary, so we print sam=99912222. Query 1: edwardEdward is not one of the keys in our dictionary, so we print Not found. Query 2: harryHarry is one of the keys in our dictionary, so we print harry=12299933. Solution 1123456789101112131415161718192021222324function processData(input) { //Enter your code here const { phoneBook, queries } = input.split('\\n').reduce((target, item, index) =&gt; { let total = !index ? item : target['total']; let { 0: key, 1: value } = item.split(' '); !index ? (target['total'] = total) : ( index &lt;= total ? (target['phoneBook'][key] = value) : target['queries'].push(item) ); return target; }, { total: 0, phoneBook: [], queries: [] }); queries.forEach((query) =&gt; { let value = phoneBook[String(query)]; console.log(value ? `${query}=${value}` : 'Not found'); });} Solution 212345678910111213141516function processData(input) { //Enter your code here const inputData = input.split('\\n'); const dataLength = Number(inputData.shift()); const phoneBook = new Map(); const queryData = inputData.reduce((target, item, index) =&gt; { index &lt; dataLength ? phoneBook.set(item.split(' ')[0], item.split(' ')[1]) : target.push(item); return target; }, []); queryData.forEach((val, index) =&gt; { console.log(phoneBook.get(val) ? `${val}=${phoneBook.get(val)}` : 'Not found'); })} Solution 3123456789101112131415161718192021222324252627function processData(input) { //Enter your code here const splitInput = input.split(\"\\n\"); const phoneBookSize = +splitInput[0]; const inputValue = splitInput.slice(phoneBookSize + 1); const temp = splitInput.slice(1, phoneBookSize + 1).map(list =&gt; { let result = { name: list.split(\" \")[0], phoneNumber: list.split(\" \")[1] }; return result; }); let phoneBook = []; for (let list of temp) { phoneBook[list.name] = list.phoneNumber; } for (let name of inputValue) { if (phoneBook[name]) { console.log(`${name}=${phoneBook[name]}`); } else { console.log('Not found') } }}","link":"/2019/06/15/algorithm/hackerrank/Day8_DictionariesAndMaps/"}],"tags":[{"name":"Algorithm","slug":"Algorithm","link":"/tags/Algorithm/"},{"name":"Programmers","slug":"Programmers","link":"/tags/Programmers/"},{"name":"HackerRank","slug":"HackerRank","link":"/tags/HackerRank/"}],"categories":[{"name":"Algorithm","slug":"Algorithm","link":"/categories/Algorithm/"},{"name":"Programmers","slug":"Algorithm/Programmers","link":"/categories/Algorithm/Programmers/"},{"name":"Level1","slug":"Algorithm/Programmers/Level1","link":"/categories/Algorithm/Programmers/Level1/"},{"name":"HackerRank","slug":"Algorithm/HackerRank","link":"/categories/Algorithm/HackerRank/"},{"name":"30DaysOfCode","slug":"Algorithm/HackerRank/30DaysOfCode","link":"/categories/Algorithm/HackerRank/30DaysOfCode/"}]}