<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>ALLEY</title>
    <link>https://alleyful.github.io/</link>
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>alley&#39;s blog for study</description>
    <pubDate>Wed, 10 Jul 2019 15:39:13 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>프로그래머스 - 가장 큰 수</title>
      <link>https://alleyful.github.io/2019/07/10/algorithm/programmers/level2-08/</link>
      <guid>https://alleyful.github.io/2019/07/10/algorithm/programmers/level2-08/</guid>
      <pubDate>Wed, 10 Jul 2019 14:01:28 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;문제-설명&quot;&gt;&lt;a href=&quot;#문제-설명&quot; class=&quot;headerlink&quot; title=&quot;문제 설명&quot;&gt;&lt;/a&gt;문제 설명&lt;/h2&gt;&lt;p&gt;0 또는 양의 정수가 주어졌을 때, &lt;code&gt;정수를 이어 붙여 만들 수 있는 가장 큰 수&lt;/code&gt;를 알아내 주세요.&lt;/p&gt;
&lt;p&gt;예를 들어, 주어진 정수가 [6, 10, 2]라면 [6102, 6210, 1062, 1026, 2610, 2106]를 만들 수 있고, 이중 가장 큰 수는 6210입니다.&lt;/p&gt;
&lt;p&gt;0 또는 양의 정수가 담긴 배열 numbers가 매개변수로 주어질 때, &lt;code&gt;순서를 재배치하여 만들 수 있는 가장 큰 수를 문자열로 바꾸어 return&lt;/code&gt; 하도록 solution 함수를 작성해주세요.&lt;/p&gt;
&lt;br&gt;
      
      </description>
      
      <content:encoded><![CDATA[<h2 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h2><p>0 또는 양의 정수가 주어졌을 때, <code>정수를 이어 붙여 만들 수 있는 가장 큰 수</code>를 알아내 주세요.</p><p>예를 들어, 주어진 정수가 [6, 10, 2]라면 [6102, 6210, 1062, 1026, 2610, 2106]를 만들 수 있고, 이중 가장 큰 수는 6210입니다.</p><p>0 또는 양의 정수가 담긴 배열 numbers가 매개변수로 주어질 때, <code>순서를 재배치하여 만들 수 있는 가장 큰 수를 문자열로 바꾸어 return</code> 하도록 solution 함수를 작성해주세요.</p><br><a id="more"></a><h2 id="제한-사항"><a href="#제한-사항" class="headerlink" title="제한 사항"></a>제한 사항</h2><ul><li>numbers의 길이는 1 이상 100,000 이하입니다.</li><li>numbers의 원소는 0 이상 1,000 이하입니다.</li><li>정답이 너무 클 수 있으니 문자열로 바꾸어 return 합니다.</li></ul><br><h2 id="입출력-예"><a href="#입출력-예" class="headerlink" title="입출력 예"></a>입출력 예</h2><table><thead><tr><th align="left">numbers</th><th align="left">return</th></tr></thead><tbody><tr><td align="left">[6, 10, 2]</td><td align="left">6210</td></tr><tr><td align="left">[3, 30, 34, 5, 9]</td><td align="left">9534330</td></tr></tbody></table><br><hr><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">solution</span>(<span class="hljs-params">numbers</span>) </span>&#123;</span><br><span class="line">    <span class="hljs-keyword">return</span> numbers.every(<span class="hljs-function"><span class="hljs-params">v</span> =&gt;</span> v === <span class="hljs-number">0</span>) </span><br><span class="line">    ? <span class="hljs-string">'0'</span> </span><br><span class="line">    : numbers.map(<span class="hljs-function"><span class="hljs-params">v</span> =&gt;</span> v.toString()).sort(<span class="hljs-function">(<span class="hljs-params">a, b</span>) =&gt;</span> (a+b) - (b+a)).reverse().join(<span class="hljs-string">''</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://alleyful.github.io/2019/07/10/algorithm/programmers/level2-08/#disqus_thread</comments>
    </item>
    
    <item>
      <title>HEXO - THEME(ICARUS)</title>
      <link>https://alleyful.github.io/2019/07/09/tools/hexo/hexo-guide-02/</link>
      <guid>https://alleyful.github.io/2019/07/09/tools/hexo/hexo-guide-02/</guid>
      <pubDate>Tue, 09 Jul 2019 14:38:37 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;HEXO-테마-설치하기&quot;&gt;&lt;a href=&quot;#HEXO-테마-설치하기&quot; class=&quot;headerlink&quot; title=&quot;HEXO 테마 설치하기&quot;&gt;&lt;/a&gt;HEXO 테마 설치하기&lt;/h2&gt;&lt;p&gt;hexo를 설치하면 기본적으로 &lt;code&gt;landscape&lt;/code&gt; 테마가 설치되어 있습니다.&lt;br&gt;하지만 직접 테마를 만들어 쓸 수 있도록 가이드를 제공하고 있습니다.&lt;br&gt;기본 설정을 수정해서 직접 테마를 만들어 사용하고 싶으시다면 &lt;a href=&quot;https://hexo.io/ko/docs/themes.html&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;HEXO THEME&lt;/a&gt;를 확인 해 주세요.&lt;/p&gt;
&lt;br&gt;
      
      </description>
      
      <content:encoded><![CDATA[<h2 id="HEXO-테마-설치하기"><a href="#HEXO-테마-설치하기" class="headerlink" title="HEXO 테마 설치하기"></a>HEXO 테마 설치하기</h2><p>hexo를 설치하면 기본적으로 <code>landscape</code> 테마가 설치되어 있습니다.<br>하지만 직접 테마를 만들어 쓸 수 있도록 가이드를 제공하고 있습니다.<br>기본 설정을 수정해서 직접 테마를 만들어 사용하고 싶으시다면 <a href="https://hexo.io/ko/docs/themes.html" rel="external nofollow noopener noreferrer" target="_blank">HEXO THEME</a>를 확인 해 주세요.</p><br><a id="more"></a><h3 id="테마찾기"><a href="#테마찾기" class="headerlink" title="테마찾기"></a>테마찾기</h3><p>기본 테마보다 이미 만들어진 다양한 스타일의 테마를 찾고 싶다면 <a href="https://hexo.io/themes/index.html" rel="external nofollow noopener noreferrer" target="_blank">Themes</a>에서 찾을 수 있습니다.<br>저는 ICARUS 테마를 설치하였습니다. 설치방법 및 사용방법은 비슷하기 문에 테마들 중 원하는 테마가 있는지 찾아보시기 바랍니다.</p><ul><li><a href="https://github.com/ppoffice/hexo-theme-icarus" rel="external nofollow noopener noreferrer" target="_blank">ICARUS GITHUB</a> </li><li><a href="https://blog.zhangruipeng.me/hexo-theme-icarus/" rel="external nofollow noopener noreferrer" target="_blank">블로그 미리보기</a></li></ul><br><h3 id="설치하기"><a href="#설치하기" class="headerlink" title="설치하기"></a>설치하기</h3><ul><li>hexo init을 했던 폴더로 이동해서 clone 해주세요.  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@glorious/demo@0.8.0/dist/gdemo.min.css"><script src="https://cdn.jsdelivr.net/npm/@glorious/demo@0.8.0/dist/gdemo.min.js"></script>            <div id="demo-teriminal-1" style="height: 70px"></div>            <script>        new GDemo('#demo-teriminal-1')          .openApp('terminal', {minHeight: '70px', windowTitle: 'zsh', promptString: '$'})          .command(`git clone https://github.com/ppoffice/hexo-theme-icarus.git themes/icarus -b`, {onCompleteDelay: 500})          .respond(``)          .end();    </script>  </li></ul><br><h3 id="환경설정"><a href="#환경설정" class="headerlink" title="환경설정"></a>환경설정</h3><ul><li><p>hexo의 <code>_config.yml</code>의 <code>THEME</code>를 기본이었던 landscape에서 icarus로 수정해주세요.</p>  <figure class="highlight plain hljs"><figcaption><span>_config.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">## Themes: https://hexo.io/themes/</span><br><span class="line">theme: icarus</span><br></pre></td></tr></table></figure><ul><li>icarus의 기본 테마 설치가 끝났습니다.</li><li><code>hexo s</code>로 로컬서버에서 확인 할 수 있습니다.</li></ul></li></ul><br><ul><li><p>Profile Sidebar Widget</p>  <figure class="highlight plain hljs"><figcaption><span>_config.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">-</span><br><span class="line">  type: profile</span><br><span class="line">  position: # show in left or right sidebar</span><br><span class="line">  author: # your name</span><br><span class="line">  author_title: # your title</span><br><span class="line">  location: # where are you</span><br><span class="line">  avatar: # path or url to your avatar image</span><br><span class="line">  gravatar: # your gravatar email</span><br><span class="line">  follow_link: # path or url to any page you want</span><br><span class="line">  social_links: # add links to your social network here</span><br><span class="line">  </span><br></pre></td></tr></table></figure><ul><li>profile 설정을 할 수 있습니다.</li></ul></li></ul><br><ul><li><p>Sidebar Widgets Overview</p>  <figure class="highlight plain hljs"><figcaption><span>_config.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">widgets:</span><br><span class="line">    -</span><br><span class="line">        type: category</span><br><span class="line">        position: left</span><br><span class="line">    -</span><br><span class="line">        type: tagcloud</span><br><span class="line">        position: left</span><br><span class="line">    -</span><br><span class="line">        type: recent_posts</span><br><span class="line">        position: right</span><br><span class="line">    -</span><br><span class="line">        type: archive</span><br><span class="line">        position: right</span><br><span class="line">    -</span><br><span class="line">        type: tag</span><br><span class="line">        position: right</span><br><span class="line">  </span><br></pre></td></tr></table></figure><ul><li>위젯의 위치를 설정할 수 있습니다.</li><li>왼쪽과 오른쪽으로 나눌 수 있으며, 한쪽으로 정렬할 경우 제 블로그처럼 컨텐츠 영역을 더욱 넢게 사용 할 수 있습니다.</li></ul></li></ul><br><ul><li><p>Make a Sidebar Sticky When Page Scrolls</p>  <figure class="highlight plain hljs"><figcaption><span>_config.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sidebar:</span><br><span class="line">    left:</span><br><span class="line">        sticky: false</span><br><span class="line">    right:</span><br><span class="line">        sticky: true</span><br></pre></td></tr></table></figure><ul><li>양쪽 위젯의 position sticky 값을 설정할 수 있습니다.</li><li>true : top 고</li></ul></li></ul><br><br><hr><h2 id="활용"><a href="#활용" class="headerlink" title="활용"></a>활용</h2><h3 id="Thumbnail"><a href="#Thumbnail" class="headerlink" title="Thumbnail"></a>Thumbnail</h3><ul><li><p>thumbnail의 사용 유무를 설정 할 수 있습니다.</p><ul><li><p>_config.yml</p><figure class="highlight plain hljs"><figcaption><span>_config.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">article:</span><br><span class="line">     thumbnail: true</span><br></pre></td></tr></table></figure>  </li><li><p>post의 front-matter</p><figure class="highlight plain hljs"><figcaption><span>post.md</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">title: Getting Started with Icarus</span><br><span class="line">thumbnail: /gallery/thumbnails/desert.jpg</span><br><span class="line">---</span><br><span class="line">내용</span><br></pre></td></tr></table></figure></li></ul></li></ul><br><h3 id="Table-of-Contents-Catalogue"><a href="#Table-of-Contents-Catalogue" class="headerlink" title="Table of Contents / Catalogue"></a>Table of Contents / Catalogue</h3><ul><li><p>Post 내 컨텐츠의 목차를 보여줄 수 있습니다. 오른쪽에 보이는 <code>CATALOGUE</code>의 형태로 보여집니다.</p><ul><li><p>post의 front-matter</p><figure class="highlight plain hljs"><figcaption><span>post.md</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">title: Table of Contents Example</span><br><span class="line">toc: true</span><br><span class="line">---</span><br><span class="line">내용</span><br></pre></td></tr></table></figure></li><li><p>_config.yml</p><figure class="highlight plain hljs"><figcaption><span>_config.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">widgets:</span><br><span class="line">     -</span><br><span class="line">         type: toc</span><br><span class="line">         position: left</span><br></pre></td></tr></table></figure>  </li></ul></li></ul><br><h3 id="Block-Quote"><a href="#Block-Quote" class="headerlink" title="Block Quote"></a>Block Quote</h3><ul><li><p>blockquote 타입의 컨텐츠를 보여줄 수 있습니다.</p><ul><li><p>No arguments</p><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% blockquote %&#125;</span><br><span class="line">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.</span><br><span class="line">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure><br><blockquote><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.</p></blockquote><br></li><li><p>Quote from an article on the web</p><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% blockquote Seth Godin https:<span class="hljs-comment">//alleyful.github.io/2019/07/07/tools/hexo/hexo-guide-01/ HEXO - 시작하기 %&#125;</span></span><br><span class="line">HEXO - 시작하기</span><br><span class="line">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure><br><blockquote><p>HEXO - 시작하기</p><footer><strong>Seth Godin</strong><cite><a href="https://alleyful.github.io/2019/07/07/tools/hexo/hexo-guide-01/">HEXO - 시작하기</a></cite></footer></blockquote></li></ul><br></li></ul><h3 id="Code-Block"><a href="#Code-Block" class="headerlink" title="Code Block"></a>Code Block</h3><ul><li><p>code형태의 컨텐츠를 보여줄 수 있습니다.</p><ul><li><p>기본형태</p><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% codeblock [title] [lang:language] [url] [link text] %&#125;</span><br><span class="line">code snippet</span><br><span class="line">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure><br></li><li><p>Adding a caption to the code block</p><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% codeblock <span class="hljs-built_in">Array</span>.map %&#125;</span><br><span class="line"> array.map(callback[, thisArg])</span><br><span class="line"> &#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure><br><figure class="highlight plain hljs"><figcaption><span>Array.map</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">array.map(callback[, thisArg])</span><br></pre></td></tr></table></figure><br></li><li><p>Adding a caption and a URL</p><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% codeblock _.compact http:<span class="hljs-comment">//underscorejs.org/#compact Underscore.js %&#125;</span></span><br><span class="line">_.compact([<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-literal">false</span>, <span class="hljs-number">2</span>, <span class="hljs-string">''</span>, <span class="hljs-number">3</span>]);</span><br><span class="line">=&gt; [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>]</span><br><span class="line">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure><br><figure class="highlight plain hljs"><figcaption><span>_.compact</span><a href="http://underscorejs.org/#compact" rel="external nofollow noopener noreferrer" target="_blank">Underscore.js</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">_.compact([0, 1, false, 2, &apos;&apos;, 3]);</span><br><span class="line">=&gt; [1, 2, 3]</span><br></pre></td></tr></table></figure></li></ul></li></ul><br><h3 id="ETC"><a href="#ETC" class="headerlink" title="ETC."></a>ETC.</h3><ul><li>Pull Quote</li><li>jsFiddle</li><li>Gist</li><li>iframe</li><li>Image</li><li>Link</li><li>YouTube</li><li>Vimeo</li></ul><p>등 많은 helper 들의 사용법을 <a href="https://blog.zhangruipeng.me/hexo-theme-icarus/Configuration/Posts/hexo-built-in-tag-helpers/" rel="external nofollow noopener noreferrer" target="_blank">여기</a>에서 확인 할 수 있습니다.</p><br><br><hr><h2 id="HEXO-BLOG-검색-엔진-최적화-SEO"><a href="#HEXO-BLOG-검색-엔진-최적화-SEO" class="headerlink" title="HEXO BLOG 검색 엔진 최적화(SEO)"></a>HEXO BLOG 검색 엔진 최적화(SEO)</h2><p>내가 만든 블로그가 검색 될 수 있도록 해보도록 할까요?<br>다음글에서는 HEXO BLOG의 검색 최적화에 도전해 보도록 하겠습니다.</p><br>]]></content:encoded>
      
      <comments>https://alleyful.github.io/2019/07/09/tools/hexo/hexo-guide-02/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Time Conversion</title>
      <link>https://alleyful.github.io/2019/07/09/algorithm/hackerrank/09_TimeConversion/</link>
      <guid>https://alleyful.github.io/2019/07/09/algorithm/hackerrank/09_TimeConversion/</guid>
      <pubDate>Tue, 09 Jul 2019 14:30:10 GMT</pubDate>
      <description>
      
        &lt;p&gt;Given a time in &lt;code&gt;12-hour AM/PM format&lt;/code&gt;, convert it to military (24-hour) time.&lt;/p&gt;
&lt;p&gt;Note: Midnight is 12:00:00AM on a 12-hour clock, and 00:00:00 on a 24-hour clock. Noon is 12:00:00PM on a 12-hour clock, and 12:00:00 on a 24-hour clock.&lt;/p&gt;
&lt;br&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p>Given a time in <code>12-hour AM/PM format</code>, convert it to military (24-hour) time.</p><p>Note: Midnight is 12:00:00AM on a 12-hour clock, and 00:00:00 on a 24-hour clock. Noon is 12:00:00PM on a 12-hour clock, and 12:00:00 on a 24-hour clock.</p><br><a id="more"></a><h2 id="Function-Description"><a href="#Function-Description" class="headerlink" title="Function Description"></a>Function Description</h2><p>Complete the timeConversion function in the editor below. It should return a new string representing the input time in 24 hour format.</p><p>timeConversion has the following parameter(s):</p><ul><li>s: a string representing time in  hour format</li></ul><br><h2 id="Input-Format"><a href="#Input-Format" class="headerlink" title="Input Format"></a>Input Format</h2><p>A single string  containing a time in 12-hour clock format (i.e.: <strong>hh:mm:ssAM</strong> or <strong>hh:mm:ssPM</strong>), where <img src="https://latex.codecogs.com/gif.latex?01%5Cleq&space;hh%5Cleq&space;12" alt> and <img src="https://latex.codecogs.com/gif.latex?00%5Cleq&space;mm,&space;ss%5Cleq&space;59" alt>.</p><br><h2 id="Constraints"><a href="#Constraints" class="headerlink" title="Constraints"></a>Constraints</h2><ul><li>All input times are valid</li></ul><br><h2 id="Output-Format"><a href="#Output-Format" class="headerlink" title="Output Format"></a>Output Format</h2><p>Convert and print the given time in 24-hour format, where <img src="https://latex.codecogs.com/gif.latex?00%5Cleq&space;hh%5Cleq&space;23" alt>.</p><br><h2 id="Sample-Input-0"><a href="#Sample-Input-0" class="headerlink" title="Sample Input 0"></a>Sample Input 0</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">07:05:45PM</span><br></pre></td></tr></table></figure><br><h2 id="Sample-Output-0"><a href="#Sample-Output-0" class="headerlink" title="Sample Output 0"></a>Sample Output 0</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">19:05:45</span><br></pre></td></tr></table></figure><br><hr><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">timeConversion</span>(<span class="hljs-params">s</span>) </span>&#123;</span><br><span class="line">    <span class="hljs-keyword">let</span> time = s.match(<span class="hljs-regexp">/(\d|\:)/ig</span>);</span><br><span class="line">    <span class="hljs-keyword">let</span> tag = s.match(<span class="hljs-regexp">/(A|P)/ig</span>).join(<span class="hljs-string">''</span>);</span><br><span class="line"></span><br><span class="line">    <span class="hljs-keyword">return</span> time.join(<span class="hljs-string">''</span>).split(<span class="hljs-string">':'</span>).map(<span class="hljs-function">(<span class="hljs-params">v, i</span>) =&gt;</span> &#123; </span><br><span class="line">        <span class="hljs-keyword">return</span> i === <span class="hljs-number">0</span> ? (</span><br><span class="line">            tag.match(<span class="hljs-regexp">/P/i</span>)</span><br><span class="line">                ? <span class="hljs-built_in">Number</span>(v) === <span class="hljs-number">0</span> ? <span class="hljs-string">'00'</span> : (<span class="hljs-built_in">Number</span>(v) % <span class="hljs-number">12</span>) + <span class="hljs-number">12</span></span><br><span class="line">                : <span class="hljs-built_in">Number</span>(v) % <span class="hljs-number">12</span> === <span class="hljs-number">0</span> ? <span class="hljs-string">'00'</span> : v</span><br><span class="line">        ) : v</span><br><span class="line">    &#125;).join(<span class="hljs-string">':'</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://alleyful.github.io/2019/07/09/algorithm/hackerrank/09_TimeConversion/#disqus_thread</comments>
    </item>
    
    <item>
      <title>프로그래머스 - 다리를 지나는 트럭</title>
      <link>https://alleyful.github.io/2019/07/08/algorithm/programmers/level2-07/</link>
      <guid>https://alleyful.github.io/2019/07/08/algorithm/programmers/level2-07/</guid>
      <pubDate>Mon, 08 Jul 2019 12:41:46 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;문제-설명&quot;&gt;&lt;a href=&quot;#문제-설명&quot; class=&quot;headerlink&quot; title=&quot;문제 설명&quot;&gt;&lt;/a&gt;문제 설명&lt;/h2&gt;&lt;p&gt;트럭 여러 대가 강을 가로지르는 &lt;code&gt;일 차선 다리를 정해진 순&lt;/code&gt;으로 건너려 합니다. &lt;code&gt;모든 트럭이 다리를 건너려면 최소 몇 초가 걸리는지&lt;/code&gt; 알아내야 합니다. 트럭은 1초에 1만큼 움직이며, 다리 길이는 bridge_length이고 다리는 무게 weight까지 견딥니다.  &lt;/p&gt;
&lt;p&gt;※ 트럭이 다리에 완전히 오르지 않은 경우, 이 트럭의 무게는 고려하지 않습니다.  &lt;/p&gt;
&lt;br&gt;
      
      </description>
      
      <content:encoded><![CDATA[<h2 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h2><p>트럭 여러 대가 강을 가로지르는 <code>일 차선 다리를 정해진 순</code>으로 건너려 합니다. <code>모든 트럭이 다리를 건너려면 최소 몇 초가 걸리는지</code> 알아내야 합니다. 트럭은 1초에 1만큼 움직이며, 다리 길이는 bridge_length이고 다리는 무게 weight까지 견딥니다.  </p><p>※ 트럭이 다리에 완전히 오르지 않은 경우, 이 트럭의 무게는 고려하지 않습니다.  </p><br><a id="more"></a><p>예를 들어, 길이가 2이고 10kg 무게를 견디는 다리가 있습니다. 무게가 [7, 4, 5, 6]kg인 트럭이 순서대로 최단 시간 안에 다리를 건너려면 다음과 같이 건너야 합니다.</p><table><thead><tr><th align="center">경과 시간</th><th align="center">다리를 지난 트럭</th><th align="center">다리를 건너는 트럭</th><th align="center">대기 트럭</th></tr></thead><tbody><tr><td align="center">0</td><td align="center">[]</td><td align="center">[]</td><td align="center">[7,4,5,6]</td></tr><tr><td align="center">1~2</td><td align="center">[]</td><td align="center">[7]</td><td align="center">[4,5,6]</td></tr><tr><td align="center">3</td><td align="center">[7]</td><td align="center">[4]</td><td align="center">[5,6]</td></tr><tr><td align="center">4</td><td align="center">[7]</td><td align="center">[4,5]</td><td align="center">[6]</td></tr><tr><td align="center">5</td><td align="center">[7,4]</td><td align="center">[5]</td><td align="center">[6]</td></tr><tr><td align="center">6~7</td><td align="center">[7,4,5]</td><td align="center">[6]</td><td align="center">[]</td></tr><tr><td align="center">8</td><td align="center">[7,4,5,6]</td><td align="center">[]</td><td align="center">[]</td></tr></tbody></table><p>따라서, 모든 트럭이 다리를 지나려면 최소 8초가 걸립니다.</p><p>solution 함수의 매개변수로 다리 길이 bridgelength, 다리가 견딜 수 있는 무게 weight, 트럭별 무게 truckweights가 주어집니다. 이때 모든 트럭이 다리를 건너려면 최소 몇 초가 걸리는지 return 하도록 solution 함수를 완성하세요.</p><br><h2 id="제한-조건"><a href="#제한-조건" class="headerlink" title="제한 조건"></a>제한 조건</h2><ul><li>bridge_length는 1 이상 10,000 이하입니다.</li><li>weight는 1 이상 10,000 이하입니다.</li><li>truck_weights의 길이는 1 이상 10,000 이하입니다.</li><li>모든 트럭의 무게는 1 이상 weight 이하입니다.</li></ul><br><h2 id="입출력-예"><a href="#입출력-예" class="headerlink" title="입출력 예"></a>입출력 예</h2><table><thead><tr><th align="left">bridge_length</th><th align="left">weight</th><th align="left">truck_weights</th><th align="left">return</th></tr></thead><tbody><tr><td align="left">2</td><td align="left">10</td><td align="left">[7,4,5,6]</td><td align="left">8</td></tr><tr><td align="left">100</td><td align="left">100</td><td align="left">[10]</td><td align="left">101</td></tr><tr><td align="left">100</td><td align="left">100</td><td align="left">[10,10,10,10,10,10,10,10,10,10]</td><td align="left">110</td></tr></tbody></table><br><hr><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">solution</span>(<span class="hljs-params">bridge_length, weight, truck_weights</span>) </span>&#123;</span><br><span class="line">    <span class="hljs-keyword">let</span> on_bridge = [];</span><br><span class="line">    <span class="hljs-keyword">let</span> time = <span class="hljs-number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="hljs-keyword">while</span>(on_bridge.length &gt; <span class="hljs-number">0</span> || truck_weights.length &gt; <span class="hljs-number">0</span>)&#123;    </span><br><span class="line">        on_bridge = on_bridge.reduce(<span class="hljs-function">(<span class="hljs-params">target, truck</span>) =&gt;</span> &#123;</span><br><span class="line">            truck[<span class="hljs-string">'delay'</span>] = truck[<span class="hljs-string">'delay'</span>] - <span class="hljs-number">1</span>;</span><br><span class="line">            truck[<span class="hljs-string">'delay'</span>] &gt; <span class="hljs-number">0</span> &amp;&amp; target.push(truck);            </span><br><span class="line">            <span class="hljs-keyword">return</span> target;</span><br><span class="line">        &#125;, []);</span><br><span class="line">        </span><br><span class="line">        <span class="hljs-keyword">let</span> sum = on_bridge.reduce(<span class="hljs-function">(<span class="hljs-params">target, truck</span>) =&gt;</span> target + truck[<span class="hljs-string">'weight'</span>], <span class="hljs-number">0</span>);</span><br><span class="line">        </span><br><span class="line">        ((sum + truck_weights[<span class="hljs-number">0</span>] &lt;= weight) &amp;&amp; (on_bridge.length &lt; bridge_length)) </span><br><span class="line">        &amp;&amp; on_bridge.push(&#123;<span class="hljs-string">'weight'</span>:truck_weights.shift(), <span class="hljs-string">'delay'</span>: bridge_length&#125;);</span><br><span class="line">              </span><br><span class="line">        ++time;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="hljs-keyword">return</span> time;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://alleyful.github.io/2019/07/08/algorithm/programmers/level2-07/#disqus_thread</comments>
    </item>
    
    <item>
      <title>HEXO - 시작하기</title>
      <link>https://alleyful.github.io/2019/07/07/tools/hexo/hexo-guide-01/</link>
      <guid>https://alleyful.github.io/2019/07/07/tools/hexo/hexo-guide-01/</guid>
      <pubDate>Sun, 07 Jul 2019 11:28:44 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;정적-블로그-HEXO-시작해보기&quot;&gt;&lt;a href=&quot;#정적-블로그-HEXO-시작해보기&quot; class=&quot;headerlink&quot; title=&quot;정적 블로그, HEXO 시작해보기&quot;&gt;&lt;/a&gt;정적 블로그, HEXO 시작해보기&lt;/h2&gt;&lt;p&gt;프론트엔트 개발을 시작하면서 그동안 공부해오던 것을 정리해야할 필요성이 생겼습니다.&lt;br&gt;좋은 자료, 세미나, 기술 서적, 스터디, 개발하면서 느꼈던 점 등을 정리하고 그 흔적을 남겨보고자 블로그를 시작하게 되었습니다. &lt;/p&gt;
&lt;p&gt;설치형 블로그, 서비스형 블로그, 동적 혹은 정적 블로그 등 설치 방법과 사용방법에 따라 다양하게 나뉘고 있는 블로그들 중 설치형 정적 블로그로 말할 수 있는 &lt;code&gt;HEXO&lt;/code&gt;를 사용하게 되었고, 그 방법을 공유하고자 합니다.&lt;/p&gt;
&lt;br&gt;
      
      </description>
      
      <content:encoded><![CDATA[<h2 id="정적-블로그-HEXO-시작해보기"><a href="#정적-블로그-HEXO-시작해보기" class="headerlink" title="정적 블로그, HEXO 시작해보기"></a>정적 블로그, HEXO 시작해보기</h2><p>프론트엔트 개발을 시작하면서 그동안 공부해오던 것을 정리해야할 필요성이 생겼습니다.<br>좋은 자료, 세미나, 기술 서적, 스터디, 개발하면서 느꼈던 점 등을 정리하고 그 흔적을 남겨보고자 블로그를 시작하게 되었습니다. </p><p>설치형 블로그, 서비스형 블로그, 동적 혹은 정적 블로그 등 설치 방법과 사용방법에 따라 다양하게 나뉘고 있는 블로그들 중 설치형 정적 블로그로 말할 수 있는 <code>HEXO</code>를 사용하게 되었고, 그 방법을 공유하고자 합니다.</p><br><a id="more"></a><h3 id="공식-사이트에서-얘기하는-HEXO"><a href="#공식-사이트에서-얘기하는-HEXO" class="headerlink" title="공식 사이트에서 얘기하는 HEXO!"></a>공식 사이트에서 얘기하는 HEXO!</h3><p> Node.js 기반의 정적사이트 생성기(Static site generator)의 일종으로 <code>빠르고 간단하고 강력한 블로그 프레임워크</code>입니다.</p><ol><li><p><code>엄청나게 빠른 속도</code>  </p><ul><li>Node.js는 몇 초만에 수백개의 파일을 빌드할 수 있을 정도로 빠른 생성 속도를 제공합니다.</li></ul></li><li><p><code>Markdown 지원</code>  </p><ul><li>친화적인 Markdown의 모든 기능을 지원하며 거의 모든 Octopress 플러그인들을 사용할 수 있습니다.</li></ul></li><li><p><code>한 번의 명령으로 Deployment 하기</code>  </p><ul><li>단지 하나의 명령어로 당신의 웹 사이트를 GitHub나 Heroku에 deploy할 수 있습니다.</li></ul></li><li><p><code>다양한 플러그인</code>  </p><ul><li>Hexo는 강력한 플러그인 시스템을 가지고 있습니다. 사용자는 Jade와 CoffeeScript를 위한 플러그인들을 설치할 수도 있습니다.</li></ul></li></ol><br><hr><br><h2 id="설치하기"><a href="#설치하기" class="headerlink" title="설치하기"></a>설치하기</h2><h3 id="설치전-확인"><a href="#설치전-확인" class="headerlink" title="설치전 확인"></a>설치전 확인</h3><p>Git과 Node.js가 설치 되어 있어야 합니다. 설치되지 않았다면 아래 경로에서 확인해 주세요.</p><ul><li><a href="https://nodejs.org/en/" rel="external nofollow noopener noreferrer" target="_blank">Node.js</a> - 6.9 이상  </li><li><a href="https://git-scm.com/" rel="external nofollow noopener noreferrer" target="_blank">Git</a></li></ul><br><h3 id="HEXO-INSTALL"><a href="#HEXO-INSTALL" class="headerlink" title="HEXO INSTALL"></a>HEXO INSTALL</h3><ul><li><p><a href="https://hexo.io/ko/docs/setup" rel="external nofollow noopener noreferrer" target="_blank">Hexo</a> 공식 사이트에 간단한 설치방법과 사용법이 나와있습니다. </p>  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@glorious/demo@0.8.0/dist/gdemo.min.css"><script src="https://cdn.jsdelivr.net/npm/@glorious/demo@0.8.0/dist/gdemo.min.js"></script>            <div id="demo-teriminal1" style="height: 70px"></div>            <script>        new GDemo('#demo-teriminal1')          .openApp('terminal', {minHeight: '70px', windowTitle: 'zsh', promptString: '$'})          .command(`npm install -g hexo-cli`, {onCompleteDelay: 500})          .respond(``)          .end();    </script><ul><li><p>hexo-cli를 global로 설치해주세요.</p><br></li></ul></li></ul><h3 id="HEXO-INIT"><a href="#HEXO-INIT" class="headerlink" title="HEXO INIT"></a>HEXO INIT</h3><ul><li><p>hexo를 설치할 폴더에 <code>init으로 기본 파일을 생성</code>해 주세요.</p>  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@glorious/demo@0.8.0/dist/gdemo.min.css"><script src="https://cdn.jsdelivr.net/npm/@glorious/demo@0.8.0/dist/gdemo.min.js"></script>            <div id="demo-teriminal2-1" style="height: 70px"></div>            <script>        new GDemo('#demo-teriminal2-1')          .openApp('terminal', {minHeight: '70px', windowTitle: 'zsh', promptString: '$'})          .command(`hexo init <folder>`, {onCompleteDelay: 500})          .respond(``)          .end();    </script>  <br>  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@glorious/demo@0.8.0/dist/gdemo.min.css"><script src="https://cdn.jsdelivr.net/npm/@glorious/demo@0.8.0/dist/gdemo.min.js"></script>            <div id="demo-teriminal2-2" style="height: 70px"></div>            <script>        new GDemo('#demo-teriminal2-2')          .openApp('terminal', {minHeight: '70px', windowTitle: 'zsh', promptString: '$'})          .command(`cd <folder>`, {onCompleteDelay: 500})          .respond(`  `)          .end();    </script>  <br>  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@glorious/demo@0.8.0/dist/gdemo.min.css"><script src="https://cdn.jsdelivr.net/npm/@glorious/demo@0.8.0/dist/gdemo.min.js"></script>            <div id="demo-teriminal2-3" style="height: 70px"></div>            <script>        new GDemo('#demo-teriminal2-3')          .openApp('terminal', {minHeight: '70px', windowTitle: 'zsh', promptString: '$'})          .command(`npm install`, {onCompleteDelay: 500})          .respond(`  `)          .end();    </script><ul><li><p>기본 설정이 된 폴더로 이동을 한 후 npm install을 해주세요.</p></li><li><p>초기화가 완료되었다면 아래와 같은 폴더구조를 확인 할 수 있습니다.</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds</span><br><span class="line">├── source</span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">└── themes</span><br></pre></td></tr></table></figure></li></ul></li></ul><br><h3 id="HEXO-SERVER"><a href="#HEXO-SERVER" class="headerlink" title="HEXO SERVER"></a>HEXO SERVER</h3><ul><li><p><code>hexo server</code> 또는 <code>hexo s</code>를 명령어를 사용하여 로컬 서버에서 블로그를 확인 할 수 있습니다.</p>  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@glorious/demo@0.8.0/dist/gdemo.min.css"><script src="https://cdn.jsdelivr.net/npm/@glorious/demo@0.8.0/dist/gdemo.min.js"></script>            <div id="demo-teriminal3" style="height: 70px"></div>            <script>        new GDemo('#demo-teriminal3')          .openApp('terminal', {minHeight: '70px', windowTitle: 'zsh', promptString: '$'})          .command(`hexo server`, {onCompleteDelay: 500})          .respond(``)          .end();    </script><ul><li>localhost:4000 에서 확인 할 수 있습니다.</li></ul></li></ul><br><hr><br><h2 id="글쓰기"><a href="#글쓰기" class="headerlink" title="글쓰기"></a>글쓰기</h2><h3 id="새글-작성"><a href="#새글-작성" class="headerlink" title="새글 작성"></a>새글 작성</h3><ul><li><code>hexo new [layout] &lt;title&gt;</code> 사용하여 새글 작성을 할 수 있습니다.</li></ul><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@glorious/demo@0.8.0/dist/gdemo.min.css"><script src="https://cdn.jsdelivr.net/npm/@glorious/demo@0.8.0/dist/gdemo.min.js"></script>            <div id="demo-teriminal4" style="height: 70px"></div>            <script>        new GDemo('#demo-teriminal4')          .openApp('terminal', {minHeight: '70px', windowTitle: 'zsh', promptString: '$'})          .command(`hexo new test.md`, {onCompleteDelay: 500})          .respond(``)          .end();    </script><ul><li>명령어를 사용하면 <code>/scaffolds/</code>의 md 파일을 스캐폴딩 합니다.</li><li>발행되지 않는 형태의 초안 문서를 작성하고 싶은 경우 [layout]에 draft를 사용해 줍니다.</li><li>아래와 같은 경로에 markdown 문서가 만들어 집니다.</li></ul><pre><code class="terminal">.└── source   ├── _drafts   └── _posts      └── test.md</code></pre><br><h3 id="Front-matter"><a href="#Front-matter" class="headerlink" title="Front-matter"></a>Front-matter</h3><ul><li>생성된 test.md에서 <code>타이틀</code> 및 <code>발행시간</code>, <code>카테고리</code>, <code>테마</code> 등을 수정할 수 있습니다.</li></ul><figure class="highlight plain hljs"><figcaption><span>test.md</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 첫번째 포스팅입니다.</span><br><span class="line">categories:</span><br><span class="line">- TOOL</span><br><span class="line">- HEXO</span><br><span class="line">tags:</span><br><span class="line">- HEXO</span><br><span class="line">- BLOG</span><br><span class="line">date: 2019-07-06 22:15:19</span><br><span class="line">---</span><br></pre></td></tr></table></figure><ul><li><a href="https://hexo.io/docs/front-matter.html" rel="external nofollow noopener noreferrer" target="_blank">Front-matter</a>는 YAML 또는 JSON 형태로 작성할 수 있습니다.</li><li><code>[</code>, <code>:</code> …등의 문자는 제목에 들어가면 오류가 날 수 있습니다. “”로 감싸서 사용해주세요.</li></ul><br><h3 id="Publish"><a href="#Publish" class="headerlink" title="Publish"></a>Publish</h3><ul><li>post에 바로 발행하지 않고 deaft문서를 작성했다면 publish를 이용해 발행해 줍니다.<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@glorious/demo@0.8.0/dist/gdemo.min.css"><script src="https://cdn.jsdelivr.net/npm/@glorious/demo@0.8.0/dist/gdemo.min.js"></script>            <div id="demo-teriminal5" style="height: 70px"></div>            <script>        new GDemo('#demo-teriminal5')          .openApp('terminal', {minHeight: '70px', windowTitle: 'zsh', promptString: '$'})          .command(`hexo publish`, {onCompleteDelay: 500})          .respond(``)          .end();    </script></li></ul><br><hr><br><h2 id="배포하기-Deploy"><a href="#배포하기-Deploy" class="headerlink" title="배포하기(Deploy)"></a>배포하기(Deploy)</h2><h3 id="깃-저장소-확인"><a href="#깃-저장소-확인" class="headerlink" title="깃 저장소 확인"></a>깃 저장소 확인</h3><ul><li>저장소 2개를 준비합니다.<ul><li>정적파일이 deploy되는 <code>(githubID).github.io</code></li><li>hexo 블로그 및 md 파일을 관리할 수 있는 repository (ex. blog)</li></ul></li></ul><br><h3 id="환경설정"><a href="#환경설정" class="headerlink" title="환경설정"></a>환경설정</h3><ul><li>_config.yml 파일을 수정해 주세요.<figure class="highlight plain hljs"><figcaption><span>_config.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># URL</span><br><span class="line">url: https://alleyful.github.io //(githubID).github.io</span><br><span class="line">root: /</span><br><span class="line">permalink: :year/:month/:day/:title/</span><br><span class="line">permalink_defaults:</span><br><span class="line"></span><br><span class="line"># Deployment</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https://github.com/alleyful/alleyful.github.io.git //gihub pages repository</span><br><span class="line">  branch : master</span><br></pre></td></tr></table></figure></li></ul><br><h3 id="hexo-generate"><a href="#hexo-generate" class="headerlink" title="hexo generate"></a>hexo generate</h3><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@glorious/demo@0.8.0/dist/gdemo.min.css"><script src="https://cdn.jsdelivr.net/npm/@glorious/demo@0.8.0/dist/gdemo.min.js"></script>            <div id="demo-teriminal6" style="height: 70px"></div>            <script>        new GDemo('#demo-teriminal6')          .openApp('terminal', {minHeight: '70px', windowTitle: 'zsh', promptString: '$'})          .command(`hexo generate`, {onCompleteDelay: 500})          .respond(``)          .end();    </script><ul><li>정적파일을 생성해 public폴더에 넣어줍니다.</li></ul><br><h3 id="hexo-deploy"><a href="#hexo-deploy" class="headerlink" title="hexo deploy"></a>hexo deploy</h3><ol><li>deploy를 하기 위해서 <code>hexo-deploy-git</code> 플러그인을 먼저 설치해 주세요.</li></ol><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@glorious/demo@0.8.0/dist/gdemo.min.css"><script src="https://cdn.jsdelivr.net/npm/@glorious/demo@0.8.0/dist/gdemo.min.js"></script>            <div id="demo-teriminal7" style="height: 70px"></div>            <script>        new GDemo('#demo-teriminal7')          .openApp('terminal', {minHeight: '70px', windowTitle: 'zsh', promptString: '$'})          .command(`npm install hexo-deploy-git --save`, {onCompleteDelay: 500})          .respond(``)          .end();    </script>    <br><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@glorious/demo@0.8.0/dist/gdemo.min.css"><script src="https://cdn.jsdelivr.net/npm/@glorious/demo@0.8.0/dist/gdemo.min.js"></script>            <div id="demo-teriminal8" style="height: 70px"></div>            <script>        new GDemo('#demo-teriminal8')          .openApp('terminal', {minHeight: '70px', windowTitle: 'zsh', promptString: '$'})          .command(`hexo deploy`, {onCompleteDelay: 500})          .respond(``)          .end();    </script>    <ul><li>플러그인을 설치 한 후 deploy를 해줍니다. </li><li>Github Pages에서 확인 할 수 있습니다.<ul><li><code>https://&lt;계정이름&gt;.github.io</code></li></ul></li></ul><br><h3 id="hexo-blog-버전관리"><a href="#hexo-blog-버전관리" class="headerlink" title="hexo blog 버전관리"></a>hexo blog 버전관리</h3><ul><li>위에서 만들어 놓은 repository 중 blog(또는 원하는 이름의 저장소)를 사용해 주세요.</li></ul><br><br><hr><h2 id="테마적용도-해볼까요"><a href="#테마적용도-해볼까요" class="headerlink" title="테마적용도 해볼까요."></a>테마적용도 해볼까요.</h2><p>HEXO를 설치하고 POST를 작성한 후 Git Pages에 Deploy까지 해 보았습니다.<br>다음글에는 HEXO Theme를 사용하여 블로그에 원하는 layout과 스타일을 적용해 보도록 하겠습니다.</p><br>]]></content:encoded>
      
      <comments>https://alleyful.github.io/2019/07/07/tools/hexo/hexo-guide-01/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Birthday Cake Candles</title>
      <link>https://alleyful.github.io/2019/07/06/algorithm/hackerrank/08_BirthdayCakeCandles/</link>
      <guid>https://alleyful.github.io/2019/07/06/algorithm/hackerrank/08_BirthdayCakeCandles/</guid>
      <pubDate>Sat, 06 Jul 2019 13:15:19 GMT</pubDate>
      <description>
      
        &lt;p&gt;You are in charge of the cake for your niece’s birthday and have decided the cake will have one candle for each year of her total age. When she blows out the candles, she’ll only be able to blow out the tallest ones. Your task is to find out how many candles she can successfully blow out.&lt;/p&gt;
&lt;p&gt;For example, if your niece is turning &lt;code&gt;4&lt;/code&gt; years old, and the cake will have &lt;code&gt;4&lt;/code&gt; candles of height &lt;code&gt;4, 4, 1, 3&lt;/code&gt;, she will be able to blow out &lt;code&gt;2&lt;/code&gt; candles successfully, since the tallest candles are of height &lt;code&gt;4&lt;/code&gt; and there are &lt;code&gt;2&lt;/code&gt; such candles.&lt;/p&gt;
&lt;br&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p>You are in charge of the cake for your niece’s birthday and have decided the cake will have one candle for each year of her total age. When she blows out the candles, she’ll only be able to blow out the tallest ones. Your task is to find out how many candles she can successfully blow out.</p><p>For example, if your niece is turning <code>4</code> years old, and the cake will have <code>4</code> candles of height <code>4, 4, 1, 3</code>, she will be able to blow out <code>2</code> candles successfully, since the tallest candles are of height <code>4</code> and there are <code>2</code> such candles.</p><br><a id="more"></a><h2 id="Function-Description"><a href="#Function-Description" class="headerlink" title="Function Description"></a>Function Description</h2><p>Complete the function birthdayCakeCandles in the editor below. It must return an integer representing the number of candles she can blow out.</p><p>birthdayCakeCandles has the following parameter(s):</p><ul><li>ar: an array of integers representing candle heights</li></ul><br><h2 id="Input-Format"><a href="#Input-Format" class="headerlink" title="Input Format"></a>Input Format</h2><p>The first line contains a single integer, <strong>n</strong>, denoting the number of candles on the cake.<br>The second line contains <strong>n</strong> space-separated integers, where each integer <strong>i</strong> describes the height of candle <strong>i</strong>.</p><br><h2 id="Constraints"><a href="#Constraints" class="headerlink" title="Constraints"></a>Constraints</h2><ul><li><img src="https://latex.codecogs.com/gif.latex?1%5Cleq&space;n%5Cleq&space;10%5E%7B5%7D" alt></li><li><img src="https://latex.codecogs.com/gif.latex?1%5Cleq&space;ar%5Bi%5D&space;%5Cleq&space;10%5E%7B7%7D" alt></li></ul><br><h2 id="Output-Format"><a href="#Output-Format" class="headerlink" title="Output Format"></a>Output Format</h2><p>Print the number of candles that can be blown out on a new line.</p><br><h2 id="Sample-Input-0"><a href="#Sample-Input-0" class="headerlink" title="Sample Input 0"></a>Sample Input 0</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">3 2 1 3</span><br></pre></td></tr></table></figure><br><h2 id="Sample-Output-0"><a href="#Sample-Output-0" class="headerlink" title="Sample Output 0"></a>Sample Output 0</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure><br><h2 id="Explanation-0"><a href="#Explanation-0" class="headerlink" title="Explanation 0"></a>Explanation 0</h2><p>We have one candle of height <code>1</code>, one candle of height <code>2</code>, and two candles of height <code>3</code>. Your niece only blows out the tallest candles, meaning the candles where <code>heoght = 3</code>. Because there are <code>2</code> such candles, we print <code>2</code> on a new line.</p><br><hr><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">birthdayCakeCandles</span>(<span class="hljs-params">ar</span>) </span>&#123;</span><br><span class="line">    <span class="hljs-keyword">let</span> max = <span class="hljs-built_in">Math</span>.max(...ar);</span><br><span class="line">    <span class="hljs-keyword">return</span> ar.sort(<span class="hljs-function">(<span class="hljs-params">a, b</span>) =&gt;</span> b - a).reduce(<span class="hljs-function">(<span class="hljs-params">target, number</span>) =&gt;</span> &#123; </span><br><span class="line">        number === max &amp;&amp; ++target;</span><br><span class="line"></span><br><span class="line">        <span class="hljs-keyword">return</span> target;</span><br><span class="line">    &#125;, <span class="hljs-number">0</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://alleyful.github.io/2019/07/06/algorithm/hackerrank/08_BirthdayCakeCandles/#disqus_thread</comments>
    </item>
    
    <item>
      <title>프로그래머스 - 기능개발</title>
      <link>https://alleyful.github.io/2019/07/05/algorithm/programmers/level2-06/</link>
      <guid>https://alleyful.github.io/2019/07/05/algorithm/programmers/level2-06/</guid>
      <pubDate>Fri, 05 Jul 2019 03:20:19 GMT</pubDate>
      <description>
      
        &lt;p&gt;프로그래머스 팀에서는 &lt;code&gt;기능 개선 작업을 수행&lt;/code&gt; 중입니다. 각 기능은 진도가 100%일 때 서비스에 반영할 수 있습니다.&lt;/p&gt;
&lt;p&gt;또, 각 기능의 개발속도는 모두 다르기 때문에 뒤에 있는 기능이 앞에 있는 기능보다 먼저 개발될 수 있고, 이때 뒤에 있는 기능은 앞에 있는 기능이 배포될 때 함께 배포됩니다.&lt;/p&gt;
&lt;p&gt;먼저 배포되어야 하는 순서대로 작업의 진도가 적힌 정수 배열 progresses와 각 작업의 개발 속도가 적힌 정수 배열 speeds가 주어질 때 각 &lt;code&gt;배포마다 몇 개의 기능이 배포되는지&lt;/code&gt;를 return 하도록 solution 함수를 완성하세요.&lt;/p&gt;
&lt;br&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p>프로그래머스 팀에서는 <code>기능 개선 작업을 수행</code> 중입니다. 각 기능은 진도가 100%일 때 서비스에 반영할 수 있습니다.</p><p>또, 각 기능의 개발속도는 모두 다르기 때문에 뒤에 있는 기능이 앞에 있는 기능보다 먼저 개발될 수 있고, 이때 뒤에 있는 기능은 앞에 있는 기능이 배포될 때 함께 배포됩니다.</p><p>먼저 배포되어야 하는 순서대로 작업의 진도가 적힌 정수 배열 progresses와 각 작업의 개발 속도가 적힌 정수 배열 speeds가 주어질 때 각 <code>배포마다 몇 개의 기능이 배포되는지</code>를 return 하도록 solution 함수를 완성하세요.</p><br><a id="more"></a><h2 id="제한-사항"><a href="#제한-사항" class="headerlink" title="제한 사항"></a>제한 사항</h2><p>작업의 개수(progresses, speeds배열의 길이)는 100개 이하입니다.<br>작업 진도는 100 미만의 자연수입니다.<br>작업 속도는 100 이하의 자연수입니다.<br>배포는 하루에 한 번만 할 수 있으며, 하루의 끝에 이루어진다고 가정합니다. 예를 들어 진도율이 95%인 작업의 개발 속도가 하루에 4%라면 배포는 2일 뒤에 이루어집니다.</p><br><h2 id="입출력-예"><a href="#입출력-예" class="headerlink" title="입출력 예"></a>입출력 예</h2><table><thead><tr><th align="center">progresses</th><th align="center">speeds</th><th align="center">return</th></tr></thead><tbody><tr><td align="center">[93,30,55]</td><td align="center">[1,30,5]</td><td align="center">[2,1]</td></tr></tbody></table><br><h2 id="입출력-예-설명"><a href="#입출력-예-설명" class="headerlink" title="입출력 예 설명"></a>입출력 예 설명</h2><ul><li>첫 번째 기능은 93% 완료되어 있고 하루에 1%씩 작업이 가능하므로 7일간 작업 후 배포가 가능합니다.</li><li>두 번째 기능은 30%가 완료되어 있고 하루에 30%씩 작업이 가능하므로 3일간 작업 후 배포가 가능합니다.<br>하지만 이전 첫 번째 기능이 아직 완성된 상태가 아니기 때문에 첫 번째 기능이 배포되는 7일째 배포됩니다.</li><li>세 번째 기능은 55%가 완료되어 있고 하루에 5%씩 작업이 가능하므로 9일간 작업 후 배포가 가능합니다.</li></ul><p>따라서 7일째에 2개의 기능, 9일째에 1개의 기능이 배포됩니다.</p><br><hr><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">solution</span>(<span class="hljs-params">n</span>) </span>&#123;</span><br><span class="line">    <span class="hljs-keyword">return</span> n </span><br><span class="line">        ? solution((n - (n % <span class="hljs-number">3</span> || <span class="hljs-number">3</span>)) / <span class="hljs-number">3</span>) + (n % <span class="hljs-number">3</span> || <span class="hljs-number">4</span>)</span><br><span class="line">        : <span class="hljs-string">''</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://alleyful.github.io/2019/07/05/algorithm/programmers/level2-06/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Mini-Max Sum</title>
      <link>https://alleyful.github.io/2019/07/04/algorithm/hackerrank/07_Mini-MaxSum/</link>
      <guid>https://alleyful.github.io/2019/07/04/algorithm/hackerrank/07_Mini-MaxSum/</guid>
      <pubDate>Thu, 04 Jul 2019 03:30:41 GMT</pubDate>
      <description>
      
        &lt;p&gt;Given five positive integers, find the minimum and maximum values that can be calculated by summing exactly four of the five integers.&lt;br&gt;Then print the respective minimum and maximum values as a single line of two space-separated long integers.&lt;/p&gt;
&lt;p&gt;For example, &lt;code&gt;arr = [ 1, 3, 5, 7, 9 ]&lt;/code&gt;. 
Our minimum sum is &lt;code&gt;1 + 3 + 5 + 7 = 16&lt;/code&gt; and our maximum sum is &lt;code&gt;3 + 5 + 7 + 9 = 24&lt;/code&gt;. 
We would print&lt;/p&gt;
&lt;figure class=&quot;highlight plain hljs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;16 24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;br&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p>Given five positive integers, find the minimum and maximum values that can be calculated by summing exactly four of the five integers.<br>Then print the respective minimum and maximum values as a single line of two space-separated long integers.</p><p>For example, <code>arr = [ 1, 3, 5, 7, 9 ]</code>. Our minimum sum is <code>1 + 3 + 5 + 7 = 16</code> and our maximum sum is <code>3 + 5 + 7 + 9 = 24</code>. We would print</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">16 24</span><br></pre></td></tr></table></figure><br><a id="more"></a><h2 id="Function-Description"><a href="#Function-Description" class="headerlink" title="Function Description"></a>Function Description</h2><p>Complete the miniMaxSum function in the editor below.<br>It should print two space-separated integers on one line: the minimum sum and the maximum sum of  of  elements.</p><p>miniMaxSum has the following parameter(s):</p><ul><li>arr: an array of  integers</li></ul><br><h2 id="Input-Format"><a href="#Input-Format" class="headerlink" title="Input Format"></a>Input Format</h2><p>A single line of five space-separated integers.</p><br><h2 id="Constraints"><a href="#Constraints" class="headerlink" title="Constraints"></a>Constraints</h2><p><img src="https://latex.codecogs.com/gif.latex?1%5Cleq&space;arr%5Bi%5D%5Cleq&space;10%5E%7B9%7D" alt></p><br><h2 id="Output-Format"><a href="#Output-Format" class="headerlink" title="Output Format"></a>Output Format</h2><p>Print two space-separated long integers denoting the respective minimum and maximum values that can be calculated by summing exactly four of the five integers. (The output can be greater than a 32 bit integer.)</p><br><h2 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 2 3 4 5</span><br></pre></td></tr></table></figure><br><h2 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10 14</span><br></pre></td></tr></table></figure><br><h2 id="Explanation"><a href="#Explanation" class="headerlink" title="Explanation"></a>Explanation</h2><p>Our initial numbers are <code>1, 2, 3, 4, and 5</code>. We can calculate the following sums using four of the five integers:</p><ul><li>If we sum everything except <code>1</code>, our sum is <code>2 + 3 + 4 + 5 = 14</code>.</li><li>If we sum everything except <code>2</code>, our sum is <code>1 + 3 + 4 + 5 = 13</code>.</li><li>If we sum everything except <code>3</code>, our sum is <code>1 + 2 + 4 + 5 = 12</code>.</li><li>If we sum everything except <code>4</code>, our sum is <code>1 + 2 + 3 + 5 = 11</code>.</li><li>If we sum everything except <code>5</code>, our sum is <code>1 + 2 + 3 + 4 = 10</code>.</li></ul><p><strong>Hints</strong>: Beware of integer overflow! Use 64-bit Integer.</p><br><hr><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">miniMaxSum</span>(<span class="hljs-params">arr</span>) </span>&#123;</span><br><span class="line">    <span class="hljs-keyword">let</span> length = arr.length - <span class="hljs-number">1</span>;</span><br><span class="line">    <span class="hljs-keyword">return</span> arr.sort(<span class="hljs-function">(<span class="hljs-params">a, b</span>) =&gt;</span> a &gt; b).reduce(<span class="hljs-function">(<span class="hljs-params">target, item, index</span>) =&gt;</span> &#123;</span><br><span class="line">        !(index === length) &amp;&amp; (target[<span class="hljs-number">0</span>] += item);</span><br><span class="line">        !(index === <span class="hljs-number">0</span>) &amp;&amp; (target[<span class="hljs-number">1</span>] += item);</span><br><span class="line"></span><br><span class="line">        <span class="hljs-keyword">return</span> target</span><br><span class="line">    &#125;, [<span class="hljs-number">0</span>, <span class="hljs-number">0</span>]).join(<span class="hljs-string">' '</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://alleyful.github.io/2019/07/04/algorithm/hackerrank/07_Mini-MaxSum/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Staircase</title>
      <link>https://alleyful.github.io/2019/07/03/algorithm/hackerrank/06_Staircase/</link>
      <guid>https://alleyful.github.io/2019/07/03/algorithm/hackerrank/06_Staircase/</guid>
      <pubDate>Wed, 03 Jul 2019 13:15:40 GMT</pubDate>
      <description>
      
        &lt;p&gt;Consider a staircase of size &lt;strong&gt;n = 4&lt;/strong&gt;:&lt;/p&gt;
&lt;figure class=&quot;highlight plain hljs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;   #&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ##&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; ###&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;####&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;Observe that its base and height are both equal to &lt;strong&gt;n&lt;/strong&gt;, and the image is drawn using # symbols and spaces. The last line is not preceded by any spaces.&lt;/p&gt;
&lt;p&gt;Write a program that prints a staircase of size &lt;strong&gt;n&lt;/strong&gt;.&lt;/p&gt;
&lt;br&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p>Consider a staircase of size <strong>n = 4</strong>:</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">   #</span><br><span class="line">  ##</span><br><span class="line"> ###</span><br><span class="line">####</span><br></pre></td></tr></table></figure><p>Observe that its base and height are both equal to <strong>n</strong>, and the image is drawn using # symbols and spaces. The last line is not preceded by any spaces.</p><p>Write a program that prints a staircase of size <strong>n</strong>.</p><br><a id="more"></a><h2 id="Function-Description"><a href="#Function-Description" class="headerlink" title="Function Description"></a>Function Description</h2><p>Complete the staircase function in the editor below. It should print a staircase as described above.</p><p>staircase has the following parameter(s):</p><ul><li>n: an integer</li></ul><br><h2 id="Input-Format"><a href="#Input-Format" class="headerlink" title="Input Format"></a>Input Format</h2><p>A single integer, <strong>n</strong>, denoting the size of the staircase.</p><br><h2 id="Constraints"><a href="#Constraints" class="headerlink" title="Constraints"></a>Constraints</h2><p><img src="https://latex.codecogs.com/gif.latex?0%3C&space;n%5Cleq&space;100" alt></p><br><h2 id="Output-Format"><a href="#Output-Format" class="headerlink" title="Output Format"></a>Output Format</h2><p>Print a staircase of size  using # symbols and spaces.</p><p><strong>Note</strong>: The last line must have  spaces in it.</p><br><h2 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">6</span><br></pre></td></tr></table></figure><br><h2 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">     #</span><br><span class="line">    ##</span><br><span class="line">   ###</span><br><span class="line">  ####</span><br><span class="line"> #####</span><br><span class="line">######</span><br></pre></td></tr></table></figure><br><h2 id="Explanation"><a href="#Explanation" class="headerlink" title="Explanation"></a>Explanation</h2><p>The staircase is right-aligned, composed of # symbols and spaces, and has a height and width of <strong>n = 6</strong>.</p><br><hr><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">staircase</span>(<span class="hljs-params">n</span>) </span>&#123;</span><br><span class="line">    <span class="hljs-keyword">let</span> strings = <span class="hljs-built_in">Array</span>(n).fill(<span class="hljs-string">'#'</span>);</span><br><span class="line"></span><br><span class="line">    <span class="hljs-keyword">return</span> strings.reduceRight(<span class="hljs-function">(<span class="hljs-params">target, string, index</span>) =&gt;</span> &#123;</span><br><span class="line">        target.push([...strings].join(<span class="hljs-string">''</span>).replace(<span class="hljs-string">'#'</span>.repeat(index), <span class="hljs-string">' '</span>.repeat(index)));</span><br><span class="line"></span><br><span class="line">        <span class="hljs-keyword">return</span> target</span><br><span class="line">    &#125;, []).join(<span class="hljs-string">'\n'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://alleyful.github.io/2019/07/03/algorithm/hackerrank/06_Staircase/#disqus_thread</comments>
    </item>
    
    <item>
      <title>프로그래머스 - 124 나라의 숫자</title>
      <link>https://alleyful.github.io/2019/07/02/algorithm/programmers/level2-05/</link>
      <guid>https://alleyful.github.io/2019/07/02/algorithm/programmers/level2-05/</guid>
      <pubDate>Tue, 02 Jul 2019 14:29:19 GMT</pubDate>
      <description>
      
        &lt;p&gt;&lt;code&gt;124 나라&lt;/code&gt;가 있습니다. 124 나라에서는 10진법이 아닌 다음과 같은 &lt;code&gt;자신들만의 규칙&lt;/code&gt;으로 수를 표현합니다.&lt;/p&gt;
&lt;p&gt;124 나라에는 &lt;code&gt;자연수&lt;/code&gt;만 존재합니다. 124 나라에는 모든 수를 표현할 때 &lt;code&gt;1, 2, 4만 사용&lt;/code&gt;합니다. 예를 들어서 124 나라에서 사용하는 숫자는 다음과 같이 변환됩니다.&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p><code>124 나라</code>가 있습니다. 124 나라에서는 10진법이 아닌 다음과 같은 <code>자신들만의 규칙</code>으로 수를 표현합니다.</p><p>124 나라에는 <code>자연수</code>만 존재합니다. 124 나라에는 모든 수를 표현할 때 <code>1, 2, 4만 사용</code>합니다. 예를 들어서 124 나라에서 사용하는 숫자는 다음과 같이 변환됩니다.</p><a id="more"></a><table><thead><tr><th align="center">10진법</th><th align="center">124 나라</th><th align="center">10진법</th><th align="center">124 나라</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">1</td><td align="center">6</td><td align="center">14</td></tr><tr><td align="center">2</td><td align="center">2</td><td align="center">7</td><td align="center">21</td></tr><tr><td align="center">3</td><td align="center">4</td><td align="center">8</td><td align="center">22</td></tr><tr><td align="center">4</td><td align="center">11</td><td align="center">9</td><td align="center">24</td></tr><tr><td align="center">5</td><td align="center">12</td><td align="center">10</td><td align="center">41</td></tr></tbody></table><p>자연수 n이 매개변수로 주어질 때, n을 124 나라에서 사용하는 숫자로 바꾼 값을 return 하도록 solution 함수를 완성해 주세요.</p><br><h2 id="제한사항"><a href="#제한사항" class="headerlink" title="제한사항"></a>제한사항</h2><ul><li>n은 500,000,000이하의 자연수 입니다.</li></ul><br><h2 id="입출력-예"><a href="#입출력-예" class="headerlink" title="입출력 예"></a>입출력 예</h2><table><thead><tr><th align="center">n</th><th align="center">result</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">1</td></tr><tr><td align="center">2</td><td align="center">2</td></tr><tr><td align="center">3</td><td align="center">4</td></tr><tr><td align="center">4</td><td align="center">11</td></tr></tbody></table><br><hr><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">solution</span>(<span class="hljs-params">n</span>) </span>&#123;</span><br><span class="line">    <span class="hljs-keyword">return</span> n </span><br><span class="line">        ? solution((n - (n % <span class="hljs-number">3</span> || <span class="hljs-number">3</span>)) / <span class="hljs-number">3</span>) + (n % <span class="hljs-number">3</span> || <span class="hljs-number">4</span>)</span><br><span class="line">        : <span class="hljs-string">''</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://alleyful.github.io/2019/07/02/algorithm/programmers/level2-05/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Plus Minus</title>
      <link>https://alleyful.github.io/2019/07/01/algorithm/hackerrank/05_PlusMinus/</link>
      <guid>https://alleyful.github.io/2019/07/01/algorithm/hackerrank/05_PlusMinus/</guid>
      <pubDate>Mon, 01 Jul 2019 04:11:40 GMT</pubDate>
      <description>
      
        &lt;p&gt;Given an array of integers, calculate the fractions of its elements that are positive, negative, and are zeros. Print the decimal value of each fraction on a new line.&lt;/p&gt;
&lt;br&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p>Given an array of integers, calculate the fractions of its elements that are positive, negative, and are zeros. Print the decimal value of each fraction on a new line.</p><br><a id="more"></a><p><strong>Note</strong>: This challenge introduces precision problems. The test cases are scaled to six decimal places, though answers with absolute error of up to <img src="https://latex.codecogs.com/gif.latex?10%5E%7B-4%7D" alt> are acceptable.</p><p>For example, given the array <strong>arr = [1, 1, 0, -1, -1]</strong> there are <strong>5</strong> elements, two positive, two negative and one zero. Their ratios would be <img src="https://latex.codecogs.com/gif.latex?%5Cfrac%7B2%7D%7B5%7D=0.400000" alt>, <img src="https://latex.codecogs.com/gif.latex?%5Cfrac%7B2%7D%7B5%7D=0.400000" alt> and <img src="https://latex.codecogs.com/gif.latex?%5Cfrac%7B1%7D%7B5%7D=0.200000" alt>. It should be printed as</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">0.400000</span><br><span class="line">0.400000</span><br><span class="line">0.200000</span><br></pre></td></tr></table></figure><br><h2 id="Function-Description"><a href="#Function-Description" class="headerlink" title="Function Description"></a>Function Description</h2><p>Complete the plusMinus function in the editor below. It should print out the ratio of positive, negative and zero items in the array, each on a separate line rounded to six decimals.</p><p>plusMinus has the following parameter(s):</p><ul><li>arr: an array of integers</li></ul><br><h2 id="Input-Format"><a href="#Input-Format" class="headerlink" title="Input Format"></a>Input Format</h2><p>The first line contains an integer, <strong>n</strong>, denoting the size of the array.<br>The second line contains <strong>n</strong> space-separated integers describing an array of numbers <strong>arr=(arr[0], arr[1], arr[2], …, a[n-1])</strong>.</p><br><h2 id="Constraints"><a href="#Constraints" class="headerlink" title="Constraints"></a>Constraints</h2><ul><li><img src="https://latex.codecogs.com/gif.latex?0%3C&space;n%5Cleq&space;100" alt></li><li><img src="https://latex.codecogs.com/gif.latex?-100%5Cleq&space;arr%5Bi%5D%5Cleq&space;100" alt></li></ul><br><h2 id="Output-Format"><a href="#Output-Format" class="headerlink" title="Output Format"></a>Output Format</h2><p>You must print the following <strong>3</strong> lines:</p><ol><li>A decimal representing of the fraction of positive numbers in the array compared to its size.</li><li>A decimal representing of the fraction of negative numbers in the array compared to its size.</li><li>A decimal representing of the fraction of zeros in the array compared to its size.</li></ol><br><h2 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">6</span><br><span class="line">-4 3 -9 0 4 1</span><br></pre></td></tr></table></figure><br><h2 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">0.500000</span><br><span class="line">0.333333</span><br><span class="line">0.166667</span><br></pre></td></tr></table></figure><br><h2 id="Explanation"><a href="#Explanation" class="headerlink" title="Explanation"></a>Explanation</h2><p>There are <strong>3</strong> positive numbers, <strong>2</strong> negative numbers, and <strong>1</strong> zero in the array.<br>The proportions of occurrence are positive: <img src="https://latex.codecogs.com/gif.latex?%5Cfrac%7B3%7D%7B6%7D=0.500000" alt>, negative: <img src="https://latex.codecogs.com/gif.latex?%5Cfrac%7B2%7D%7B6%7D=0.333333" alt> and zeros: <img src="https://latex.codecogs.com/gif.latex?%5Cfrac%7B1%7D%7B6%7D=0.166667" alt>.</p><br><hr><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">diagonalDifference</span>(<span class="hljs-params">arr</span>) </span>&#123;</span><br><span class="line">    <span class="hljs-comment">// Write your code here</span></span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.abs(arr.reduce(<span class="hljs-function">(<span class="hljs-params">target, item, index</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="hljs-keyword">let</span> length = item.length - <span class="hljs-number">1</span>;</span><br><span class="line">        <span class="hljs-keyword">return</span> target + item[index] - item[length - index]</span><br><span class="line">    &#125;, <span class="hljs-number">0</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://alleyful.github.io/2019/07/01/algorithm/hackerrank/05_PlusMinus/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Diagonal Difference</title>
      <link>https://alleyful.github.io/2019/06/30/algorithm/hackerrank/04_DiagonalDifference/</link>
      <guid>https://alleyful.github.io/2019/06/30/algorithm/hackerrank/04_DiagonalDifference/</guid>
      <pubDate>Sun, 30 Jun 2019 13:51:37 GMT</pubDate>
      <description>
      
        &lt;p&gt;Given a square matrix, calculate the absolute difference between the sums of its diagonals.&lt;/p&gt;
&lt;p&gt;For example, the square matrix  is shown below:&lt;/p&gt;
&lt;figure class=&quot;highlight plain hljs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1 2 3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4 5 6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9 8 9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;The left-to-right diagonal = &lt;strong&gt;1 + 5 + 9 = 15&lt;/strong&gt;. The right to left diagonal = &lt;strong&gt;3 + 5 + 9 = 17&lt;/strong&gt;. 
Their absolute difference is &lt;strong&gt;|15 - 17| = 2&lt;/strong&gt;.&lt;/p&gt;
&lt;br&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p>Given a square matrix, calculate the absolute difference between the sums of its diagonals.</p><p>For example, the square matrix  is shown below:</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1 2 3</span><br><span class="line">4 5 6</span><br><span class="line">9 8 9</span><br></pre></td></tr></table></figure><p>The left-to-right diagonal = <strong>1 + 5 + 9 = 15</strong>. The right to left diagonal = <strong>3 + 5 + 9 = 17</strong>. Their absolute difference is <strong>|15 - 17| = 2</strong>.</p><br><a id="more"></a><h2 id="Function-description"><a href="#Function-description" class="headerlink" title="Function description"></a>Function description</h2><p>Complete the <strong>diagonalDifference</strong> function in the editor below. It must return an integer representing the absolute diagonal difference.</p><p>diagonalDifference takes the following parameter:</p><ul><li>arr: an array of integers .</li></ul><br><h2 id="Input-Format"><a href="#Input-Format" class="headerlink" title="Input Format"></a>Input Format</h2><p>The first line contains a single integer, <strong>n</strong>, the number of rows and columns in the matrix <strong>arr</strong>. Each of the next <strong>n</strong> lines describes a row, <strong>arr[i]</strong>, and consists of <strong>n</strong> space-separated integers <strong>arr[i][j]</strong>.</p><br><h2 id="Constraints"><a href="#Constraints" class="headerlink" title="Constraints"></a>Constraints</h2><ul><li><img src="https://latex.codecogs.com/gif.latex?-100%5Cleq&space;arr%5Bi%5D%5Bj%5D%5Cleq&space;100" alt></li></ul><br><h2 id="Output-Format"><a href="#Output-Format" class="headerlink" title="Output Format"></a>Output Format</h2><p>Print the absolute difference between the sums of the matrix’s two diagonals as a single integer.</p><br><h2 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">11 2 4</span><br><span class="line">4 5 6</span><br><span class="line">10 8 -12</span><br></pre></td></tr></table></figure><br><h2 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">15</span><br></pre></td></tr></table></figure><br><h2 id="Explanation"><a href="#Explanation" class="headerlink" title="Explanation"></a>Explanation</h2><p>The primary diagonal is:</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">11</span><br><span class="line">   5</span><br><span class="line">     -12</span><br></pre></td></tr></table></figure><p>Sum across the primary diagonal: 11 + 5 - 12 = 4</p><p>The secondary diagonal is:</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">     4</span><br><span class="line">   5</span><br><span class="line">10</span><br></pre></td></tr></table></figure><p>Sum across the secondary diagonal: 4 + 5 + 10 = 19<br>Difference: |4 - 19| = 15</p><ul><li>Note: |x| is the absolute value of x</li></ul><br><hr><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">diagonalDifference</span>(<span class="hljs-params">arr</span>) </span>&#123;</span><br><span class="line">    <span class="hljs-comment">// Write your code here</span></span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.abs(arr.reduce(<span class="hljs-function">(<span class="hljs-params">target, item, index</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="hljs-keyword">let</span> length = item.length - <span class="hljs-number">1</span>;</span><br><span class="line">        <span class="hljs-keyword">return</span> target + item[index] - item[length - index]</span><br><span class="line">    &#125;, <span class="hljs-number">0</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://alleyful.github.io/2019/06/30/algorithm/hackerrank/04_DiagonalDifference/#disqus_thread</comments>
    </item>
    
    <item>
      <title>A Very Big Sum</title>
      <link>https://alleyful.github.io/2019/06/30/algorithm/hackerrank/03_AVeryBigSum/</link>
      <guid>https://alleyful.github.io/2019/06/30/algorithm/hackerrank/03_AVeryBigSum/</guid>
      <pubDate>Sun, 30 Jun 2019 01:24:18 GMT</pubDate>
      <description>
      
        &lt;p&gt;Calculate and print the sum of the elements in an array, keeping in mind that some of those integers may be quite large.&lt;/p&gt;
&lt;br&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p>Calculate and print the sum of the elements in an array, keeping in mind that some of those integers may be quite large.</p><br><a id="more"></a><h2 id="Function-Description"><a href="#Function-Description" class="headerlink" title="Function Description"></a>Function Description</h2><p>Complete the aVeryBigSum function in the editor below. It must return the sum of all array elements.</p><p>aVeryBigSum has the following parameter(s):</p><ul><li>ar: an array of integers.</li></ul><br><h2 id="Input-Format"><a href="#Input-Format" class="headerlink" title="Input Format"></a>Input Format</h2><p>The first line of the input consists of an integer <strong>n</strong>. The next line contains <strong>n</strong> space-separated integers contained in the array.</p><br><h2 id="Output-Format"><a href="#Output-Format" class="headerlink" title="Output Format"></a>Output Format</h2><p>Print the integer sum of the elements in the array.</p><br><h2 id="Constraints"><a href="#Constraints" class="headerlink" title="Constraints"></a>Constraints</h2><ul><li><img src="https://latex.codecogs.com/gif.latex?1&space;%5Cleq&space;n%5Cleq&space;10" alt></li><li><img src="https://latex.codecogs.com/gif.latex?1&space;%5Cleq&space;ar%5Cleq&space;10%5E%7B10%7D" alt></li></ul><br><h2 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">5</span><br><span class="line">1000000001 1000000002 1000000003 1000000004 1000000005</span><br></pre></td></tr></table></figure><br><h2 id="Output"><a href="#Output" class="headerlink" title="Output"></a>Output</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5000000015</span><br></pre></td></tr></table></figure><br><h2 id="Note"><a href="#Note" class="headerlink" title="Note:"></a>Note:</h2><p>The range of the 32-bit integer is <img src="https://latex.codecogs.com/gif.latex?(-2%5E%7B31%7D)&space;to&space;(2%5E%7B31%7D&space;-&space;1)&space;or&space;%5B-2147483648,&space;2147483647%5D" alt>.When we add several integer values, the resulting sum might exceed the above range. You might need to use long long int in C/C++ or long data type in Java to store such sums.</p><br><hr><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">aVeryBigSum</span>(<span class="hljs-params">ar</span>) </span>&#123;</span><br><span class="line">    <span class="hljs-keyword">return</span> ar.reduce(<span class="hljs-function">(<span class="hljs-params">target, number</span>) =&gt;</span> &#123; </span><br><span class="line">        <span class="hljs-keyword">return</span> target + number;</span><br><span class="line">    &#125;, <span class="hljs-number">0</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://alleyful.github.io/2019/06/30/algorithm/hackerrank/03_AVeryBigSum/#disqus_thread</comments>
    </item>
    
    <item>
      <title>프로그래머스 - 탑</title>
      <link>https://alleyful.github.io/2019/06/28/algorithm/programmers/level2-04/</link>
      <guid>https://alleyful.github.io/2019/06/28/algorithm/programmers/level2-04/</guid>
      <pubDate>Fri, 28 Jun 2019 14:39:16 GMT</pubDate>
      <description>
      
        &lt;p&gt;수평 직선에 탑 N대를 세웠습니다.&lt;br&gt;모든 &lt;code&gt;탑의 꼭대기에는 신호를 송/수신하는 장치&lt;/code&gt;를 설치했습니다.&lt;br&gt;발사한 신호는 &lt;code&gt;신호를 보낸 탑보다 높은 탑에서만 수신&lt;/code&gt;합니다.&lt;br&gt;또한, 한 번 수신된 신호는 다른 탑으로 송신되지 않습니다.&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p>수평 직선에 탑 N대를 세웠습니다.<br>모든 <code>탑의 꼭대기에는 신호를 송/수신하는 장치</code>를 설치했습니다.<br>발사한 신호는 <code>신호를 보낸 탑보다 높은 탑에서만 수신</code>합니다.<br>또한, 한 번 수신된 신호는 다른 탑으로 송신되지 않습니다.</p><a id="more"></a><p>예를 들어 높이가 6, 9, 5, 7, 4인 다섯 탑이 왼쪽으로 동시에 레이저 신호를 발사합니다.<br>그러면, 탑은 다음과 같이 신호를 주고받습니다.<br>높이가 4인 다섯 번째 탑에서 발사한 신호는 높이가 7인 네 번째 탑이 수신하고, 높이가 7인 네 번째 탑의 신호는 높이가 9인 두 번째 탑이, 높이가 5인 세 번째 탑의 신호도 높이가 9인 두 번째 탑이 수신합니다. 높이가 9인 두 번째 탑과 높이가 6인 첫 번째 탑이 보낸 레이저 신호는 어떤 탑에서도 수신할 수 없습니다.</p><table><thead><tr><th align="left">송신탑(높이)</th><th align="left">수신 탑(높이)</th></tr></thead><tbody><tr><td align="left">5(4)</td><td align="left">4(7)</td></tr><tr><td align="left">4(7)</td><td align="left">2(9)</td></tr><tr><td align="left">3(5)</td><td align="left">2(9)</td></tr><tr><td align="left">2(9)</td><td align="left">-</td></tr><tr><td align="left">1(6)</td><td align="left">-</td></tr></tbody></table><p>맨 왼쪽부터 순서대로 탑의 높이를 담은 배열 heights가 매개변수로 주어질 때 각 탑이 쏜 신호를 어느 탑에서 받았는지 기록한 배열을 return 하도록 solution 함수를 작성해주세요.</p><br><h2 id="제한-사항"><a href="#제한-사항" class="headerlink" title="제한 사항"></a>제한 사항</h2><p>heights는 길이 2 이상 100 이하인 정수 배열입니다.<br>모든 탑의 높이는 1 이상 100 이하입니다.<br>신호를 수신하는 탑이 없으면 0으로 표시합니다.</p><br><h2 id="입출력-예"><a href="#입출력-예" class="headerlink" title="입출력 예"></a>입출력 예</h2><table><thead><tr><th align="left">heights</th><th align="left">return</th></tr></thead><tbody><tr><td align="left">[6,9,5,7,4]</td><td align="left">[0,0,2,2,4]</td></tr><tr><td align="left">[3,9,9,3,5,7,2]</td><td align="left">[0,0,0,3,3,3,6]</td></tr><tr><td align="left">[1,5,3,6,7,6,5]</td><td align="left">[0,0,2,0,0,5,6]</td></tr></tbody></table><h3 id="입출력-예-설명"><a href="#입출력-예-설명" class="headerlink" title="입출력 예 설명"></a>입출력 예 설명</h3><ul><li><p>입출력 예 #1</p><ul><li>앞서 설명한 예와 같습니다.</li></ul></li><li><p>입출력 예 #2</p><ul><li>[1,2,3] 번째 탑이 쏜 신호는 아무도 수신하지 않습니다.</li><li>[4,5,6] 번째 탑이 쏜 신호는 3번째 탑이 수신합니다.</li><li>[7] 번째 탑이 쏜 신호는 6번째 탑이 수신합니다.</li></ul></li><li><p>입출력 예 #3</p><ul><li>[1,2,4,5] 번째 탑이 쏜 신호는 아무도 수신하지 않습니다.</li><li>[3] 번째 탑이 쏜 신호는 2번째 탑이 수신합니다.</li><li>[6] 번째 탑이 쏜 신호는 5번째 탑이 수신합니다.</li><li>[7] 번째 탑이 쏜 신호는 6번째 탑이 수신합니다.</li></ul></li></ul><br><hr><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">solution</span>(<span class="hljs-params">heights</span>) </span>&#123;</span><br><span class="line">    <span class="hljs-keyword">let</span> stack = [...heights];</span><br><span class="line">    <span class="hljs-keyword">return</span> heights.reduceRight(<span class="hljs-function">(<span class="hljs-params">target, height</span>) =&gt;</span> &#123;</span><br><span class="line">        stack.pop();</span><br><span class="line">        target.push(stack.reduceRight(<span class="hljs-function">(<span class="hljs-params">target, item, index</span>) =&gt;</span> &#123;</span><br><span class="line">            item &gt; height &amp;&amp; target.push(index + <span class="hljs-number">1</span>); </span><br><span class="line">            <span class="hljs-keyword">return</span> target;</span><br><span class="line">        &#125;, [])[<span class="hljs-number">0</span>] || <span class="hljs-number">0</span>);</span><br><span class="line">        <span class="hljs-keyword">return</span> target;</span><br><span class="line">    &#125;, []).reverse();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://alleyful.github.io/2019/06/28/algorithm/programmers/level2-04/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Compare the Triplets</title>
      <link>https://alleyful.github.io/2019/06/27/algorithm/hackerrank/02_CompareTheTriplets/</link>
      <guid>https://alleyful.github.io/2019/06/27/algorithm/hackerrank/02_CompareTheTriplets/</guid>
      <pubDate>Thu, 27 Jun 2019 14:42:38 GMT</pubDate>
      <description>
      
        &lt;p&gt;Alice and Bob each created one problem for HackerRank. A reviewer rates the two challenges, awarding points on a scale from &lt;strong&gt;1&lt;/strong&gt; to &lt;strong&gt;100&lt;/strong&gt; for three categories: problem clarity, originality, and difficulty.&lt;/p&gt;
&lt;p&gt;We define the rating for Alice’s challenge to be the triplet &lt;code&gt;a = (a[0], a[1], a[2])&lt;/code&gt;, and the rating for Bob’s challenge to be the triplet &lt;code&gt;b = (b[0], b[1], b[2])&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Your task is to find their comparison points by comparing &lt;strong&gt;a[0]&lt;/strong&gt; with &lt;strong&gt;b[0]&lt;/strong&gt;, &lt;strong&gt;a[1]&lt;/strong&gt; with &lt;strong&gt;b[1]&lt;/strong&gt;, and &lt;strong&gt;a[2]&lt;/strong&gt; with &lt;strong&gt;b[2]&lt;/strong&gt;.&lt;/p&gt;
&lt;br&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p>Alice and Bob each created one problem for HackerRank. A reviewer rates the two challenges, awarding points on a scale from <strong>1</strong> to <strong>100</strong> for three categories: problem clarity, originality, and difficulty.</p><p>We define the rating for Alice’s challenge to be the triplet <code>a = (a[0], a[1], a[2])</code>, and the rating for Bob’s challenge to be the triplet <code>b = (b[0], b[1], b[2])</code>.</p><p>Your task is to find their comparison points by comparing <strong>a[0]</strong> with <strong>b[0]</strong>, <strong>a[1]</strong> with <strong>b[1]</strong>, and <strong>a[2]</strong> with <strong>b[2]</strong>.</p><br><a id="more"></a><ul><li>If <strong>a[i] &gt; b[i]</strong>, then Alice is awarded 1 point.</li><li>If <strong>a[i] &lt; b[i]</strong>, then Bob is awarded 1 point.</li><li>If <strong>a[i] = b[i]</strong>, then neither person receives a point.<br>Comparison points is the total points a person earned.</li></ul><p>Given <strong>a</strong> and <strong>b</strong>, determine their respective comparison points.</p><p>For example, <strong>a = [1, 2, 3]</strong> and <strong>b = [3, 2, 1]</strong>. For elements <strong>0</strong>, Bob is awarded a point because <strong>a[0] &lt; b[0]</strong>. For the equal elements <strong>a[1]</strong> and <strong>b[1]</strong>, no points are earned. Finally, for elements <strong>2</strong>, <strong>a[2] &gt; b[2]</strong> so Alice receives a point. Your return array would be <strong>[1, 1]</strong> with Alice’s score first and Bob’s second.</p><br><h2 id="Function-Description"><a href="#Function-Description" class="headerlink" title="Function Description"></a>Function Description</h2><p>Complete the function compareTriplets in the editor below. It must return an array of two integers, the first being Alice’s score and the second being Bob’s.</p><p>compareTriplets has the following parameter(s):</p><ul><li>a: an array of integers representing Alice’s challenge rating</li><li>b: an array of integers representing Bob’s challenge rating</li></ul><br><h2 id="Input-Format"><a href="#Input-Format" class="headerlink" title="Input Format"></a>Input Format</h2><p>The first line contains <strong>3</strong> space-separated integers, <strong>a[0]</strong>, <strong>a[1]</strong>, and <strong>a[2]</strong>, describing the respective values in triplet <strong>a</strong>. The second line contains <strong>3</strong> space-separated integers, <strong>b[0]</strong>, <strong>b[1]</strong>, and <strong>b[2]</strong>, describing the respective values in triplet <strong>b</strong>.</p><br><h2 id="Constraints"><a href="#Constraints" class="headerlink" title="Constraints"></a>Constraints</h2><ul><li><img src="https://latex.codecogs.com/gif.latex?1%5Cleq&space;a%5Bi%5D&space;%5Cleq&space;100" alt></li><li><img src="https://latex.codecogs.com/gif.latex?1%5Cleq&space;b%5Bi%5D&space;%5Cleq&space;100" alt></li></ul><br><h2 id="Output-Format"><a href="#Output-Format" class="headerlink" title="Output Format"></a>Output Format</h2><p>Return an array of two integers denoting the respective comparison points earned by Alice and Bob.</p><br><h2 id="Sample-Input-0"><a href="#Sample-Input-0" class="headerlink" title="Sample Input 0"></a>Sample Input 0</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">5 6 7</span><br><span class="line">3 6 10</span><br></pre></td></tr></table></figure><br><h2 id="Sample-Output-0"><a href="#Sample-Output-0" class="headerlink" title="Sample Output 0"></a>Sample Output 0</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 1</span><br></pre></td></tr></table></figure><br><h2 id="Explanation-0"><a href="#Explanation-0" class="headerlink" title="Explanation 0"></a>Explanation 0</h2><p>In this example:</p><ul><li><strong>a = (a[0], a[1], a[2]) = (5, 6, 7)</strong></li><li><strong>b = (b[0], b[1], b[2]) = (3, 6, 10)</strong></li></ul><p>Now, let’s compare each individual score:</p><ul><li><strong>a[0] &gt; b[0]</strong>, so Alice receives <strong>1</strong> point.</li><li><strong>a[1] = b[1]</strong>, so nobody receives a point.</li><li><strong>a[2] &lt; b[2]</strong>, so Bob receives <strong>1</strong> point.<br>Alice’s comparison score is <strong>1</strong>, and Bob’s comparison score is <strong>1</strong>. Thus, we return the array <strong>[1, 1]</strong>.</li></ul><br><h2 id="Sample-Input-1"><a href="#Sample-Input-1" class="headerlink" title="Sample Input 1"></a>Sample Input 1</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">17 28 30</span><br><span class="line">99 16 8</span><br></pre></td></tr></table></figure><br><h2 id="Sample-Output-1"><a href="#Sample-Output-1" class="headerlink" title="Sample Output 1"></a>Sample Output 1</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2 1</span><br></pre></td></tr></table></figure><br><h2 id="Explanation-1"><a href="#Explanation-1" class="headerlink" title="Explanation 1"></a>Explanation 1</h2><p>Comparing the <img src="https://latex.codecogs.com/gif.latex?0%5E%7Bth%7D" alt> elements, <strong>17 &lt; 99</strong> so Bob receives a point.<br>Comparing the <img src="https://latex.codecogs.com/gif.latex?1%5E%7Bst%7D" alt> and <img src="https://latex.codecogs.com/gif.latex?2%5E%7Bnd%7D" alt> elements, <strong>28 &gt; 16</strong> and <strong>30 &gt; 8</strong> so Alice receives two points.<br>The return array is <strong>[2, 1]</strong>.</p><br><hr><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">compareTriplets</span>(<span class="hljs-params">a, b</span>) </span>&#123;</span><br><span class="line">    <span class="hljs-keyword">let</span> result = a.reduce(<span class="hljs-function">(<span class="hljs-params">target, item, index</span>) =&gt;</span> &#123;</span><br><span class="line">        !(item === b[index]) &amp;&amp; (item &gt; b[index] ? ++target[<span class="hljs-number">0</span>] : ++target[<span class="hljs-number">1</span>])</span><br><span class="line">        </span><br><span class="line">        <span class="hljs-keyword">return</span> target;</span><br><span class="line">    &#125;, [<span class="hljs-number">0</span>, <span class="hljs-number">0</span>]);</span><br><span class="line">    <span class="hljs-keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://alleyful.github.io/2019/06/27/algorithm/hackerrank/02_CompareTheTriplets/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Simple Array Sum</title>
      <link>https://alleyful.github.io/2019/06/27/algorithm/hackerrank/01_SimpleArraySum/</link>
      <guid>https://alleyful.github.io/2019/06/27/algorithm/hackerrank/01_SimpleArraySum/</guid>
      <pubDate>Thu, 27 Jun 2019 14:12:10 GMT</pubDate>
      <description>
      
        &lt;p&gt;Given an array of integers, find the sum of its elements.&lt;/p&gt;
&lt;p&gt;For example, if the array &lt;code&gt;ar = [1, 2 ,3], 1 + 2 + 3 = 6&lt;/code&gt;, so return 6.&lt;/p&gt;
&lt;br&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p>Given an array of integers, find the sum of its elements.</p><p>For example, if the array <code>ar = [1, 2 ,3], 1 + 2 + 3 = 6</code>, so return 6.</p><br><a id="more"></a><h2 id="Function-Description"><a href="#Function-Description" class="headerlink" title="Function Description"></a>Function Description</h2><p>Complete the simpleArraySum function in the editor below. It must return the sum of the array elements as an integer.</p><p>simpleArraySum has the following parameter(s):</p><ul><li>ar: an array of integers</li></ul><br><h2 id="Input-Format"><a href="#Input-Format" class="headerlink" title="Input Format"></a>Input Format</h2><p>The first line contains an integer, , denoting the size of the array.<br>The second line contains  space-separated integers representing the array’s elements.</p><br><h2 id="Constraints"><a href="#Constraints" class="headerlink" title="Constraints"></a>Constraints</h2><p><img src="https://latex.codecogs.com/gif.latex?0%3C&space;%5Cmathit%7Bn,ar%5Bi%5D%7D%5Cleq&space;1000" alt></p><br><h2 id="Output-Format"><a href="#Output-Format" class="headerlink" title="Output Format"></a>Output Format</h2><p>Print the sum of the array’s elements as a single integer.</p><br><h2 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">6</span><br><span class="line">1 2 3 4 10 11</span><br></pre></td></tr></table></figure><br><h2 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">31</span><br></pre></td></tr></table></figure><br><h2 id="Explanation"><a href="#Explanation" class="headerlink" title="Explanation"></a>Explanation</h2><p>We print the sum of the array’s elements: 1 + 2 + 3 + 4 + 10 + 11 = 31.</p><hr><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">simpleArraySum</span>(<span class="hljs-params">ar</span>) </span>&#123;</span><br><span class="line">    <span class="hljs-comment">/*</span></span><br><span class="line"><span class="hljs-comment">     * Write your code here.</span></span><br><span class="line"><span class="hljs-comment">     */</span></span><br><span class="line">    <span class="hljs-keyword">return</span> ar.reduce(<span class="hljs-function">(<span class="hljs-params">target, number</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="hljs-keyword">return</span> target + number;</span><br><span class="line">    &#125;, <span class="hljs-number">0</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://alleyful.github.io/2019/06/27/algorithm/hackerrank/01_SimpleArraySum/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Solve Me First</title>
      <link>https://alleyful.github.io/2019/06/27/algorithm/hackerrank/00_SolveMeFirst/</link>
      <guid>https://alleyful.github.io/2019/06/27/algorithm/hackerrank/00_SolveMeFirst/</guid>
      <pubDate>Thu, 27 Jun 2019 13:55:10 GMT</pubDate>
      <description>
      
        &lt;p&gt;Complete the function solveMeFirst to compute the sum of two integers.&lt;/p&gt;
&lt;br&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p>Complete the function solveMeFirst to compute the sum of two integers.</p><br><a id="more"></a><h2 id="Function-prototype"><a href="#Function-prototype" class="headerlink" title="Function prototype:"></a>Function prototype:</h2><p>int solveMeFirst(int a, int b);</p><p>where,</p><ul><li>a is the first integer input.</li><li>b is the second integer input</li></ul><br><h2 id="Return-values"><a href="#Return-values" class="headerlink" title="Return values"></a>Return values</h2><ul><li>sum of the above two integers</li></ul><br><h2 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a = 2</span><br><span class="line">b = 3</span><br></pre></td></tr></table></figure><br><h2 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5</span><br></pre></td></tr></table></figure><br><h2 id="Explanation"><a href="#Explanation" class="headerlink" title="Explanation"></a>Explanation</h2><p>The sum of the two integers a and b is computed as: 2 + 3 = 5.</p><br><hr><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">solveMeFirst</span>(<span class="hljs-params">a, b</span>) </span>&#123;</span><br><span class="line">  <span class="hljs-comment">// Hint: Type return a+b below  </span></span><br><span class="line">    <span class="hljs-keyword">return</span> a + b; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://alleyful.github.io/2019/06/27/algorithm/hackerrank/00_SolveMeFirst/#disqus_thread</comments>
    </item>
    
    <item>
      <title>프로그래머스 - 스킬트리</title>
      <link>https://alleyful.github.io/2019/06/26/algorithm/programmers/level2-03/</link>
      <guid>https://alleyful.github.io/2019/06/26/algorithm/programmers/level2-03/</guid>
      <pubDate>Wed, 26 Jun 2019 13:53:39 GMT</pubDate>
      <description>
      
        &lt;p&gt;선행 스킬이란 어떤 스킬을 배우기 전에 먼저 배워야 하는 스킬을 뜻합니다.&lt;/p&gt;
&lt;p&gt;예를 들어 선행 스킬 순서가 &lt;code&gt;스파크 → 라이트닝 볼트 → 썬더&lt;/code&gt;일때, 썬더를 배우려면 먼저 라이트닝 볼트를 배워야 하고, 라이트닝 볼트를 배우려면 먼저 스파크를 배워야 합니다.&lt;/p&gt;
&lt;p&gt;위 순서에 없는 다른 스킬(힐링 등)은 순서에 상관없이 배울 수 있습니다. 따라서 &lt;code&gt;스파크 → 힐링 → 라이트닝 볼트 → 썬더&lt;/code&gt;와 같은 스킬트리는 가능하지만, &lt;code&gt;썬더 → 스파크&lt;/code&gt;나 &lt;code&gt;라이트닝 볼트 → 스파크 → 힐링 → 썬더&lt;/code&gt;와 같은 스킬트리는 불가능합니다.&lt;/p&gt;
&lt;p&gt;선행 스킬 순서 skill과 유저들이 만든 스킬트리1를 담은 배열 skill_trees가 매개변수로 주어질 때, 가능한 스킬트리 개수를 return 하는 solution 함수를 작성해주세요.&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p>선행 스킬이란 어떤 스킬을 배우기 전에 먼저 배워야 하는 스킬을 뜻합니다.</p><p>예를 들어 선행 스킬 순서가 <code>스파크 → 라이트닝 볼트 → 썬더</code>일때, 썬더를 배우려면 먼저 라이트닝 볼트를 배워야 하고, 라이트닝 볼트를 배우려면 먼저 스파크를 배워야 합니다.</p><p>위 순서에 없는 다른 스킬(힐링 등)은 순서에 상관없이 배울 수 있습니다. 따라서 <code>스파크 → 힐링 → 라이트닝 볼트 → 썬더</code>와 같은 스킬트리는 가능하지만, <code>썬더 → 스파크</code>나 <code>라이트닝 볼트 → 스파크 → 힐링 → 썬더</code>와 같은 스킬트리는 불가능합니다.</p><p>선행 스킬 순서 skill과 유저들이 만든 스킬트리1를 담은 배열 skill_trees가 매개변수로 주어질 때, 가능한 스킬트리 개수를 return 하는 solution 함수를 작성해주세요.</p><a id="more"></a><br><h2 id="제한-조건"><a href="#제한-조건" class="headerlink" title="제한 조건"></a>제한 조건</h2><ul><li>스킬은 알파벳 대문자로 표기하며, 모든 문자열은 알파벳 대문자로만 이루어져 있습니다.</li><li>스킬 순서와 스킬트리는 문자열로 표기합니다.<ul><li>예를 들어, <code>C → B → D</code> 라면 CBD로 표기합니다</li></ul></li><li>선행 스킬 순서 skill의 길이는 2 이상 26 이하이며, 스킬은 중복해 주어지지 않습니다.</li><li>skill_trees는 길이 1 이상 20 이하인 배열입니다.</li><li>skill_trees의 원소는 스킬을 나타내는 문자열입니다.<ul><li>skill_trees의 원소는 길이가 2 이상 26 이하인 문자열이며, 스킬이 중복해 주어지지 않습니다.</li></ul></li></ul><br><h2 id="입출력-예"><a href="#입출력-예" class="headerlink" title="입출력 예"></a>입출력 예</h2><table><thead><tr><th align="center">skill</th><th align="left">skill_trees</th><th align="left">return</th></tr></thead><tbody><tr><td align="center">“CBD”</td><td align="left">[“BACDE”, “CBADF”, “AECB”, “BDA”]</td><td align="left">2</td></tr></tbody></table><br><h3 id="입출력-예-설명"><a href="#입출력-예-설명" class="headerlink" title="입출력 예 설명"></a>입출력 예 설명</h3><ul><li>BACDE: B 스킬을 배우기 전에 C 스킬을 먼저 배워야 합니다. 불가능한 스킬트립니다.</li><li>CBADF: 가능한 스킬트리입니다.</li><li>AECB: 가능한 스킬트리입니다.</li><li>BDA: B 스킬을 배우기 전에 C 스킬을 먼저 배워야 합니다. 불가능한 스킬트리입니다.</li></ul><br><hr><h3 id="Solution-1"><a href="#Solution-1" class="headerlink" title="Solution 1"></a>Solution 1</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">solution</span>(<span class="hljs-params">skill, skill_trees</span>) </span>&#123;</span><br><span class="line">    <span class="hljs-keyword">return</span> skill_trees.reduce(<span class="hljs-function">(<span class="hljs-params">target, tree</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="hljs-keyword">let</span> filter = [...tree].reduce(<span class="hljs-function">(<span class="hljs-params">target, item</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="hljs-keyword">let</span> count = <span class="hljs-number">0</span>;</span><br><span class="line">            skill.includes(item) &amp;&amp; (target.push(item));          </span><br><span class="line">            <span class="hljs-keyword">return</span> target;</span><br><span class="line">        &#125;, []);</span><br><span class="line">        </span><br><span class="line">        (filter.reduce(<span class="hljs-function">(<span class="hljs-params">target, item, index</span>) =&gt;</span> &#123;</span><br><span class="line">            target = target &amp;&amp; item === skill[index];</span><br><span class="line">            <span class="hljs-keyword">return</span> target;</span><br><span class="line">        &#125;, <span class="hljs-literal">true</span>)) &amp;&amp; target.push(tree);</span><br><span class="line">        </span><br><span class="line">        <span class="hljs-keyword">return</span> target;</span><br><span class="line">    &#125;, []).length</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Solution-2"><a href="#Solution-2" class="headerlink" title="Solution 2"></a>Solution 2</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">solution</span>(<span class="hljs-params">skill, skill_trees</span>) </span>&#123;</span><br><span class="line">    <span class="hljs-keyword">var</span> answer = <span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">var</span> regex = <span class="hljs-keyword">new</span> <span class="hljs-built_in">RegExp</span>(<span class="hljs-string">`[^<span class="hljs-subst">$&#123;skill&#125;</span>]`</span>, <span class="hljs-string">'g'</span>);</span><br><span class="line"></span><br><span class="line">    <span class="hljs-keyword">return</span> skill_trees</span><br><span class="line">        .map(<span class="hljs-function">(<span class="hljs-params">x</span>) =&gt;</span> x.replace(regex, <span class="hljs-string">''</span>))</span><br><span class="line">        .filter(<span class="hljs-function">(<span class="hljs-params">x</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="hljs-keyword">return</span> skill.indexOf(x) === <span class="hljs-number">0</span> || x === <span class="hljs-string">""</span>;</span><br><span class="line">        &#125;)</span><br><span class="line">        .length</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://alleyful.github.io/2019/06/26/algorithm/programmers/level2-03/#disqus_thread</comments>
    </item>
    
    <item>
      <title>프로그래머스 - 쇠막대기</title>
      <link>https://alleyful.github.io/2019/06/24/algorithm/programmers/level2-02/</link>
      <guid>https://alleyful.github.io/2019/06/24/algorithm/programmers/level2-02/</guid>
      <pubDate>Mon, 24 Jun 2019 14:50:39 GMT</pubDate>
      <description>
      
        &lt;p&gt;여러 개의 &lt;code&gt;쇠막대기를 레이저로 절단&lt;/code&gt;하려고 합니다.&lt;br&gt;효율적인 작업을 위해서 쇠막대기를 아래에서 위로 겹쳐 놓고, 레이저를 위에서 수직으로 발사하여 쇠막대기들을 자릅니다.&lt;br&gt;쇠막대기와 레이저의 배치는 다음 조건을 만족합니다.&lt;/p&gt;
&lt;figure class=&quot;highlight plain hljs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- 쇠막대기는 자신보다 긴 쇠막대기 위에만 놓일 수 있습니다.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- 쇠막대기를 다른 쇠막대기 위에 놓는 경우 완전히 포함되도록 놓되, 끝점은 겹치지 않도록 놓습니다.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- 각 쇠막대기를 자르는 레이저는 적어도 하나 존재합니다.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- 레이저는 어떤 쇠막대기의 양 끝점과도 겹치지 않습니다.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p>여러 개의 <code>쇠막대기를 레이저로 절단</code>하려고 합니다.<br>효율적인 작업을 위해서 쇠막대기를 아래에서 위로 겹쳐 놓고, 레이저를 위에서 수직으로 발사하여 쇠막대기들을 자릅니다.<br>쇠막대기와 레이저의 배치는 다음 조건을 만족합니다.</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- 쇠막대기는 자신보다 긴 쇠막대기 위에만 놓일 수 있습니다.</span><br><span class="line">- 쇠막대기를 다른 쇠막대기 위에 놓는 경우 완전히 포함되도록 놓되, 끝점은 겹치지 않도록 놓습니다.</span><br><span class="line">- 각 쇠막대기를 자르는 레이저는 적어도 하나 존재합니다.</span><br><span class="line">- 레이저는 어떤 쇠막대기의 양 끝점과도 겹치지 않습니다.</span><br></pre></td></tr></table></figure><a id="more"></a><br><p>아래 그림은 위 조건을 만족하는 예를 보여줍니다.<br>수평으로 그려진 굵은 실선은 쇠막대기이고, 점은 레이저의 위치, 수직으로 그려진 점선 화살표는 레이저의 발사 방향입니다.</p><p><img src="https://github.com/alleyful/algorithm-solutions/raw/master/Programmers/Level2/images/question2-2-01.png" alt="쇠막대기"></p><br><p>이러한 레이저와 쇠막대기의 배치는 다음과 같이 괄호를 이용하여 왼쪽부터 순서대로 표현할 수 있습니다.</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(a) 레이저는 여는 괄호와 닫는 괄호의 인접한 쌍 &apos;()&apos;으로 표현합니다. 또한 모든 &apos;()&apos;는 반드시 레이저를 표현합니다.</span><br><span class="line">(b) 쇠막대기의 왼쪽 끝은 여는 괄호 &apos;(&apos;로, 오른쪽 끝은 닫힌 괄호 &apos;)&apos;로 표현됩니다.</span><br></pre></td></tr></table></figure><p>위 예의 괄호 표현은 그림 위에 주어져 있습니다.<br>쇠막대기는 레이저에 의해 몇 개의 조각으로 잘리는데, 위 예에서 가장 위에 있는 두 개의 쇠막대기는 각각 3개와 2개의 조각으로 잘리고, 이와 같은 방식으로 주어진 쇠막대기들은 총 17개의 조각으로 잘립니다.</p><p>쇠막대기와 레이저의 배치를 표현한 문자열 arrangement가 매개변수로 주어질 때, 잘린 쇠막대기 조각의 총 개수를 return 하도록 solution 함수를 작성해주세요.</p><br><h2 id="제한사항"><a href="#제한사항" class="headerlink" title="제한사항"></a>제한사항</h2><p>arrangement의 길이는 최대 100,000입니다.<br>arrangement의 여는 괄호와 닫는 괄호는 항상 쌍을 이룹니다.</p><br><h2 id="입출력-예"><a href="#입출력-예" class="headerlink" title="입출력 예"></a>입출력 예</h2><table><thead><tr><th align="center">arrangement</th><th align="center">return</th></tr></thead><tbody><tr><td align="center">“()(((()())(())()))(())”</td><td align="center">17</td></tr></tbody></table><h3 id="입출력-예-설명"><a href="#입출력-예-설명" class="headerlink" title="입출력 예 설명"></a>입출력 예 설명</h3><p>문제에 나온 예와 같습니다.</p><br><hr><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">solution</span>(<span class="hljs-params">arrangement</span>) </span>&#123;</span><br><span class="line">    <span class="hljs-keyword">const</span> stack = [];</span><br><span class="line">    <span class="hljs-keyword">return</span> [...arrangement].reduce(<span class="hljs-function">(<span class="hljs-params">target, item</span>) =&gt;</span> &#123;</span><br><span class="line">        item === <span class="hljs-string">'('</span> </span><br><span class="line">            ? stack.push(item) </span><br><span class="line">            : (stack.pop(),target[ <span class="hljs-string">'num'</span> ] += (target[ <span class="hljs-string">'char'</span> ] === <span class="hljs-string">')'</span>) ? <span class="hljs-number">1</span> : stack.length);</span><br><span class="line">        target[ <span class="hljs-string">'char'</span> ] = item;</span><br><span class="line">        </span><br><span class="line">        <span class="hljs-keyword">return</span> target;</span><br><span class="line">    &#125;, &#123; <span class="hljs-attr">char</span>:<span class="hljs-string">''</span>, <span class="hljs-attr">num</span>: <span class="hljs-number">0</span> &#125;)[ <span class="hljs-string">'num'</span> ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://alleyful.github.io/2019/06/24/algorithm/programmers/level2-02/#disqus_thread</comments>
    </item>
    
    <item>
      <title>프로그래머스 - 프린터</title>
      <link>https://alleyful.github.io/2019/06/23/algorithm/programmers/level2-01/</link>
      <guid>https://alleyful.github.io/2019/06/23/algorithm/programmers/level2-01/</guid>
      <pubDate>Sun, 23 Jun 2019 02:50:39 GMT</pubDate>
      <description>
      
        &lt;p&gt;일반적인 프린터는 인쇄 요청이 들어온 순서대로 인쇄합니다.&lt;br&gt;그렇기 때문에 중요한 문서가 나중에 인쇄될 수 있습니다.&lt;br&gt;이런 문제를 보완하기 위해 &lt;code&gt;중요도가 높은 문서를 먼저 인쇄하는 프린터&lt;/code&gt;를 개발했습니다.&lt;br&gt;이 새롭게 개발한 프린터는 아래와 같은 방식으로 인쇄 작업을 수행합니다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;인쇄 대기목록의 가장 앞에 있는 문서(J)를 대기목록에서 꺼냅니다.&lt;/li&gt;
&lt;li&gt;나머지 인쇄 대기목록에서 J보다 중요도가 높은 문서가 한 개라도 존재하면 J를 대기목록의 가장 마지막에 넣습니다.&lt;/li&gt;
&lt;li&gt;그렇지 않으면 J를 인쇄합니다.&lt;br&gt;예를 들어, 4개의 문서(A, B, C, D)가 순서대로 인쇄 대기목록에 있고 중요도가 2 1 3 2 라면 C D A B 순으로 인쇄하게 됩니다.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;내가 인쇄를 &lt;code&gt;요청한 문서가 몇 번째로 인쇄&lt;/code&gt;되는지 알고 싶습니다. 위의 예에서 C는 1번째로, A는 3번째로 인쇄됩니다.&lt;/p&gt;
&lt;p&gt;현재 대기목록에 있는 문서의 중요도가 순서대로 담긴 배열 priorities와 내가 인쇄를 요청한 문서가 현재 대기목록의 어떤 위치에 있는지를 알려주는 location이 매개변수로 주어질 때, 내가 인쇄를 요청한 문서가 몇 번째로 인쇄되는지 return 하도록 solution 함수를 작성해주세요.&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p>일반적인 프린터는 인쇄 요청이 들어온 순서대로 인쇄합니다.<br>그렇기 때문에 중요한 문서가 나중에 인쇄될 수 있습니다.<br>이런 문제를 보완하기 위해 <code>중요도가 높은 문서를 먼저 인쇄하는 프린터</code>를 개발했습니다.<br>이 새롭게 개발한 프린터는 아래와 같은 방식으로 인쇄 작업을 수행합니다.</p><ol><li>인쇄 대기목록의 가장 앞에 있는 문서(J)를 대기목록에서 꺼냅니다.</li><li>나머지 인쇄 대기목록에서 J보다 중요도가 높은 문서가 한 개라도 존재하면 J를 대기목록의 가장 마지막에 넣습니다.</li><li>그렇지 않으면 J를 인쇄합니다.<br>예를 들어, 4개의 문서(A, B, C, D)가 순서대로 인쇄 대기목록에 있고 중요도가 2 1 3 2 라면 C D A B 순으로 인쇄하게 됩니다.</li></ol><p>내가 인쇄를 <code>요청한 문서가 몇 번째로 인쇄</code>되는지 알고 싶습니다. 위의 예에서 C는 1번째로, A는 3번째로 인쇄됩니다.</p><p>현재 대기목록에 있는 문서의 중요도가 순서대로 담긴 배열 priorities와 내가 인쇄를 요청한 문서가 현재 대기목록의 어떤 위치에 있는지를 알려주는 location이 매개변수로 주어질 때, 내가 인쇄를 요청한 문서가 몇 번째로 인쇄되는지 return 하도록 solution 함수를 작성해주세요.</p><a id="more"></a><br><h2 id="제한사항"><a href="#제한사항" class="headerlink" title="제한사항"></a>제한사항</h2><p>현재 대기목록에는 1개 이상 100개 이하의 문서가 있습니다.<br>인쇄 작업의 중요도는 1~9로 표현하며 숫자가 클수록 중요하다는 뜻입니다.<br>location은 0 이상 (현재 대기목록에 있는 작업 수 - 1) 이하의 값을 가지며 대기목록의 가장 앞에 있으면 0, 두 번째에 있으면 1로 표현합니다.</p><br><h2 id="입출력-예"><a href="#입출력-예" class="headerlink" title="입출력 예"></a>입출력 예</h2><table><thead><tr><th align="center">priorities</th><th align="center">location</th><th align="center">return</th></tr></thead><tbody><tr><td align="center">[2, 1, 3, 2]</td><td align="center">2</td><td align="center">1</td></tr><tr><td align="center">[1, 1, 9, 1, 1, 1]</td><td align="center">0</td><td align="center">5</td></tr></tbody></table><h3 id="입출력-예-설명"><a href="#입출력-예-설명" class="headerlink" title="입출력 예 설명"></a>입출력 예 설명</h3><ul><li>예제 #1<ul><li>문제에 나온 예와 같습니다.</li></ul></li><li>예제 #2<ul><li>6개의 문서(A, B, C, D, E, F)가 인쇄 대기목록에 있고 중요도가 1 1 9 1 1 1 이므로 C D E F A B 순으로 인쇄합니다.</li></ul></li></ul><br><hr><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">solution</span>(<span class="hljs-params">priorities, location</span>) </span>&#123;</span><br><span class="line">    <span class="hljs-keyword">let</span> array = priorities;</span><br><span class="line">    <span class="hljs-keyword">let</span> result = location;</span><br><span class="line">    <span class="hljs-keyword">let</span> count = <span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">while</span>(result &gt;= <span class="hljs-number">0</span>) &#123;</span><br><span class="line">        <span class="hljs-built_in">Math</span>.max(...array) === array[<span class="hljs-number">0</span>] </span><br><span class="line">            ? (array.shift(), count++, result--) </span><br><span class="line">            : (array.push(array.shift()), result = result &gt; <span class="hljs-number">0</span> ? result - <span class="hljs-number">1</span> : result + array.length - <span class="hljs-number">1</span> )</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="hljs-keyword">return</span> count;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://alleyful.github.io/2019/06/23/algorithm/programmers/level2-01/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
