<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>ALLEY</title>
    <link>https://alleyful.github.io/</link>
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>alley&#39;s blog for study</description>
    <pubDate>Thu, 18 Jul 2019 08:24:25 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>Migratory Birds</title>
      <link>https://alleyful.github.io/2019/07/19/algorithm/hackerrank/17_MigratoryBirds/</link>
      <guid>https://alleyful.github.io/2019/07/19/algorithm/hackerrank/17_MigratoryBirds/</guid>
      <pubDate>Thu, 18 Jul 2019 15:14:31 GMT</pubDate>
      <description>
      
        &lt;p&gt;You have been asked to help study the population of birds migrating across the continent. Each type of bird you are interested in will be identified by an integer value. Each time a particular kind of bird is spotted, its id number will be added to your array of sightings. &lt;/p&gt;
&lt;p&gt;You would like to be able to find out which type of bird is most common given a list of sightings. Your task is to print the type number of that bird and if two or more types of birds are equally common, choose the type with the smallest ID number.&lt;/p&gt;
&lt;p&gt;For example, assume your bird sightings are of types &lt;code&gt;ar = [1, 1, 2, 2, 3]&lt;/code&gt;. There are two each of types &lt;strong&gt;1&lt;/strong&gt; and &lt;strong&gt;2&lt;/strong&gt;, and one sighting of type &lt;strong&gt;3&lt;/strong&gt;. Pick the lower of the two types seen twice: type &lt;strong&gt;1&lt;/strong&gt;.&lt;/p&gt;
&lt;br&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p>You have been asked to help study the population of birds migrating across the continent. Each type of bird you are interested in will be identified by an integer value. Each time a particular kind of bird is spotted, its id number will be added to your array of sightings. </p><p>You would like to be able to find out which type of bird is most common given a list of sightings. Your task is to print the type number of that bird and if two or more types of birds are equally common, choose the type with the smallest ID number.</p><p>For example, assume your bird sightings are of types <code>ar = [1, 1, 2, 2, 3]</code>. There are two each of types <strong>1</strong> and <strong>2</strong>, and one sighting of type <strong>3</strong>. Pick the lower of the two types seen twice: type <strong>1</strong>.</p><br><a id="more"></a><h2 id="Function-Description"><a href="#Function-Description" class="headerlink" title="Function Description"></a>Function Description</h2><p>Complete the migratoryBirds function in the editor below. It should return the lowest type number of the most frequently sighted bird.</p><p>migratoryBirds has the following parameter(s):</p><ul><li>arr: an array of integers representing types of birds sighted</li></ul><br><h2 id="Input-Format"><a href="#Input-Format" class="headerlink" title="Input Format"></a>Input Format</h2><p>The first line contains an integer denoting <strong>n</strong>, the number of birds sighted and reported in the array <strong>arr</strong>. The second line describes <strong>arr</strong> as <strong>n</strong> space-separated integers representing the type numbers of each bird sighted.</p><br><h2 id="Constraints"><a href="#Constraints" class="headerlink" title="Constraints"></a>Constraints</h2><ul><li><img src="https://latex.codecogs.com/gif.latex?5%5Cleq&space;n%5Cleq&space;2%5Ctimes&space;10%5E%7B5%7D" alt></li><li>It is guaranteed that each type is <strong>1</strong>, <strong>2</strong>, <strong>3</strong>, <strong>4</strong>, or <strong>5</strong>.</li></ul><br><h2 id="Output-Format"><a href="#Output-Format" class="headerlink" title="Output Format"></a>Output Format</h2><p>Print the type number of the most common bird; if two or more types of birds are equally common, choose the type with the smallest ID number.</p><br><h2 id="Sample-Input-0"><a href="#Sample-Input-0" class="headerlink" title="Sample Input 0"></a>Sample Input 0</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">6</span><br><span class="line">1 4 4 4 5 3</span><br></pre></td></tr></table></figure><br><h2 id="Sample-Output-0"><a href="#Sample-Output-0" class="headerlink" title="Sample Output 0"></a>Sample Output 0</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4</span><br></pre></td></tr></table></figure><br><h2 id="Explanation-0"><a href="#Explanation-0" class="headerlink" title="Explanation 0"></a>Explanation 0</h2><p>The different types of birds occur in the following frequencies:</p><ul><li>Type <strong>1</strong>: <strong>1</strong> bird</li><li>Type <strong>2</strong>: <strong>0</strong> birds</li><li>Type <strong>3</strong>: <strong>1</strong> bird</li><li>Type <strong>4</strong>: <strong>3</strong> birds</li><li>Type <strong>5</strong>: <strong>1</strong> bird  </li></ul><p>The type number that occurs at the highest frequency is type <strong>4</strong>, so we print <strong>4</strong> as our answer.</p><br><h2 id="Sample-Input-1"><a href="#Sample-Input-1" class="headerlink" title="Sample Input 1"></a>Sample Input 1</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">11</span><br><span class="line">1 2 3 4 5 4 3 2 1 3 4</span><br></pre></td></tr></table></figure><br><h2 id="Sample-Output-1"><a href="#Sample-Output-1" class="headerlink" title="Sample Output 1"></a>Sample Output 1</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><br><h2 id="Explanation-1"><a href="#Explanation-1" class="headerlink" title="Explanation 1"></a>Explanation 1</h2><p>The different types of birds occur in the following frequencies:</p><ul><li>Type <strong>1</strong>: <strong>2</strong> </li><li>Type <strong>2</strong>: <strong>2</strong> </li><li>Type <strong>3</strong>: <strong>3</strong> </li><li>Type <strong>4</strong>: <strong>3</strong> </li><li>Type <strong>5</strong>: <strong>1</strong> </li></ul><p>Two types have a frequency of <strong>3</strong>, and the lower of those is type <strong>3</strong>.</p><br><hr><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">migratoryBirds</span>(<span class="hljs-params">arr</span>) </span>&#123;</span><br><span class="line">    <span class="hljs-keyword">let</span> array = arr.sort(<span class="hljs-function">(<span class="hljs-params">a, b</span>) =&gt;</span> a - b).reduce(<span class="hljs-function">(<span class="hljs-params">target, bird</span>) =&gt;</span> &#123; </span><br><span class="line">        target[bird - <span class="hljs-number">1</span>] += <span class="hljs-number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="hljs-keyword">return</span> target;</span><br><span class="line">    &#125;, [<span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>, <span class="hljs-number">0</span>]);</span><br><span class="line"></span><br><span class="line">    <span class="hljs-keyword">return</span> array.findIndex(<span class="hljs-function"><span class="hljs-params">v</span> =&gt;</span> v === (<span class="hljs-built_in">Math</span>.max(...array))) + <span class="hljs-number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://alleyful.github.io/2019/07/19/algorithm/hackerrank/17_MigratoryBirds/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Divisible Sum Pairs</title>
      <link>https://alleyful.github.io/2019/07/17/algorithm/hackerrank/16_DivisibleSumPairs/</link>
      <guid>https://alleyful.github.io/2019/07/17/algorithm/hackerrank/16_DivisibleSumPairs/</guid>
      <pubDate>Wed, 17 Jul 2019 14:14:31 GMT</pubDate>
      <description>
      
        &lt;p&gt;You are given an array of &lt;strong&gt;n&lt;/strong&gt; integers, &lt;code&gt;ar = [ar[0], ar[1], ..., ar[n - 1]&lt;/code&gt;, and a positive integer, &lt;strong&gt;k&lt;/strong&gt;. Find and print the number of &lt;strong&gt;(i, j)&lt;/strong&gt; pairs where &lt;strong&gt;i &amp;lt; j&lt;/strong&gt; and  &lt;code&gt;ar[i] + ar[j]&lt;/code&gt; is divisible by &lt;strong&gt;k&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;For example, &lt;code&gt;ar = [1, 2, 3, 4, 5, 6]&lt;/code&gt; and &lt;code&gt;k = 5&lt;/code&gt;. Our three pairs meeting the criteria are &lt;code&gt;[1, 4]&lt;/code&gt;, &lt;code&gt;[2, 3]&lt;/code&gt; and &lt;code&gt;[4, 6]&lt;/code&gt;.&lt;/p&gt;
&lt;br&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p>You are given an array of <strong>n</strong> integers, <code>ar = [ar[0], ar[1], ..., ar[n - 1]</code>, and a positive integer, <strong>k</strong>. Find and print the number of <strong>(i, j)</strong> pairs where <strong>i &lt; j</strong> and  <code>ar[i] + ar[j]</code> is divisible by <strong>k</strong>.</p><p>For example, <code>ar = [1, 2, 3, 4, 5, 6]</code> and <code>k = 5</code>. Our three pairs meeting the criteria are <code>[1, 4]</code>, <code>[2, 3]</code> and <code>[4, 6]</code>.</p><br><a id="more"></a><h2 id="Function-Description"><a href="#Function-Description" class="headerlink" title="Function Description"></a>Function Description</h2><p>Complete the divisibleSumPairs function in the editor below. It should return the integer count of pairs meeting the criteria.</p><p>divisibleSumPairs has the following parameter(s):</p><ul><li>n: the integer length of array <strong>ar</strong></li><li>ar: an array of integers</li><li>k: the integer to divide the pair sum by</li></ul><br><h2 id="Input-Format"><a href="#Input-Format" class="headerlink" title="Input Format"></a>Input Format</h2><p>The first line contains <strong>2</strong> space-separated integers, <strong>n</strong> and <strong>k</strong>. The second line contains <strong>n</strong> space-separated integers describing the values of <strong>ar[ ar[0], ar[1], …, ar[n-1]]</strong>.</p><br><h2 id="Constraints"><a href="#Constraints" class="headerlink" title="Constraints"></a>Constraints</h2><ul><li><img src="https://latex.codecogs.com/gif.latex?2%5Cleq&space;n%5Cleq&space;100" alt></li><li><img src="https://latex.codecogs.com/gif.latex?1%5Cleq&space;k%5Cleq&space;100" alt></li><li><img src="https://latex.codecogs.com/gif.latex?1%5Cleq&space;a%5Bi%5D%5Cleq&space;100" alt></li></ul><br><h2 id="Output-Format"><a href="#Output-Format" class="headerlink" title="Output Format"></a>Output Format</h2><p>Print the number of (i, j) pairs where i &lt; j and a[i] + a[j] is evenly divisible by <strong>k</strong>.</p><br><h2 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">6 3</span><br><span class="line">1 3 2 6 1 2</span><br></pre></td></tr></table></figure><br><h2 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5</span><br></pre></td></tr></table></figure><br><h2 id="Explanation"><a href="#Explanation" class="headerlink" title="Explanation"></a>Explanation</h2><p>Here are the <strong>5</strong> valid pairs when <strong>k = 3</strong>:</p><ul><li>(0, 2) -&gt; ar[0] + ar[2] = 1 + 2 = 3</li><li>(0, 5) -&gt; ar[0] + ar[5] = 1 + 2 = 3</li><li>(1, 3) -&gt; ar[1] + ar[3] = 3 + 6 = 9</li><li>(2, 4) -&gt; ar[2] + ar[4] = 2 + 1 = 3</li><li>(4, 5) -&gt; ar[4] + ar[5] = 1 + 2 = 3</li></ul><br><hr><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">divisibleSumPairs</span>(<span class="hljs-params">n, k, ar</span>) </span>&#123;</span><br><span class="line">    <span class="hljs-keyword">return</span> ar.reduce(<span class="hljs-function">(<span class="hljs-params">target, numberm, index</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="hljs-keyword">new</span> <span class="hljs-built_in">Array</span>(n - index - <span class="hljs-number">1</span>).fill(<span class="hljs-number">0</span>).reduce(<span class="hljs-function">(<span class="hljs-params">innerTarget, fill, innerIndex</span>) =&gt;</span> &#123;</span><br><span class="line">            ((ar[index] + ar[innerIndex + index + <span class="hljs-number">1</span>]) % k === <span class="hljs-number">0</span>) &amp;&amp; target++;</span><br><span class="line"></span><br><span class="line">            <span class="hljs-keyword">return</span> innerTarget;</span><br><span class="line">        &#125;, <span class="hljs-number">0</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="hljs-keyword">return</span> target;</span><br><span class="line">    &#125;, <span class="hljs-number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://alleyful.github.io/2019/07/17/algorithm/hackerrank/16_DivisibleSumPairs/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Birthday Chocolate</title>
      <link>https://alleyful.github.io/2019/07/16/algorithm/hackerrank/15_BirthdayChocolate/</link>
      <guid>https://alleyful.github.io/2019/07/16/algorithm/hackerrank/15_BirthdayChocolate/</guid>
      <pubDate>Tue, 16 Jul 2019 13:28:51 GMT</pubDate>
      <description>
      
        &lt;p&gt;Lily has a chocolate bar that she wants to share it with Ron for his birthday. Each of the squares has an integer on it. She decides to share a contiguous segment of the bar selected such that the length of the segment matches Ron’s birth month and the sum of the integers on the squares is equal to his birth day. You must determine how many ways she can divide the chocolate.&lt;/p&gt;
&lt;p&gt;Consider the chocolate bar as an array of squares, &lt;code&gt;s = [2, 3, 1, 3, 2]&lt;/code&gt;. She wants to find segments summing to Ron’s birth day, &lt;code&gt;d = 4&lt;/code&gt; with a length equalling his birth month, &lt;code&gt;m = 2&lt;/code&gt;. In this case, there are two segments meeting her criteria: &lt;code&gt;[2, 2]&lt;/code&gt; and &lt;code&gt;[1, 3]&lt;/code&gt;.&lt;/p&gt;
&lt;br&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p>Lily has a chocolate bar that she wants to share it with Ron for his birthday. Each of the squares has an integer on it. She decides to share a contiguous segment of the bar selected such that the length of the segment matches Ron’s birth month and the sum of the integers on the squares is equal to his birth day. You must determine how many ways she can divide the chocolate.</p><p>Consider the chocolate bar as an array of squares, <code>s = [2, 3, 1, 3, 2]</code>. She wants to find segments summing to Ron’s birth day, <code>d = 4</code> with a length equalling his birth month, <code>m = 2</code>. In this case, there are two segments meeting her criteria: <code>[2, 2]</code> and <code>[1, 3]</code>.</p><br><a id="more"></a><h2 id="Function-Description"><a href="#Function-Description" class="headerlink" title="Function Description"></a>Function Description</h2><p>Complete the birthday function in the editor below. It should return an integer denoting the number of ways Lily can divide the chocolate bar.</p><p>birthday has the following parameter(s):</p><ul><li>s: an array of integers, the numbers on each of the squares of chocolate</li><li>d: an integer, Ron’s birth day</li><li>m: an integer, Ron’s birth month</li></ul><br><h2 id="Input-Format"><a href="#Input-Format" class="headerlink" title="Input Format"></a>Input Format</h2><p>The first line contains an integer <strong>n</strong>, the number of squares in the chocolate bar.<br>The second line contains <strong>n</strong> space-separated integers <strong>s[i]</strong>, the numbers on the chocolate squares where <img src="https://latex.codecogs.com/gif.latex?0%5Cleq&space;i%3C&space;n" alt>.   The third line contains two space-separated integers, <strong>d</strong> and <strong>m</strong>, Ron’s birth day and his birth month.</p><br><h2 id="Constraints"><a href="#Constraints" class="headerlink" title="Constraints"></a>Constraints</h2><h2 id="Output-Format"><a href="#Output-Format" class="headerlink" title="Output Format"></a>Output Format</h2><p>Print an integer denoting the total number of ways that Lily can portion her chocolate bar to share with Ron.</p><br><h2 id="Sample-Input-0"><a href="#Sample-Input-0" class="headerlink" title="Sample Input 0"></a>Sample Input 0</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">5</span><br><span class="line">1 2 1 3 2</span><br><span class="line">3 2</span><br></pre></td></tr></table></figure><br><h2 id="Sample-Output-0"><a href="#Sample-Output-0" class="headerlink" title="Sample Output 0"></a>Sample Output 0</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure><br><h2 id="Explanation-0"><a href="#Explanation-0" class="headerlink" title="Explanation 0"></a>Explanation 0</h2><p>Lily wants to give Ron <strong>m = 2</strong> squares summing to <strong>d = 3</strong>. The following two segments meet the criteria:</p><p><img src="./images/birthdayChocolate_01.png" alt></p><p>Sample Input 1</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">6</span><br><span class="line">1 1 1 1 1 1</span><br><span class="line">3 2</span><br></pre></td></tr></table></figure><br><h2 id="Sample-Output-1"><a href="#Sample-Output-1" class="headerlink" title="Sample Output 1"></a>Sample Output 1</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0</span><br></pre></td></tr></table></figure><br><h2 id="Explanation-1"><a href="#Explanation-1" class="headerlink" title="Explanation 1"></a>Explanation 1</h2><p>Lily only wants to give Ron <strong>m = 2</strong> consecutive squares of chocolate whose integers sum to <strong>d = 3</strong>. There are no possible pieces satisfying these constraints:</p><p><img src="./images/birthdayChocolate_02.png" alt></p><p>Thus, we print <strong>0</strong> as our answer.</p><br><h2 id="Sample-Input-2"><a href="#Sample-Input-2" class="headerlink" title="Sample Input 2"></a>Sample Input 2</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">4</span><br><span class="line">4 1</span><br></pre></td></tr></table></figure><br><h2 id="Sample-Output-2"><a href="#Sample-Output-2" class="headerlink" title="Sample Output 2"></a>Sample Output 2</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1</span><br></pre></td></tr></table></figure><br><h2 id="Explanation-2"><a href="#Explanation-2" class="headerlink" title="Explanation 2"></a>Explanation 2</h2><p>Lily only wants to give Ron <code>m = 1</code> square of chocolate with an integer value of <code>d = 4</code>. Because the only square of chocolate in the bar satisfies this constraint, we print <code>1</code> as our answer.</p><br><hr><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">birthday</span>(<span class="hljs-params">s, d, m</span>) </span>&#123;</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Array</span>(s.length - m + <span class="hljs-number">1</span>).fill(<span class="hljs-string">''</span>).reduce(<span class="hljs-function">(<span class="hljs-params">target, chocolate, index</span>) =&gt;</span> &#123;</span><br><span class="line">        (s.reduce(<span class="hljs-function">(<span class="hljs-params">target, number, innerIndex</span>) =&gt;</span> &#123;</span><br><span class="line">            (innerIndex &gt;= index &amp;&amp; innerIndex &lt; index + m) &amp;&amp; (target += number);</span><br><span class="line"></span><br><span class="line">            <span class="hljs-keyword">return</span> target;</span><br><span class="line">        &#125;, <span class="hljs-number">0</span>) === d) &amp;&amp; target++;</span><br><span class="line">        </span><br><span class="line">        <span class="hljs-keyword">return</span> target;</span><br><span class="line">    &#125;, <span class="hljs-number">0</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://alleyful.github.io/2019/07/16/algorithm/hackerrank/15_BirthdayChocolate/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Breaking the Records</title>
      <link>https://alleyful.github.io/2019/07/15/algorithm/hackerrank/14_BreakingTheRecords/</link>
      <guid>https://alleyful.github.io/2019/07/15/algorithm/hackerrank/14_BreakingTheRecords/</guid>
      <pubDate>Mon, 15 Jul 2019 14:51:10 GMT</pubDate>
      <description>
      
        &lt;p&gt;Maria plays college basketball and wants to go pro. Each season she maintains a record of her play. She tabulates the number of times she breaks her season record for most points and least points in a game. Points scored in the first game establish her record for the season, and she begins counting from there.&lt;/p&gt;
&lt;p&gt;For example, assume her scores for the season are represented in the array &lt;code&gt;scores = [12, 24, 10, 24]&lt;/code&gt;. Scores are in the same order as the games played. She would tabulate her results as follows:&lt;/p&gt;
&lt;br&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p>Maria plays college basketball and wants to go pro. Each season she maintains a record of her play. She tabulates the number of times she breaks her season record for most points and least points in a game. Points scored in the first game establish her record for the season, and she begins counting from there.</p><p>For example, assume her scores for the season are represented in the array <code>scores = [12, 24, 10, 24]</code>. Scores are in the same order as the games played. She would tabulate her results as follows:</p><br><a id="more"></a><h3 id="Count"><a href="#Count" class="headerlink" title="Count"></a>Count</h3><table><thead><tr><th align="center">Game</th><th align="center">Score</th><th align="center">Minimum</th><th align="center">Maximum</th><th align="center">Min</th><th align="center">Max</th></tr></thead><tbody><tr><td align="center">0</td><td align="center">12</td><td align="center">12</td><td align="center">12</td><td align="center">0</td><td align="center">0</td></tr><tr><td align="center">1</td><td align="center">24</td><td align="center">12</td><td align="center">24</td><td align="center">0</td><td align="center">1</td></tr><tr><td align="center">2</td><td align="center">10</td><td align="center">10</td><td align="center">24</td><td align="center">1</td><td align="center">1</td></tr><tr><td align="center">3</td><td align="center">24</td><td align="center">10</td><td align="center">24</td><td align="center">1</td><td align="center">1</td></tr></tbody></table><p>Given Maria’s scores for a season, find and print the number of times she breaks her records for most and least points scored during the season.</p><br><h2 id="Function-Description"><a href="#Function-Description" class="headerlink" title="Function Description"></a>Function Description</h2><p>Complete the breakingRecords function in the editor below. It must return an integer array containing the numbers of times she broke her records. Index <strong>0</strong> is for breaking most points records, and index <strong>1</strong> is for breaking least points records.</p><p>breakingRecords has the following parameter(s):</p><ul><li>scores: an array of integers</li></ul><br><h2 id="Input-Format"><a href="#Input-Format" class="headerlink" title="Input Format"></a>Input Format</h2><p>The first line contains an integer <strong>n</strong>, the number of games.<br>The second line contains <strong>n</strong> space-separated integers describing the respective values of <img src="https://latex.codecogs.com/gif.latex?score_%7B0%7D,&space;score_%7B1%7D,&space;...,&space;score_%7Bn-1%7D" alt>.</p><br><h2 id="Constraints"><a href="#Constraints" class="headerlink" title="Constraints"></a>Constraints</h2><ul><li><img src="https://latex.codecogs.com/gif.latex?1%5Cleq&space;n%5Cleq&space;1000" alt></li><li><img src="https://latex.codecogs.com/gif.latex?0%5Cleq&space;scores%5Bi%5D%5Cleq&space;10%5E%7B8%7D" alt></li></ul><br><h2 id="Output-Format"><a href="#Output-Format" class="headerlink" title="Output Format"></a>Output Format</h2><p>Print two space-seperated integers describing the respective numbers of times her best (highest) score increased and her worst (lowest) score decreased.</p><br><h2 id="Sample-Input-0"><a href="#Sample-Input-0" class="headerlink" title="Sample Input 0"></a>Sample Input 0</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">9</span><br><span class="line">10 5 20 20 4 5 2 25 1</span><br></pre></td></tr></table></figure><br><h2 id="Sample-Output-0"><a href="#Sample-Output-0" class="headerlink" title="Sample Output 0"></a>Sample Output 0</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2 4</span><br></pre></td></tr></table></figure><br><h2 id="Explanation-0"><a href="#Explanation-0" class="headerlink" title="Explanation 0"></a>Explanation 0</h2><p>The diagram below depicts the number of times Maria broke her best and worst records throughout the season:</p><p><img src="https://github.com/alleyful/algorithm-solutions/raw/master/HackerRank/ProblemSolving/images/breakingTheRecords_01.png" alt></p><p>She broke her best record twice (after games <strong>2</strong> and <strong>7</strong>) and her worst record four times (after games <strong>1</strong>, <strong>4</strong>, <strong>6</strong>, and <strong>8</strong>), so we print 2 4 as our answer. Note that she did not break her record for best score during game <strong>3</strong>, as her score during that game was not strictly greater than her best record at the time.</p><br><h2 id="Sample-Input-1"><a href="#Sample-Input-1" class="headerlink" title="Sample Input 1"></a>Sample Input 1</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">10</span><br><span class="line">3 4 21 36 10 28 35 5 24 42</span><br></pre></td></tr></table></figure><br><h2 id="Sample-Output-1"><a href="#Sample-Output-1" class="headerlink" title="Sample Output 1"></a>Sample Output 1</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">4 0</span><br></pre></td></tr></table></figure><br><h2 id="Explanation-1"><a href="#Explanation-1" class="headerlink" title="Explanation 1"></a>Explanation 1</h2><p>The diagram below depicts the number of times Maria broke her best and worst records throughout the season:</p><p><img src="https://github.com/alleyful/algorithm-solutions/raw/master/HackerRank/ProblemSolving/images/breakingTheRecords_02.png" alt></p><p>She broke her best record four times (after games <strong>1</strong>, <strong>2</strong>, <strong>3</strong>, and <strong>9</strong>) and her worst record zero times (no score during the season was lower than the one she earned during her first game), so we print 4 0 as our answer.</p><br><hr><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">breakingRecords</span>(<span class="hljs-params">scores</span>) </span>&#123;</span><br><span class="line">    <span class="hljs-keyword">let</span> minValue = scores[<span class="hljs-number">0</span>];</span><br><span class="line">    <span class="hljs-keyword">let</span> maxValue = scores[<span class="hljs-number">0</span>];</span><br><span class="line"></span><br><span class="line">    <span class="hljs-keyword">return</span> scores.reduce(<span class="hljs-function">(<span class="hljs-params">target, score</span>) =&gt;</span> &#123;</span><br><span class="line">        score &gt; maxValue</span><br><span class="line">            ? (target[<span class="hljs-number">0</span>]++, maxValue = score)</span><br><span class="line">            : (score &lt; minValue &amp;&amp; (target[<span class="hljs-number">1</span>]++ , minValue = score)); </span><br><span class="line">            </span><br><span class="line">        <span class="hljs-keyword">return</span> target;</span><br><span class="line">    &#125;, [<span class="hljs-number">0</span>, <span class="hljs-number">0</span>])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://alleyful.github.io/2019/07/15/algorithm/hackerrank/14_BreakingTheRecords/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Between Two Sets</title>
      <link>https://alleyful.github.io/2019/07/14/algorithm/hackerrank/13_BetweenTwoSets/</link>
      <guid>https://alleyful.github.io/2019/07/14/algorithm/hackerrank/13_BetweenTwoSets/</guid>
      <pubDate>Sun, 14 Jul 2019 12:22:13 GMT</pubDate>
      <description>
      
        &lt;p&gt;You will be given two arrays of integers and asked to determine all integers that satisfy the following two conditions:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The elements of the first array are all factors of the integer being considered&lt;/li&gt;
&lt;li&gt;The integer being considered is a factor of all elements of the second array  &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;These numbers are referred to as being between the two arrays. You must determine how many such numbers exist.&lt;/p&gt;
&lt;p&gt;For example, given the arrays &lt;code&gt;a = [2, 6]&lt;/code&gt; and &lt;code&gt;b = [24, 36]&lt;/code&gt;, there are two numbers between them: &lt;code&gt;6&lt;/code&gt; and &lt;code&gt;12&lt;/code&gt;. &lt;code&gt;6 % 2 = 0&lt;/code&gt;, &lt;code&gt;6 % 6 = 0&lt;/code&gt;, &lt;code&gt;24 % 6 = 0&lt;/code&gt; and &lt;code&gt;36 % 6 = 0&lt;/code&gt; for the first value. Similarly, &lt;code&gt;12 % 2 = 0&lt;/code&gt;, &lt;code&gt;12 % 6 = 0&lt;/code&gt; and &lt;code&gt;24 % 12 = 0&lt;/code&gt;, &lt;code&gt;36 % 12 = 0&lt;/code&gt;.&lt;/p&gt;
&lt;br&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p>You will be given two arrays of integers and asked to determine all integers that satisfy the following two conditions:</p><ol><li>The elements of the first array are all factors of the integer being considered</li><li>The integer being considered is a factor of all elements of the second array  </li></ol><p>These numbers are referred to as being between the two arrays. You must determine how many such numbers exist.</p><p>For example, given the arrays <code>a = [2, 6]</code> and <code>b = [24, 36]</code>, there are two numbers between them: <code>6</code> and <code>12</code>. <code>6 % 2 = 0</code>, <code>6 % 6 = 0</code>, <code>24 % 6 = 0</code> and <code>36 % 6 = 0</code> for the first value. Similarly, <code>12 % 2 = 0</code>, <code>12 % 6 = 0</code> and <code>24 % 12 = 0</code>, <code>36 % 12 = 0</code>.</p><br><a id="more"></a><h2 id="Function-Description"><a href="#Function-Description" class="headerlink" title="Function Description"></a>Function Description</h2><p>Complete the getTotalX function in the editor below. It should return the number of integers that are betwen the sets.</p><p>getTotalX has the following parameter(s):</p><ul><li>a: an array of integers</li><li>b: an array of integers</li></ul><br><h2 id="Input-Format"><a href="#Input-Format" class="headerlink" title="Input Format"></a>Input Format</h2><p>The first line contains two space-separated integers, <strong>n</strong> and <strong>m</strong>, the number of elements in array  and the number of elements in array <strong>b</strong>. The second line contains <strong>n</strong> distinct space-separated integers describing <strong>a[i]</strong> where <img src="https://latex.codecogs.com/gif.latex?0%5Cleq&space;i%3C&space;n" alt>. The third line contains <strong>m</strong> distinct space-separated integers describing <strong>b[i]</strong> where <img src="https://latex.codecogs.com/gif.latex?0%5Cleq&space;j%3C&space;m" alt>.</p><br><h2 id="Constraints"><a href="#Constraints" class="headerlink" title="Constraints"></a>Constraints</h2><ul><li><img src="https://latex.codecogs.com/gif.latex?1%5Cleq&space;n,&space;m%5Cleq&space;10" alt></li><li><img src="https://latex.codecogs.com/gif.latex?1%5Cleq&space;a%5Bi%5D%5Cleq&space;100" alt></li><li><img src="https://latex.codecogs.com/gif.latex?1%5Cleq&space;b%5Bj%5D%5Cleq&space;100" alt></li></ul><h2 id="Output-Format"><a href="#Output-Format" class="headerlink" title="Output Format"></a>Output Format</h2><p>Print the number of integers that are considered to be between <strong>a</strong> and <strong>b</strong>.</p><br><h2 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">2 3</span><br><span class="line">2 4</span><br><span class="line">16 32 96</span><br></pre></td></tr></table></figure><br><h2 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><br><h2 id="Explanation"><a href="#Explanation" class="headerlink" title="Explanation"></a>Explanation</h2><ul><li>2 and 4 divide evenly into 4, 8, 12 and 16.  </li><li>4, 8 and 16 divide evenly into 16, 32, 96.  </li><li>4, 8 and 16 are the only three numbers for which each element of a is a factor and each is a factor of all elements of b.</li></ul><br><hr><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getTotalX</span>(<span class="hljs-params">a, b</span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Array</span>(<span class="hljs-number">100</span>).fill(<span class="hljs-number">1</span>).reduce(<span class="hljs-function">(<span class="hljs-params">target, item, index</span>) =&gt;</span> &#123;</span><br><span class="line">        (a.every(<span class="hljs-function"><span class="hljs-params">value</span> =&gt;</span> !((index + <span class="hljs-number">1</span>) % value)) &amp;&amp; b.every(<span class="hljs-function"><span class="hljs-params">value</span> =&gt;</span> !(value % (index + <span class="hljs-number">1</span>)))) &amp;&amp; target++;</span><br><span class="line"></span><br><span class="line">        <span class="hljs-keyword">return</span> target;</span><br><span class="line">    &#125;, <span class="hljs-number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://alleyful.github.io/2019/07/14/algorithm/hackerrank/13_BetweenTwoSets/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Kangaroo</title>
      <link>https://alleyful.github.io/2019/07/13/algorithm/hackerrank/12_Kangaroo/</link>
      <guid>https://alleyful.github.io/2019/07/13/algorithm/hackerrank/12_Kangaroo/</guid>
      <pubDate>Sat, 13 Jul 2019 13:10:57 GMT</pubDate>
      <description>
      
        &lt;p&gt;You are choreographing a circus show with various animals. For one act, you are given two kangaroos on a number line ready to jump in the positive direction (i.e, toward positive infinity).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The first kangaroo starts at location &lt;code&gt;x1&lt;/code&gt; and moves at a rate of &lt;code&gt;v1&lt;/code&gt; meters per jump.&lt;/li&gt;
&lt;li&gt;The second kangaroo starts at location &lt;code&gt;x2&lt;/code&gt; and moves at a rate of &lt;code&gt;v2&lt;/code&gt; meters per jump.  &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You have to figure out a way to get both kangaroos at the same location at the same time as part of the show. If it is possible, return YES, otherwise return NO.&lt;/p&gt;
&lt;p&gt;For example, kangaroo &lt;strong&gt;1&lt;/strong&gt; starts at &lt;code&gt;x1 = 2&lt;/code&gt; with a jump distance &lt;code&gt;v1 =1&lt;/code&gt; and kangaroo &lt;strong&gt;2&lt;/strong&gt; starts at &lt;code&gt;x2 = 1&lt;/code&gt; with a jump distance of &lt;code&gt;v2 = 2&lt;/code&gt;. After one jump, they are both at &lt;code&gt;x = 3&lt;/code&gt;, &lt;code&gt;(x1 + v1 = 2, x2 + v2 = 1 + 2)&lt;/code&gt;, so our answer is YES.&lt;/p&gt;
&lt;br&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p>You are choreographing a circus show with various animals. For one act, you are given two kangaroos on a number line ready to jump in the positive direction (i.e, toward positive infinity).</p><ul><li>The first kangaroo starts at location <code>x1</code> and moves at a rate of <code>v1</code> meters per jump.</li><li>The second kangaroo starts at location <code>x2</code> and moves at a rate of <code>v2</code> meters per jump.  </li></ul><p>You have to figure out a way to get both kangaroos at the same location at the same time as part of the show. If it is possible, return YES, otherwise return NO.</p><p>For example, kangaroo <strong>1</strong> starts at <code>x1 = 2</code> with a jump distance <code>v1 =1</code> and kangaroo <strong>2</strong> starts at <code>x2 = 1</code> with a jump distance of <code>v2 = 2</code>. After one jump, they are both at <code>x = 3</code>, <code>(x1 + v1 = 2, x2 + v2 = 1 + 2)</code>, so our answer is YES.</p><br><a id="more"></a><h2 id="Function-Description"><a href="#Function-Description" class="headerlink" title="Function Description"></a>Function Description</h2><p>Complete the function kangaroo in the editor below. It should return YES if they reach the same position at the same time, or NO if they don’t.</p><p>kangaroo has the following parameter(s):</p><ul><li>x1, v1: integers, starting position and jump distance for kangaroo 1</li><li>x2, v2: integers, starting position and jump distance for kangaroo 2</li></ul><br><h2 id="Input-Format"><a href="#Input-Format" class="headerlink" title="Input Format"></a>Input Format</h2><p>A single line of four space-separated integers denoting the respective values of <strong>x1</strong>, <strong>v1</strong>, <strong>x2</strong>, and <strong>v2</strong>.</p><br><h2 id="Constraints"><a href="#Constraints" class="headerlink" title="Constraints"></a>Constraints</h2><ul><li><img src="https://latex.codecogs.com/gif.latex?0%5Cleq&space;x1%3C&space;x2%5Cleq&space;10000" alt></li><li><img src="https://latex.codecogs.com/gif.latex?1%5Cleq&space;v1%5Cleq&space;10000" alt></li><li><img src="https://latex.codecogs.com/gif.latex?1%5Cleq&space;v2%5Cleq&space;10000" alt></li></ul><h2 id="Output-Format"><a href="#Output-Format" class="headerlink" title="Output Format"></a>Output Format</h2><p>Print YES if they can land on the same location at the same time; otherwise, print NO.</p><p><strong>Note</strong>: The two kangaroos must land at the same location after making the same number of jumps.</p><br><h2 id="Sample-Input-0"><a href="#Sample-Input-0" class="headerlink" title="Sample Input 0"></a>Sample Input 0</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0 3 4 2</span><br></pre></td></tr></table></figure><br><h2 id="Sample-Output-0"><a href="#Sample-Output-0" class="headerlink" title="Sample Output 0"></a>Sample Output 0</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">YES</span><br></pre></td></tr></table></figure><br><h2 id="Explanation-0"><a href="#Explanation-0" class="headerlink" title="Explanation 0"></a>Explanation 0</h2><p>The two kangaroos jump through the following sequence of locations:  </p><p><img src="https://github.com/alleyful/algorithm-solutions/raw/master/HackerRank/ProblemSolving/images/kangaroo.png" alt></p><p>From the image, it is clear that the kangaroos meet at the same location (number <strong>12</strong> on the number line) after same number of jumps (<strong>4</strong> jumps), and we print YES.</p><br><h2 id="Sample-Input-1"><a href="#Sample-Input-1" class="headerlink" title="Sample Input 1"></a>Sample Input 1</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0 2 5 3</span><br></pre></td></tr></table></figure><br><p>Sample Output 1</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NO</span><br></pre></td></tr></table></figure><br><p>Explanation 1</p><p>The second kangaroo has a starting location that is ahead (further to the right) of the first kangaroo’s starting location (i.e., <img src="https://latex.codecogs.com/gif.latex?x_%7B2%7D%3E&space;x_%7B1%7D" alt>).<br>Because the second kangaroo moves at a faster rate (meaning <img src="https://latex.codecogs.com/gif.latex?v_%7B2%7D%3E&space;v_%7B1%7D" alt>) and is already ahead of the first kangaroo, the first kangaroo will never be able to catch up. Thus, we print NO.</p><br><hr><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">kangaroo</span>(<span class="hljs-params">x1, v1, x2, v2</span>) </span>&#123;</span><br><span class="line">  <span class="hljs-keyword">return</span> (x2 &gt; x1 &amp;&amp; v2 &gt; v1)</span><br><span class="line">    ? <span class="hljs-string">'NO'</span></span><br><span class="line">    : <span class="hljs-built_in">Number</span>.isInteger((x2 - x1) / (v1 - v2)) ? <span class="hljs-string">'YES'</span> : <span class="hljs-string">'NO'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://alleyful.github.io/2019/07/13/algorithm/hackerrank/12_Kangaroo/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Apple and Orange</title>
      <link>https://alleyful.github.io/2019/07/12/algorithm/hackerrank/11_AppleAndOrange/</link>
      <guid>https://alleyful.github.io/2019/07/12/algorithm/hackerrank/11_AppleAndOrange/</guid>
      <pubDate>Fri, 12 Jul 2019 12:40:26 GMT</pubDate>
      <description>
      
        &lt;p&gt;Sam’s house has an apple tree and an orange tree that yield an abundance of fruit. In the diagram below, the red region denotes his house, where &lt;code&gt;s&lt;/code&gt; is the start point, and &lt;code&gt;t&lt;/code&gt; is the endpoint.&lt;br&gt;The apple tree is to the left of his house, and the orange tree is to its right.&lt;br&gt;You can assume the trees are located on a single point, where the apple tree is at point &lt;code&gt;a&lt;/code&gt;, and the orange tree is at point &lt;code&gt;b&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://github.com/alleyful/algorithm-solutions/raw/master/HackerRank/ProblemSolving/images/appleandOrange.png&quot; alt&gt;&lt;/p&gt;
&lt;br&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p>Sam’s house has an apple tree and an orange tree that yield an abundance of fruit. In the diagram below, the red region denotes his house, where <code>s</code> is the start point, and <code>t</code> is the endpoint.<br>The apple tree is to the left of his house, and the orange tree is to its right.<br>You can assume the trees are located on a single point, where the apple tree is at point <code>a</code>, and the orange tree is at point <code>b</code>.</p><p><img src="https://github.com/alleyful/algorithm-solutions/raw/master/HackerRank/ProblemSolving/images/appleandOrange.png" alt></p><br><a id="more"></a><p>When a fruit falls from its tree, it lands <code>d</code> units of distance from its tree of origin along the <code>x</code>-axis. A negative value of <code>d</code> means the fruit fell <code>d</code> units to the tree’s left, and a positive value of <code>d</code> means it falls <code>d</code> units to the tree’s right.</p><p>Given the value of <code>d</code> for <code>m</code> apples and <code>n</code> oranges, determine how many apples and oranges will fall on Sam’s house (i.e., in the inclusive range <code>[s, t]</code>)?</p><p>For example, Sam’s house is between <code>s = 7</code> and <code>t = 10</code>. The apple tree is located at <code>a = 4</code> and the orange at <code>b = 12</code>. There are <code>m = 3</code> apples and <code>n = 3</code> oranges. Apples are thrown <code>apples = [2, 3, -4]</code> units distance from <code>a</code>, and <code>oranges = [3, -2, -4]</code> units distance.<br>Adding each apple distance to the position of the tree, they land at <code>[4 + 2, 4 + 3, 4 + -4] = [6, 7, 0]</code>. Oranges land at <code>[12 + 3, 12 + -2, 12 + -4] = [15, 10, 8]</code>. One apple and two oranges land in the inclusive range <code>7 - 10</code> so we print</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td></tr></table></figure><br><h2 id="Function-Description"><a href="#Function-Description" class="headerlink" title="Function Description"></a>Function Description</h2><p>Complete the countApplesAndOranges function in the editor below. It should print the number of apples and oranges that land on Sam’s house, each on a separate line.</p><p>countApplesAndOranges has the following parameter(s):</p><ul><li>s: integer, starting point of Sam’s house location.</li><li>t: integer, ending location of Sam’s house location.</li><li>a: integer, location of the Apple tree.</li><li>b: integer, location of the Orange tree.</li><li>apples: integer array, distances at which each apple falls from the tree.</li><li>oranges: integer array, distances at which each orange falls from the tree.</li></ul><br><h2 id="Input-Format"><a href="#Input-Format" class="headerlink" title="Input Format"></a>Input Format</h2><p>The first line contains two space-separated integers denoting the respective values of <strong>s</strong> and <strong>t</strong>. The second line contains two space-separated integers denoting the respective values of <strong>a</strong> and <strong>b</strong>. The third line contains two space-separated integers denoting the respective values of <strong>m</strong> and <strong>n</strong>. The fourth line contains <strong>m</strong> space-separated integers denoting the respective distances that each apple falls from point <strong>a</strong>. The fifth line contains <strong>n</strong> space-separated integers denoting the respective distances that each orange falls from point <strong>b</strong>.</p><br><h2 id="Constraints"><a href="#Constraints" class="headerlink" title="Constraints"></a>Constraints</h2><ul><li><img src="https://latex.codecogs.com/gif.latex?1%5Cleq&space;s,&space;t,&space;a,&space;b,&space;m,&space;n%5Cleq&space;10%5E%7B5%7D" alt></li><li><img src="https://latex.codecogs.com/gif.latex?-10%5E%7B5%7D%5Cleq&space;d%5Cleq&space;10%5E%7B5%7D" alt></li><li><img src="https://latex.codecogs.com/gif.latex?a%3C&space;s%3C&space;t%3C&space;b" alt></li></ul><br><h2 id="Output-Format"><a href="#Output-Format" class="headerlink" title="Output Format"></a>Output Format</h2><p>Print two integers on two different lines:</p><ol><li>The first integer: the number of apples that fall on Sam’s house.</li><li>The second integer: the number of oranges that fall on Sam’s house.</li></ol><br><h2 id="Sample-Input-0"><a href="#Sample-Input-0" class="headerlink" title="Sample Input 0"></a>Sample Input 0</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">7 11</span><br><span class="line">5 15</span><br><span class="line">3 2</span><br><span class="line">-2 2 1</span><br><span class="line">5 -6</span><br></pre></td></tr></table></figure><br><h2 id="Sample-Output-0"><a href="#Sample-Output-0" class="headerlink" title="Sample Output 0"></a>Sample Output 0</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1</span><br><span class="line">1</span><br></pre></td></tr></table></figure><br><h2 id="Explanation-0"><a href="#Explanation-0" class="headerlink" title="Explanation 0"></a>Explanation 0</h2><p>The first apple falls at position <strong>5 - 2 = 3</strong>. The second apple falls at position <strong>5 + 2 = 7</strong>. The third apple falls at position <strong>5 + 1 = 6</strong>. The first orange falls at position <strong>15 + 5 = 20</strong>. The second orange falls at position <strong>15 - 6 = 9</strong>. Only one fruit (the second apple) falls within the region between <strong>7</strong> and <strong>11</strong>, so we print <strong>1</strong> as our first line of output.<br>Only the second orange falls within the region between <strong>7</strong> and <strong>11</strong>, so we print <strong>1</strong> as our second line of output.</p><br><hr><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">countApplesAndOranges</span>(<span class="hljs-params">s, t, a, b, apples, oranges</span>) </span>&#123;</span><br><span class="line">    <span class="hljs-keyword">let</span> getItem = <span class="hljs-function">(<span class="hljs-params">arr, s, t, point</span>) =&gt;</span> arr.reduce(<span class="hljs-function">(<span class="hljs-params">target, item</span>) =&gt;</span> &#123;</span><br><span class="line">        (item + point &gt;= s &amp;&amp; item + point &lt;= t) &amp;&amp; ++target;</span><br><span class="line">        <span class="hljs-keyword">return</span> target;</span><br><span class="line">    &#125;, <span class="hljs-number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="hljs-keyword">return</span> [getItem(apples, s, t, a), getItem(oranges, s, t, b)].join(<span class="hljs-string">'\n'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://alleyful.github.io/2019/07/12/algorithm/hackerrank/11_AppleAndOrange/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Grading Students</title>
      <link>https://alleyful.github.io/2019/07/11/algorithm/hackerrank/10_GradingStudents/</link>
      <guid>https://alleyful.github.io/2019/07/11/algorithm/hackerrank/10_GradingStudents/</guid>
      <pubDate>Thu, 11 Jul 2019 14:17:32 GMT</pubDate>
      <description>
      
        &lt;p&gt;HackerLand University has the following grading policy:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Every student receives a &lt;code&gt;grade&lt;/code&gt; in the inclusive range from &lt;strong&gt;0&lt;/strong&gt; to &lt;strong&gt;100&lt;/strong&gt;.  &lt;/li&gt;
&lt;li&gt;Any &lt;code&gt;grade&lt;/code&gt; less than &lt;strong&gt;40&lt;/strong&gt; is a failing grade.&lt;br&gt;Sam is a professor at the university and likes to round each student’s &lt;code&gt;grade&lt;/code&gt; according to these rules:  &lt;/li&gt;
&lt;/ul&gt;
&lt;br&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p>HackerLand University has the following grading policy:</p><ul><li>Every student receives a <code>grade</code> in the inclusive range from <strong>0</strong> to <strong>100</strong>.  </li><li>Any <code>grade</code> less than <strong>40</strong> is a failing grade.<br>Sam is a professor at the university and likes to round each student’s <code>grade</code> according to these rules:  </li></ul><br><a id="more"></a><ul><li>If the difference between the <code>grade</code> and the next multiple of <strong>5</strong> is less than <strong>3</strong>, round <strong>grade</strong> up to the next multiple of <strong>5</strong>.</li><li>If the value of <strong>grade</strong> is less than <strong>38</strong>, no rounding occurs as the result will still be a failing grade.<br>For example, <code>grade = 84</code> will be rounded to <strong>85</strong> but grade = 29 will not be rounded because the rounding would result in a number that is less than <strong>40</strong>.</li></ul><p>Given the initial value of <strong>grade</strong> for each of Sam’s <strong>n</strong> students, write code to automate the rounding process.</p><br><h2 id="Function-Description"><a href="#Function-Description" class="headerlink" title="Function Description"></a>Function Description</h2><p>Complete the function gradingStudents in the editor below. It should return an integer array consisting of rounded grades.</p><p>gradingStudents has the following parameter(s):</p><ul><li>grades: an array of integers representing grades before rounding</li></ul><br><h2 id="Input-Format"><a href="#Input-Format" class="headerlink" title="Input Format"></a>Input Format</h2><p>The first line contains a single integer, <strong>n</strong>, the number of students.<br>Each line <strong>i</strong> of the <strong>n</strong> subsequent lines contains a single integer, <strong>grades[i]</strong>, denoting student <strong>i</strong>‘s grade.</p><br><h2 id="Constraints"><a href="#Constraints" class="headerlink" title="Constraints"></a>Constraints</h2><ul><li><img src="https://latex.codecogs.com/gif.latex?1%3C&space;n%5Cleq&space;60" alt>  </li><li><img src="https://latex.codecogs.com/gif.latex?0&space;%5Cleq&space;grades%5Bi%5D&space;%5Cleq&space;100" alt></li></ul><br><h2 id="Output-Format"><a href="#Output-Format" class="headerlink" title="Output Format"></a>Output Format</h2><p>For each <strong>grades[i]</strong>, print the rounded grade on a new line.</p><br><h2 id="Sample-Input-0"><a href="#Sample-Input-0" class="headerlink" title="Sample Input 0"></a>Sample Input 0</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">73</span><br><span class="line">67</span><br><span class="line">38</span><br><span class="line">33</span><br></pre></td></tr></table></figure><br><h2 id="Sample-Output-0"><a href="#Sample-Output-0" class="headerlink" title="Sample Output 0"></a>Sample Output 0</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">75</span><br><span class="line">67</span><br><span class="line">40</span><br><span class="line">33</span><br></pre></td></tr></table></figure><br><h2 id="Explanation-0"><a href="#Explanation-0" class="headerlink" title="Explanation 0"></a>Explanation 0</h2><p><img src="https://github.com/alleyful/algorithm-solutions/raw/master/HackerRank/ProblemSolving/images/gradingStudents.png" alt></p><p>Student 1 received a 73, and the next multiple of 5 from 73 is 75. Since 75 - 73 &lt; 3, the student’s grade is rounded to 75.<br>Student 2 received a 67, and the next multiple of 5 from 67 is 70. Since 70 - 67 = 3, the grade will not be modified and the student’s final grade is 67.<br>Student 3 received a 38, and the next multiple of 5 from 38 is 40. Since 40 - 38 &lt; 3, the student’s grade will be rounded to 40.<br>Student 4 received a grade below 38, so the grade will not be modified and the student’s final grade is 33.</p><br><hr><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">gradingStudents</span>(<span class="hljs-params">grades</span>) </span>&#123;</span><br><span class="line">  <span class="hljs-keyword">return</span> grades.reduce(<span class="hljs-function">(<span class="hljs-params">target, grade</span>) =&gt;</span> &#123;</span><br><span class="line">    target.push(</span><br><span class="line">      (grade &gt; <span class="hljs-number">37</span> &amp;&amp; ((grade % <span class="hljs-number">5</span>) &gt; <span class="hljs-number">2</span>))</span><br><span class="line">        ? (<span class="hljs-built_in">Math</span>.round(grade/<span class="hljs-number">5</span>)*<span class="hljs-number">5</span>)</span><br><span class="line">        : grade</span><br><span class="line">    );</span><br><span class="line">    </span><br><span class="line">    <span class="hljs-keyword">return</span> target;</span><br><span class="line">  &#125;, [])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://alleyful.github.io/2019/07/11/algorithm/hackerrank/10_GradingStudents/#disqus_thread</comments>
    </item>
    
    <item>
      <title>프로그래머스 - 가장 큰 수</title>
      <link>https://alleyful.github.io/2019/07/10/algorithm/programmers/level2-08/</link>
      <guid>https://alleyful.github.io/2019/07/10/algorithm/programmers/level2-08/</guid>
      <pubDate>Wed, 10 Jul 2019 14:01:28 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;문제-설명&quot;&gt;&lt;a href=&quot;#문제-설명&quot; class=&quot;headerlink&quot; title=&quot;문제 설명&quot;&gt;&lt;/a&gt;문제 설명&lt;/h2&gt;&lt;p&gt;0 또는 양의 정수가 주어졌을 때, &lt;code&gt;정수를 이어 붙여 만들 수 있는 가장 큰 수&lt;/code&gt;를 알아내 주세요.&lt;/p&gt;
&lt;p&gt;예를 들어, 주어진 정수가 [6, 10, 2]라면 [6102, 6210, 1062, 1026, 2610, 2106]를 만들 수 있고, 이중 가장 큰 수는 6210입니다.&lt;/p&gt;
&lt;p&gt;0 또는 양의 정수가 담긴 배열 numbers가 매개변수로 주어질 때, &lt;code&gt;순서를 재배치하여 만들 수 있는 가장 큰 수를 문자열로 바꾸어 return&lt;/code&gt; 하도록 solution 함수를 작성해주세요.&lt;/p&gt;
&lt;br&gt;
      
      </description>
      
      <content:encoded><![CDATA[<h2 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h2><p>0 또는 양의 정수가 주어졌을 때, <code>정수를 이어 붙여 만들 수 있는 가장 큰 수</code>를 알아내 주세요.</p><p>예를 들어, 주어진 정수가 [6, 10, 2]라면 [6102, 6210, 1062, 1026, 2610, 2106]를 만들 수 있고, 이중 가장 큰 수는 6210입니다.</p><p>0 또는 양의 정수가 담긴 배열 numbers가 매개변수로 주어질 때, <code>순서를 재배치하여 만들 수 있는 가장 큰 수를 문자열로 바꾸어 return</code> 하도록 solution 함수를 작성해주세요.</p><br><a id="more"></a><h2 id="제한-사항"><a href="#제한-사항" class="headerlink" title="제한 사항"></a>제한 사항</h2><ul><li>numbers의 길이는 1 이상 100,000 이하입니다.</li><li>numbers의 원소는 0 이상 1,000 이하입니다.</li><li>정답이 너무 클 수 있으니 문자열로 바꾸어 return 합니다.</li></ul><br><h2 id="입출력-예"><a href="#입출력-예" class="headerlink" title="입출력 예"></a>입출력 예</h2><table><thead><tr><th align="left">numbers</th><th align="left">return</th></tr></thead><tbody><tr><td align="left">[6, 10, 2]</td><td align="left">6210</td></tr><tr><td align="left">[3, 30, 34, 5, 9]</td><td align="left">9534330</td></tr></tbody></table><br><hr><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">solution</span>(<span class="hljs-params">numbers</span>) </span>&#123;</span><br><span class="line">    <span class="hljs-keyword">return</span> numbers.every(<span class="hljs-function"><span class="hljs-params">v</span> =&gt;</span> v === <span class="hljs-number">0</span>) </span><br><span class="line">    ? <span class="hljs-string">'0'</span> </span><br><span class="line">    : numbers.map(<span class="hljs-function"><span class="hljs-params">v</span> =&gt;</span> v.toString()).sort(<span class="hljs-function">(<span class="hljs-params">a, b</span>) =&gt;</span> (a+b) - (b+a)).reverse().join(<span class="hljs-string">''</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://alleyful.github.io/2019/07/10/algorithm/programmers/level2-08/#disqus_thread</comments>
    </item>
    
    <item>
      <title>HEXO - THEME(ICARUS)</title>
      <link>https://alleyful.github.io/2019/07/09/tools/hexo/hexo-guide-02/</link>
      <guid>https://alleyful.github.io/2019/07/09/tools/hexo/hexo-guide-02/</guid>
      <pubDate>Tue, 09 Jul 2019 14:38:37 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;HEXO-테마-설치하기&quot;&gt;&lt;a href=&quot;#HEXO-테마-설치하기&quot; class=&quot;headerlink&quot; title=&quot;HEXO 테마 설치하기&quot;&gt;&lt;/a&gt;HEXO 테마 설치하기&lt;/h2&gt;&lt;p&gt;hexo를 설치하면 기본적으로 &lt;code&gt;landscape&lt;/code&gt; 테마가 설치되어 있습니다.&lt;br&gt;하지만 직접 테마를 만들어 쓸 수 있도록 가이드를 제공하고 있습니다.&lt;br&gt;기본 설정을 수정해서 직접 테마를 만들어 사용하고 싶으시다면 &lt;a href=&quot;https://hexo.io/ko/docs/themes.html&quot; rel=&quot;external nofollow noopener noreferrer&quot; target=&quot;_blank&quot;&gt;HEXO THEME&lt;/a&gt;를 확인 해 주세요.&lt;/p&gt;
&lt;br&gt;
      
      </description>
      
      <content:encoded><![CDATA[<h2 id="HEXO-테마-설치하기"><a href="#HEXO-테마-설치하기" class="headerlink" title="HEXO 테마 설치하기"></a>HEXO 테마 설치하기</h2><p>hexo를 설치하면 기본적으로 <code>landscape</code> 테마가 설치되어 있습니다.<br>하지만 직접 테마를 만들어 쓸 수 있도록 가이드를 제공하고 있습니다.<br>기본 설정을 수정해서 직접 테마를 만들어 사용하고 싶으시다면 <a href="https://hexo.io/ko/docs/themes.html" rel="external nofollow noopener noreferrer" target="_blank">HEXO THEME</a>를 확인 해 주세요.</p><br><a id="more"></a><h3 id="테마찾기"><a href="#테마찾기" class="headerlink" title="테마찾기"></a>테마찾기</h3><p>기본 테마보다 이미 만들어진 다양한 스타일의 테마를 찾고 싶다면 <a href="https://hexo.io/themes/index.html" rel="external nofollow noopener noreferrer" target="_blank">Themes</a>에서 찾을 수 있습니다.<br>저는 ICARUS 테마를 설치하였습니다. 설치방법 및 사용방법은 비슷하기 문에 테마들 중 원하는 테마가 있는지 찾아보시기 바랍니다.</p><ul><li><a href="https://github.com/ppoffice/hexo-theme-icarus" rel="external nofollow noopener noreferrer" target="_blank">ICARUS GITHUB</a> </li><li><a href="https://blog.zhangruipeng.me/hexo-theme-icarus/" rel="external nofollow noopener noreferrer" target="_blank">블로그 미리보기</a></li></ul><br><h3 id="설치하기"><a href="#설치하기" class="headerlink" title="설치하기"></a>설치하기</h3><ul><li>hexo init을 했던 폴더로 이동해서 clone 해주세요.  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@glorious/demo@0.8.0/dist/gdemo.min.css"><script src="https://cdn.jsdelivr.net/npm/@glorious/demo@0.8.0/dist/gdemo.min.js"></script>            <div id="demo-teriminal-1" style="height: 70px"></div>            <script>        new GDemo('#demo-teriminal-1')          .openApp('terminal', {minHeight: '70px', windowTitle: 'zsh', promptString: '$'})          .command(`git clone https://github.com/ppoffice/hexo-theme-icarus.git themes/icarus -b`, {onCompleteDelay: 500})          .respond(``)          .end();    </script>  </li></ul><br><h3 id="환경설정"><a href="#환경설정" class="headerlink" title="환경설정"></a>환경설정</h3><ul><li><p>hexo의 <code>_config.yml</code>의 <code>THEME</code>를 기본이었던 landscape에서 icarus로 수정해주세요.</p>  <figure class="highlight plain hljs"><figcaption><span>_config.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">## Themes: https://hexo.io/themes/</span><br><span class="line">theme: icarus</span><br></pre></td></tr></table></figure><ul><li>icarus의 기본 테마 설치가 끝났습니다.</li><li><code>hexo s</code>로 로컬서버에서 확인 할 수 있습니다.</li></ul></li></ul><br><ul><li><p>Profile Sidebar Widget</p>  <figure class="highlight plain hljs"><figcaption><span>_config.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">-</span><br><span class="line">  type: profile</span><br><span class="line">  position: # show in left or right sidebar</span><br><span class="line">  author: # your name</span><br><span class="line">  author_title: # your title</span><br><span class="line">  location: # where are you</span><br><span class="line">  avatar: # path or url to your avatar image</span><br><span class="line">  gravatar: # your gravatar email</span><br><span class="line">  follow_link: # path or url to any page you want</span><br><span class="line">  social_links: # add links to your social network here</span><br><span class="line">  </span><br></pre></td></tr></table></figure><ul><li>profile 설정을 할 수 있습니다.</li></ul></li></ul><br><ul><li><p>Sidebar Widgets Overview</p>  <figure class="highlight plain hljs"><figcaption><span>_config.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">widgets:</span><br><span class="line">    -</span><br><span class="line">        type: category</span><br><span class="line">        position: left</span><br><span class="line">    -</span><br><span class="line">        type: tagcloud</span><br><span class="line">        position: left</span><br><span class="line">    -</span><br><span class="line">        type: recent_posts</span><br><span class="line">        position: right</span><br><span class="line">    -</span><br><span class="line">        type: archive</span><br><span class="line">        position: right</span><br><span class="line">    -</span><br><span class="line">        type: tag</span><br><span class="line">        position: right</span><br><span class="line">  </span><br></pre></td></tr></table></figure><ul><li>위젯의 위치를 설정할 수 있습니다.</li><li>왼쪽과 오른쪽으로 나눌 수 있으며, 한쪽으로 정렬할 경우 제 블로그처럼 컨텐츠 영역을 더욱 넢게 사용 할 수 있습니다.</li></ul></li></ul><br><ul><li><p>Make a Sidebar Sticky When Page Scrolls</p>  <figure class="highlight plain hljs"><figcaption><span>_config.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sidebar:</span><br><span class="line">    left:</span><br><span class="line">        sticky: false</span><br><span class="line">    right:</span><br><span class="line">        sticky: true</span><br></pre></td></tr></table></figure><ul><li>양쪽 위젯의 position sticky 값을 설정할 수 있습니다.</li><li>true : top 고</li></ul></li></ul><br><br><hr><h2 id="활용"><a href="#활용" class="headerlink" title="활용"></a>활용</h2><h3 id="Thumbnail"><a href="#Thumbnail" class="headerlink" title="Thumbnail"></a>Thumbnail</h3><ul><li><p>thumbnail의 사용 유무를 설정 할 수 있습니다.</p><ul><li><p>_config.yml</p><figure class="highlight plain hljs"><figcaption><span>_config.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">article:</span><br><span class="line">     thumbnail: true</span><br></pre></td></tr></table></figure>  </li><li><p>post의 front-matter</p><figure class="highlight plain hljs"><figcaption><span>post.md</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">title: Getting Started with Icarus</span><br><span class="line">thumbnail: /gallery/thumbnails/desert.jpg</span><br><span class="line">---</span><br><span class="line">내용</span><br></pre></td></tr></table></figure></li></ul></li></ul><br><h3 id="Table-of-Contents-Catalogue"><a href="#Table-of-Contents-Catalogue" class="headerlink" title="Table of Contents / Catalogue"></a>Table of Contents / Catalogue</h3><ul><li><p>Post 내 컨텐츠의 목차를 보여줄 수 있습니다. 오른쪽에 보이는 <code>CATALOGUE</code>의 형태로 보여집니다.</p><ul><li><p>post의 front-matter</p><figure class="highlight plain hljs"><figcaption><span>post.md</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">title: Table of Contents Example</span><br><span class="line">toc: true</span><br><span class="line">---</span><br><span class="line">내용</span><br></pre></td></tr></table></figure></li><li><p>_config.yml</p><figure class="highlight plain hljs"><figcaption><span>_config.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">widgets:</span><br><span class="line">     -</span><br><span class="line">         type: toc</span><br><span class="line">         position: left</span><br></pre></td></tr></table></figure>  </li></ul></li></ul><br><h3 id="Block-Quote"><a href="#Block-Quote" class="headerlink" title="Block Quote"></a>Block Quote</h3><ul><li><p>blockquote 타입의 컨텐츠를 보여줄 수 있습니다.</p><ul><li><p>No arguments</p><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% blockquote %&#125;</span><br><span class="line">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.</span><br><span class="line">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure><br><blockquote><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.</p></blockquote><br></li><li><p>Quote from an article on the web</p><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% blockquote Seth Godin https:<span class="hljs-comment">//alleyful.github.io/2019/07/07/tools/hexo/hexo-guide-01/ HEXO - 시작하기 %&#125;</span></span><br><span class="line">HEXO - 시작하기</span><br><span class="line">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure><br><blockquote><p>HEXO - 시작하기</p><footer><strong>Seth Godin</strong><cite><a href="https://alleyful.github.io/2019/07/07/tools/hexo/hexo-guide-01/">HEXO - 시작하기</a></cite></footer></blockquote></li></ul><br></li></ul><h3 id="Code-Block"><a href="#Code-Block" class="headerlink" title="Code Block"></a>Code Block</h3><ul><li><p>code형태의 컨텐츠를 보여줄 수 있습니다.</p><ul><li><p>기본형태</p><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% codeblock [title] [lang:language] [url] [link text] %&#125;</span><br><span class="line">code snippet</span><br><span class="line">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure><br></li><li><p>Adding a caption to the code block</p><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% codeblock <span class="hljs-built_in">Array</span>.map %&#125;</span><br><span class="line"> array.map(callback[, thisArg])</span><br><span class="line"> &#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure><br><figure class="highlight plain hljs"><figcaption><span>Array.map</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">array.map(callback[, thisArg])</span><br></pre></td></tr></table></figure><br></li><li><p>Adding a caption and a URL</p><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% codeblock _.compact http:<span class="hljs-comment">//underscorejs.org/#compact Underscore.js %&#125;</span></span><br><span class="line">_.compact([<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-literal">false</span>, <span class="hljs-number">2</span>, <span class="hljs-string">''</span>, <span class="hljs-number">3</span>]);</span><br><span class="line">=&gt; [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>]</span><br><span class="line">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure><br><figure class="highlight plain hljs"><figcaption><span>_.compact</span><a href="http://underscorejs.org/#compact" rel="external nofollow noopener noreferrer" target="_blank">Underscore.js</a></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">_.compact([0, 1, false, 2, &apos;&apos;, 3]);</span><br><span class="line">=&gt; [1, 2, 3]</span><br></pre></td></tr></table></figure></li></ul></li></ul><br><h3 id="ETC"><a href="#ETC" class="headerlink" title="ETC."></a>ETC.</h3><ul><li>Pull Quote</li><li>jsFiddle</li><li>Gist</li><li>iframe</li><li>Image</li><li>Link</li><li>YouTube</li><li>Vimeo</li></ul><p>등 많은 helper 들의 사용법을 <a href="https://blog.zhangruipeng.me/hexo-theme-icarus/Configuration/Posts/hexo-built-in-tag-helpers/" rel="external nofollow noopener noreferrer" target="_blank">여기</a>에서 확인 할 수 있습니다.</p><br><br><hr><h2 id="HEXO-BLOG-검색-엔진-최적화-SEO"><a href="#HEXO-BLOG-검색-엔진-최적화-SEO" class="headerlink" title="HEXO BLOG 검색 엔진 최적화(SEO)"></a>HEXO BLOG 검색 엔진 최적화(SEO)</h2><p>내가 만든 블로그가 검색 될 수 있도록 해보도록 할까요?<br>다음글에서는 HEXO BLOG의 검색 최적화에 도전해 보도록 하겠습니다.</p><br>]]></content:encoded>
      
      <comments>https://alleyful.github.io/2019/07/09/tools/hexo/hexo-guide-02/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Time Conversion</title>
      <link>https://alleyful.github.io/2019/07/09/algorithm/hackerrank/09_TimeConversion/</link>
      <guid>https://alleyful.github.io/2019/07/09/algorithm/hackerrank/09_TimeConversion/</guid>
      <pubDate>Tue, 09 Jul 2019 14:30:10 GMT</pubDate>
      <description>
      
        &lt;p&gt;Given a time in &lt;code&gt;12-hour AM/PM format&lt;/code&gt;, convert it to military (24-hour) time.&lt;/p&gt;
&lt;p&gt;Note: Midnight is 12:00:00AM on a 12-hour clock, and 00:00:00 on a 24-hour clock. Noon is 12:00:00PM on a 12-hour clock, and 12:00:00 on a 24-hour clock.&lt;/p&gt;
&lt;br&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p>Given a time in <code>12-hour AM/PM format</code>, convert it to military (24-hour) time.</p><p>Note: Midnight is 12:00:00AM on a 12-hour clock, and 00:00:00 on a 24-hour clock. Noon is 12:00:00PM on a 12-hour clock, and 12:00:00 on a 24-hour clock.</p><br><a id="more"></a><h2 id="Function-Description"><a href="#Function-Description" class="headerlink" title="Function Description"></a>Function Description</h2><p>Complete the timeConversion function in the editor below. It should return a new string representing the input time in 24 hour format.</p><p>timeConversion has the following parameter(s):</p><ul><li>s: a string representing time in  hour format</li></ul><br><h2 id="Input-Format"><a href="#Input-Format" class="headerlink" title="Input Format"></a>Input Format</h2><p>A single string  containing a time in 12-hour clock format (i.e.: <strong>hh:mm:ssAM</strong> or <strong>hh:mm:ssPM</strong>), where <img src="https://latex.codecogs.com/gif.latex?01%5Cleq&space;hh%5Cleq&space;12" alt> and <img src="https://latex.codecogs.com/gif.latex?00%5Cleq&space;mm,&space;ss%5Cleq&space;59" alt>.</p><br><h2 id="Constraints"><a href="#Constraints" class="headerlink" title="Constraints"></a>Constraints</h2><ul><li>All input times are valid</li></ul><br><h2 id="Output-Format"><a href="#Output-Format" class="headerlink" title="Output Format"></a>Output Format</h2><p>Convert and print the given time in 24-hour format, where <img src="https://latex.codecogs.com/gif.latex?00%5Cleq&space;hh%5Cleq&space;23" alt>.</p><br><h2 id="Sample-Input-0"><a href="#Sample-Input-0" class="headerlink" title="Sample Input 0"></a>Sample Input 0</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">07:05:45PM</span><br></pre></td></tr></table></figure><br><h2 id="Sample-Output-0"><a href="#Sample-Output-0" class="headerlink" title="Sample Output 0"></a>Sample Output 0</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">19:05:45</span><br></pre></td></tr></table></figure><br><hr><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">timeConversion</span>(<span class="hljs-params">s</span>) </span>&#123;</span><br><span class="line">    <span class="hljs-keyword">let</span> time = s.match(<span class="hljs-regexp">/(\d|\:)/ig</span>);</span><br><span class="line">    <span class="hljs-keyword">let</span> tag = s.match(<span class="hljs-regexp">/(A|P)/ig</span>).join(<span class="hljs-string">''</span>);</span><br><span class="line"></span><br><span class="line">    <span class="hljs-keyword">return</span> time.join(<span class="hljs-string">''</span>).split(<span class="hljs-string">':'</span>).map(<span class="hljs-function">(<span class="hljs-params">v, i</span>) =&gt;</span> &#123; </span><br><span class="line">        <span class="hljs-keyword">return</span> i === <span class="hljs-number">0</span> ? (</span><br><span class="line">            tag.match(<span class="hljs-regexp">/P/i</span>)</span><br><span class="line">                ? <span class="hljs-built_in">Number</span>(v) === <span class="hljs-number">0</span> ? <span class="hljs-string">'00'</span> : (<span class="hljs-built_in">Number</span>(v) % <span class="hljs-number">12</span>) + <span class="hljs-number">12</span></span><br><span class="line">                : <span class="hljs-built_in">Number</span>(v) % <span class="hljs-number">12</span> === <span class="hljs-number">0</span> ? <span class="hljs-string">'00'</span> : v</span><br><span class="line">        ) : v</span><br><span class="line">    &#125;).join(<span class="hljs-string">':'</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://alleyful.github.io/2019/07/09/algorithm/hackerrank/09_TimeConversion/#disqus_thread</comments>
    </item>
    
    <item>
      <title>프로그래머스 - 다리를 지나는 트럭</title>
      <link>https://alleyful.github.io/2019/07/08/algorithm/programmers/level2-07/</link>
      <guid>https://alleyful.github.io/2019/07/08/algorithm/programmers/level2-07/</guid>
      <pubDate>Mon, 08 Jul 2019 12:41:46 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;문제-설명&quot;&gt;&lt;a href=&quot;#문제-설명&quot; class=&quot;headerlink&quot; title=&quot;문제 설명&quot;&gt;&lt;/a&gt;문제 설명&lt;/h2&gt;&lt;p&gt;트럭 여러 대가 강을 가로지르는 &lt;code&gt;일 차선 다리를 정해진 순&lt;/code&gt;으로 건너려 합니다. &lt;code&gt;모든 트럭이 다리를 건너려면 최소 몇 초가 걸리는지&lt;/code&gt; 알아내야 합니다. 트럭은 1초에 1만큼 움직이며, 다리 길이는 bridge_length이고 다리는 무게 weight까지 견딥니다.  &lt;/p&gt;
&lt;p&gt;※ 트럭이 다리에 완전히 오르지 않은 경우, 이 트럭의 무게는 고려하지 않습니다.  &lt;/p&gt;
&lt;br&gt;
      
      </description>
      
      <content:encoded><![CDATA[<h2 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h2><p>트럭 여러 대가 강을 가로지르는 <code>일 차선 다리를 정해진 순</code>으로 건너려 합니다. <code>모든 트럭이 다리를 건너려면 최소 몇 초가 걸리는지</code> 알아내야 합니다. 트럭은 1초에 1만큼 움직이며, 다리 길이는 bridge_length이고 다리는 무게 weight까지 견딥니다.  </p><p>※ 트럭이 다리에 완전히 오르지 않은 경우, 이 트럭의 무게는 고려하지 않습니다.  </p><br><a id="more"></a><p>예를 들어, 길이가 2이고 10kg 무게를 견디는 다리가 있습니다. 무게가 [7, 4, 5, 6]kg인 트럭이 순서대로 최단 시간 안에 다리를 건너려면 다음과 같이 건너야 합니다.</p><table><thead><tr><th align="center">경과 시간</th><th align="center">다리를 지난 트럭</th><th align="center">다리를 건너는 트럭</th><th align="center">대기 트럭</th></tr></thead><tbody><tr><td align="center">0</td><td align="center">[]</td><td align="center">[]</td><td align="center">[7,4,5,6]</td></tr><tr><td align="center">1~2</td><td align="center">[]</td><td align="center">[7]</td><td align="center">[4,5,6]</td></tr><tr><td align="center">3</td><td align="center">[7]</td><td align="center">[4]</td><td align="center">[5,6]</td></tr><tr><td align="center">4</td><td align="center">[7]</td><td align="center">[4,5]</td><td align="center">[6]</td></tr><tr><td align="center">5</td><td align="center">[7,4]</td><td align="center">[5]</td><td align="center">[6]</td></tr><tr><td align="center">6~7</td><td align="center">[7,4,5]</td><td align="center">[6]</td><td align="center">[]</td></tr><tr><td align="center">8</td><td align="center">[7,4,5,6]</td><td align="center">[]</td><td align="center">[]</td></tr></tbody></table><p>따라서, 모든 트럭이 다리를 지나려면 최소 8초가 걸립니다.</p><p>solution 함수의 매개변수로 다리 길이 bridgelength, 다리가 견딜 수 있는 무게 weight, 트럭별 무게 truckweights가 주어집니다. 이때 모든 트럭이 다리를 건너려면 최소 몇 초가 걸리는지 return 하도록 solution 함수를 완성하세요.</p><br><h2 id="제한-조건"><a href="#제한-조건" class="headerlink" title="제한 조건"></a>제한 조건</h2><ul><li>bridge_length는 1 이상 10,000 이하입니다.</li><li>weight는 1 이상 10,000 이하입니다.</li><li>truck_weights의 길이는 1 이상 10,000 이하입니다.</li><li>모든 트럭의 무게는 1 이상 weight 이하입니다.</li></ul><br><h2 id="입출력-예"><a href="#입출력-예" class="headerlink" title="입출력 예"></a>입출력 예</h2><table><thead><tr><th align="left">bridge_length</th><th align="left">weight</th><th align="left">truck_weights</th><th align="left">return</th></tr></thead><tbody><tr><td align="left">2</td><td align="left">10</td><td align="left">[7,4,5,6]</td><td align="left">8</td></tr><tr><td align="left">100</td><td align="left">100</td><td align="left">[10]</td><td align="left">101</td></tr><tr><td align="left">100</td><td align="left">100</td><td align="left">[10,10,10,10,10,10,10,10,10,10]</td><td align="left">110</td></tr></tbody></table><br><hr><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">solution</span>(<span class="hljs-params">bridge_length, weight, truck_weights</span>) </span>&#123;</span><br><span class="line">    <span class="hljs-keyword">let</span> on_bridge = [];</span><br><span class="line">    <span class="hljs-keyword">let</span> time = <span class="hljs-number">0</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="hljs-keyword">while</span>(on_bridge.length &gt; <span class="hljs-number">0</span> || truck_weights.length &gt; <span class="hljs-number">0</span>)&#123;    </span><br><span class="line">        on_bridge = on_bridge.reduce(<span class="hljs-function">(<span class="hljs-params">target, truck</span>) =&gt;</span> &#123;</span><br><span class="line">            truck[<span class="hljs-string">'delay'</span>] = truck[<span class="hljs-string">'delay'</span>] - <span class="hljs-number">1</span>;</span><br><span class="line">            truck[<span class="hljs-string">'delay'</span>] &gt; <span class="hljs-number">0</span> &amp;&amp; target.push(truck);            </span><br><span class="line">            <span class="hljs-keyword">return</span> target;</span><br><span class="line">        &#125;, []);</span><br><span class="line">        </span><br><span class="line">        <span class="hljs-keyword">let</span> sum = on_bridge.reduce(<span class="hljs-function">(<span class="hljs-params">target, truck</span>) =&gt;</span> target + truck[<span class="hljs-string">'weight'</span>], <span class="hljs-number">0</span>);</span><br><span class="line">        </span><br><span class="line">        ((sum + truck_weights[<span class="hljs-number">0</span>] &lt;= weight) &amp;&amp; (on_bridge.length &lt; bridge_length)) </span><br><span class="line">        &amp;&amp; on_bridge.push(&#123;<span class="hljs-string">'weight'</span>:truck_weights.shift(), <span class="hljs-string">'delay'</span>: bridge_length&#125;);</span><br><span class="line">              </span><br><span class="line">        ++time;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="hljs-keyword">return</span> time;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://alleyful.github.io/2019/07/08/algorithm/programmers/level2-07/#disqus_thread</comments>
    </item>
    
    <item>
      <title>HEXO - 시작하기</title>
      <link>https://alleyful.github.io/2019/07/07/tools/hexo/hexo-guide-01/</link>
      <guid>https://alleyful.github.io/2019/07/07/tools/hexo/hexo-guide-01/</guid>
      <pubDate>Sun, 07 Jul 2019 11:28:44 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;정적-블로그-HEXO-시작해보기&quot;&gt;&lt;a href=&quot;#정적-블로그-HEXO-시작해보기&quot; class=&quot;headerlink&quot; title=&quot;정적 블로그, HEXO 시작해보기&quot;&gt;&lt;/a&gt;정적 블로그, HEXO 시작해보기&lt;/h2&gt;&lt;p&gt;프론트엔트 개발을 시작하면서 그동안 공부해오던 것을 정리해야할 필요성이 생겼습니다.&lt;br&gt;좋은 자료, 세미나, 기술 서적, 스터디, 개발하면서 느꼈던 점 등을 정리하고 그 흔적을 남겨보고자 블로그를 시작하게 되었습니다. &lt;/p&gt;
&lt;p&gt;설치형 블로그, 서비스형 블로그, 동적 혹은 정적 블로그 등 설치 방법과 사용방법에 따라 다양하게 나뉘고 있는 블로그들 중 설치형 정적 블로그로 말할 수 있는 &lt;code&gt;HEXO&lt;/code&gt;를 사용하게 되었고, 그 방법을 공유하고자 합니다.&lt;/p&gt;
&lt;br&gt;
      
      </description>
      
      <content:encoded><![CDATA[<h2 id="정적-블로그-HEXO-시작해보기"><a href="#정적-블로그-HEXO-시작해보기" class="headerlink" title="정적 블로그, HEXO 시작해보기"></a>정적 블로그, HEXO 시작해보기</h2><p>프론트엔트 개발을 시작하면서 그동안 공부해오던 것을 정리해야할 필요성이 생겼습니다.<br>좋은 자료, 세미나, 기술 서적, 스터디, 개발하면서 느꼈던 점 등을 정리하고 그 흔적을 남겨보고자 블로그를 시작하게 되었습니다. </p><p>설치형 블로그, 서비스형 블로그, 동적 혹은 정적 블로그 등 설치 방법과 사용방법에 따라 다양하게 나뉘고 있는 블로그들 중 설치형 정적 블로그로 말할 수 있는 <code>HEXO</code>를 사용하게 되었고, 그 방법을 공유하고자 합니다.</p><br><a id="more"></a><h3 id="공식-사이트에서-얘기하는-HEXO"><a href="#공식-사이트에서-얘기하는-HEXO" class="headerlink" title="공식 사이트에서 얘기하는 HEXO!"></a>공식 사이트에서 얘기하는 HEXO!</h3><p> Node.js 기반의 정적사이트 생성기(Static site generator)의 일종으로 <code>빠르고 간단하고 강력한 블로그 프레임워크</code>입니다.</p><ol><li><p><code>엄청나게 빠른 속도</code>  </p><ul><li>Node.js는 몇 초만에 수백개의 파일을 빌드할 수 있을 정도로 빠른 생성 속도를 제공합니다.</li></ul></li><li><p><code>Markdown 지원</code>  </p><ul><li>친화적인 Markdown의 모든 기능을 지원하며 거의 모든 Octopress 플러그인들을 사용할 수 있습니다.</li></ul></li><li><p><code>한 번의 명령으로 Deployment 하기</code>  </p><ul><li>단지 하나의 명령어로 당신의 웹 사이트를 GitHub나 Heroku에 deploy할 수 있습니다.</li></ul></li><li><p><code>다양한 플러그인</code>  </p><ul><li>Hexo는 강력한 플러그인 시스템을 가지고 있습니다. 사용자는 Jade와 CoffeeScript를 위한 플러그인들을 설치할 수도 있습니다.</li></ul></li></ol><br><hr><br><h2 id="설치하기"><a href="#설치하기" class="headerlink" title="설치하기"></a>설치하기</h2><h3 id="설치전-확인"><a href="#설치전-확인" class="headerlink" title="설치전 확인"></a>설치전 확인</h3><p>Git과 Node.js가 설치 되어 있어야 합니다. 설치되지 않았다면 아래 경로에서 확인해 주세요.</p><ul><li><a href="https://nodejs.org/en/" rel="external nofollow noopener noreferrer" target="_blank">Node.js</a> - 6.9 이상  </li><li><a href="https://git-scm.com/" rel="external nofollow noopener noreferrer" target="_blank">Git</a></li></ul><br><h3 id="HEXO-INSTALL"><a href="#HEXO-INSTALL" class="headerlink" title="HEXO INSTALL"></a>HEXO INSTALL</h3><ul><li><p><a href="https://hexo.io/ko/docs/setup" rel="external nofollow noopener noreferrer" target="_blank">Hexo</a> 공식 사이트에 간단한 설치방법과 사용법이 나와있습니다. </p>  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@glorious/demo@0.8.0/dist/gdemo.min.css"><script src="https://cdn.jsdelivr.net/npm/@glorious/demo@0.8.0/dist/gdemo.min.js"></script>            <div id="demo-teriminal1" style="height: 70px"></div>            <script>        new GDemo('#demo-teriminal1')          .openApp('terminal', {minHeight: '70px', windowTitle: 'zsh', promptString: '$'})          .command(`npm install -g hexo-cli`, {onCompleteDelay: 500})          .respond(``)          .end();    </script><ul><li><p>hexo-cli를 global로 설치해주세요.</p><br></li></ul></li></ul><h3 id="HEXO-INIT"><a href="#HEXO-INIT" class="headerlink" title="HEXO INIT"></a>HEXO INIT</h3><ul><li><p>hexo를 설치할 폴더에 <code>init으로 기본 파일을 생성</code>해 주세요.</p>  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@glorious/demo@0.8.0/dist/gdemo.min.css"><script src="https://cdn.jsdelivr.net/npm/@glorious/demo@0.8.0/dist/gdemo.min.js"></script>            <div id="demo-teriminal2-1" style="height: 70px"></div>            <script>        new GDemo('#demo-teriminal2-1')          .openApp('terminal', {minHeight: '70px', windowTitle: 'zsh', promptString: '$'})          .command(`hexo init <folder>`, {onCompleteDelay: 500})          .respond(``)          .end();    </script>  <br>  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@glorious/demo@0.8.0/dist/gdemo.min.css"><script src="https://cdn.jsdelivr.net/npm/@glorious/demo@0.8.0/dist/gdemo.min.js"></script>            <div id="demo-teriminal2-2" style="height: 70px"></div>            <script>        new GDemo('#demo-teriminal2-2')          .openApp('terminal', {minHeight: '70px', windowTitle: 'zsh', promptString: '$'})          .command(`cd <folder>`, {onCompleteDelay: 500})          .respond(`  `)          .end();    </script>  <br>  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@glorious/demo@0.8.0/dist/gdemo.min.css"><script src="https://cdn.jsdelivr.net/npm/@glorious/demo@0.8.0/dist/gdemo.min.js"></script>            <div id="demo-teriminal2-3" style="height: 70px"></div>            <script>        new GDemo('#demo-teriminal2-3')          .openApp('terminal', {minHeight: '70px', windowTitle: 'zsh', promptString: '$'})          .command(`npm install`, {onCompleteDelay: 500})          .respond(`  `)          .end();    </script><ul><li><p>기본 설정이 된 폴더로 이동을 한 후 npm install을 해주세요.</p></li><li><p>초기화가 완료되었다면 아래와 같은 폴더구조를 확인 할 수 있습니다.</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── _config.yml</span><br><span class="line">├── package.json</span><br><span class="line">├── scaffolds</span><br><span class="line">├── source</span><br><span class="line">|   ├── _drafts</span><br><span class="line">|   └── _posts</span><br><span class="line">└── themes</span><br></pre></td></tr></table></figure></li></ul></li></ul><br><h3 id="HEXO-SERVER"><a href="#HEXO-SERVER" class="headerlink" title="HEXO SERVER"></a>HEXO SERVER</h3><ul><li><p><code>hexo server</code> 또는 <code>hexo s</code>를 명령어를 사용하여 로컬 서버에서 블로그를 확인 할 수 있습니다.</p>  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@glorious/demo@0.8.0/dist/gdemo.min.css"><script src="https://cdn.jsdelivr.net/npm/@glorious/demo@0.8.0/dist/gdemo.min.js"></script>            <div id="demo-teriminal3" style="height: 70px"></div>            <script>        new GDemo('#demo-teriminal3')          .openApp('terminal', {minHeight: '70px', windowTitle: 'zsh', promptString: '$'})          .command(`hexo server`, {onCompleteDelay: 500})          .respond(``)          .end();    </script><ul><li>localhost:4000 에서 확인 할 수 있습니다.</li></ul></li></ul><br><hr><br><h2 id="글쓰기"><a href="#글쓰기" class="headerlink" title="글쓰기"></a>글쓰기</h2><h3 id="새글-작성"><a href="#새글-작성" class="headerlink" title="새글 작성"></a>새글 작성</h3><ul><li><code>hexo new [layout] &lt;title&gt;</code> 사용하여 새글 작성을 할 수 있습니다.</li></ul><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@glorious/demo@0.8.0/dist/gdemo.min.css"><script src="https://cdn.jsdelivr.net/npm/@glorious/demo@0.8.0/dist/gdemo.min.js"></script>            <div id="demo-teriminal4" style="height: 70px"></div>            <script>        new GDemo('#demo-teriminal4')          .openApp('terminal', {minHeight: '70px', windowTitle: 'zsh', promptString: '$'})          .command(`hexo new test.md`, {onCompleteDelay: 500})          .respond(``)          .end();    </script><ul><li>명령어를 사용하면 <code>/scaffolds/</code>의 md 파일을 스캐폴딩 합니다.</li><li>발행되지 않는 형태의 초안 문서를 작성하고 싶은 경우 [layout]에 draft를 사용해 줍니다.</li><li>아래와 같은 경로에 markdown 문서가 만들어 집니다.</li></ul><pre><code class="terminal">.└── source   ├── _drafts   └── _posts      └── test.md</code></pre><br><h3 id="Front-matter"><a href="#Front-matter" class="headerlink" title="Front-matter"></a>Front-matter</h3><ul><li>생성된 test.md에서 <code>타이틀</code> 및 <code>발행시간</code>, <code>카테고리</code>, <code>테마</code> 등을 수정할 수 있습니다.</li></ul><figure class="highlight plain hljs"><figcaption><span>test.md</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 첫번째 포스팅입니다.</span><br><span class="line">categories:</span><br><span class="line">- TOOL</span><br><span class="line">- HEXO</span><br><span class="line">tags:</span><br><span class="line">- HEXO</span><br><span class="line">- BLOG</span><br><span class="line">date: 2019-07-06 22:15:19</span><br><span class="line">---</span><br></pre></td></tr></table></figure><ul><li><a href="https://hexo.io/docs/front-matter.html" rel="external nofollow noopener noreferrer" target="_blank">Front-matter</a>는 YAML 또는 JSON 형태로 작성할 수 있습니다.</li><li><code>[</code>, <code>:</code> …등의 문자는 제목에 들어가면 오류가 날 수 있습니다. “”로 감싸서 사용해주세요.</li></ul><br><h3 id="Publish"><a href="#Publish" class="headerlink" title="Publish"></a>Publish</h3><ul><li>post에 바로 발행하지 않고 deaft문서를 작성했다면 publish를 이용해 발행해 줍니다.<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@glorious/demo@0.8.0/dist/gdemo.min.css"><script src="https://cdn.jsdelivr.net/npm/@glorious/demo@0.8.0/dist/gdemo.min.js"></script>            <div id="demo-teriminal5" style="height: 70px"></div>            <script>        new GDemo('#demo-teriminal5')          .openApp('terminal', {minHeight: '70px', windowTitle: 'zsh', promptString: '$'})          .command(`hexo publish`, {onCompleteDelay: 500})          .respond(``)          .end();    </script></li></ul><br><hr><br><h2 id="배포하기-Deploy"><a href="#배포하기-Deploy" class="headerlink" title="배포하기(Deploy)"></a>배포하기(Deploy)</h2><h3 id="깃-저장소-확인"><a href="#깃-저장소-확인" class="headerlink" title="깃 저장소 확인"></a>깃 저장소 확인</h3><ul><li>저장소 2개를 준비합니다.<ul><li>정적파일이 deploy되는 <code>(githubID).github.io</code></li><li>hexo 블로그 및 md 파일을 관리할 수 있는 repository (ex. blog)</li></ul></li></ul><br><h3 id="환경설정"><a href="#환경설정" class="headerlink" title="환경설정"></a>환경설정</h3><ul><li>_config.yml 파일을 수정해 주세요.<figure class="highlight plain hljs"><figcaption><span>_config.yml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># URL</span><br><span class="line">url: https://alleyful.github.io //(githubID).github.io</span><br><span class="line">root: /</span><br><span class="line">permalink: :year/:month/:day/:title/</span><br><span class="line">permalink_defaults:</span><br><span class="line"></span><br><span class="line"># Deployment</span><br><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repo: https://github.com/alleyful/alleyful.github.io.git //gihub pages repository</span><br><span class="line">  branch : master</span><br></pre></td></tr></table></figure></li></ul><br><h3 id="hexo-generate"><a href="#hexo-generate" class="headerlink" title="hexo generate"></a>hexo generate</h3><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@glorious/demo@0.8.0/dist/gdemo.min.css"><script src="https://cdn.jsdelivr.net/npm/@glorious/demo@0.8.0/dist/gdemo.min.js"></script>            <div id="demo-teriminal6" style="height: 70px"></div>            <script>        new GDemo('#demo-teriminal6')          .openApp('terminal', {minHeight: '70px', windowTitle: 'zsh', promptString: '$'})          .command(`hexo generate`, {onCompleteDelay: 500})          .respond(``)          .end();    </script><ul><li>정적파일을 생성해 public폴더에 넣어줍니다.</li></ul><br><h3 id="hexo-deploy"><a href="#hexo-deploy" class="headerlink" title="hexo deploy"></a>hexo deploy</h3><ol><li>deploy를 하기 위해서 <code>hexo-deploy-git</code> 플러그인을 먼저 설치해 주세요.</li></ol><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@glorious/demo@0.8.0/dist/gdemo.min.css"><script src="https://cdn.jsdelivr.net/npm/@glorious/demo@0.8.0/dist/gdemo.min.js"></script>            <div id="demo-teriminal7" style="height: 70px"></div>            <script>        new GDemo('#demo-teriminal7')          .openApp('terminal', {minHeight: '70px', windowTitle: 'zsh', promptString: '$'})          .command(`npm install hexo-deploy-git --save`, {onCompleteDelay: 500})          .respond(``)          .end();    </script>    <br><link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@glorious/demo@0.8.0/dist/gdemo.min.css"><script src="https://cdn.jsdelivr.net/npm/@glorious/demo@0.8.0/dist/gdemo.min.js"></script>            <div id="demo-teriminal8" style="height: 70px"></div>            <script>        new GDemo('#demo-teriminal8')          .openApp('terminal', {minHeight: '70px', windowTitle: 'zsh', promptString: '$'})          .command(`hexo deploy`, {onCompleteDelay: 500})          .respond(``)          .end();    </script>    <ul><li>플러그인을 설치 한 후 deploy를 해줍니다. </li><li>Github Pages에서 확인 할 수 있습니다.<ul><li><code>https://&lt;계정이름&gt;.github.io</code></li></ul></li></ul><br><h3 id="hexo-blog-버전관리"><a href="#hexo-blog-버전관리" class="headerlink" title="hexo blog 버전관리"></a>hexo blog 버전관리</h3><ul><li>위에서 만들어 놓은 repository 중 blog(또는 원하는 이름의 저장소)를 사용해 주세요.</li></ul><br><br><hr><h2 id="테마적용도-해볼까요"><a href="#테마적용도-해볼까요" class="headerlink" title="테마적용도 해볼까요."></a>테마적용도 해볼까요.</h2><p>HEXO를 설치하고 POST를 작성한 후 Git Pages에 Deploy까지 해 보았습니다.<br>다음글에는 HEXO Theme를 사용하여 블로그에 원하는 layout과 스타일을 적용해 보도록 하겠습니다.</p><br>]]></content:encoded>
      
      <comments>https://alleyful.github.io/2019/07/07/tools/hexo/hexo-guide-01/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Birthday Cake Candles</title>
      <link>https://alleyful.github.io/2019/07/06/algorithm/hackerrank/08_BirthdayCakeCandles/</link>
      <guid>https://alleyful.github.io/2019/07/06/algorithm/hackerrank/08_BirthdayCakeCandles/</guid>
      <pubDate>Sat, 06 Jul 2019 13:15:19 GMT</pubDate>
      <description>
      
        &lt;p&gt;You are in charge of the cake for your niece’s birthday and have decided the cake will have one candle for each year of her total age. When she blows out the candles, she’ll only be able to blow out the tallest ones. Your task is to find out how many candles she can successfully blow out.&lt;/p&gt;
&lt;p&gt;For example, if your niece is turning &lt;code&gt;4&lt;/code&gt; years old, and the cake will have &lt;code&gt;4&lt;/code&gt; candles of height &lt;code&gt;4, 4, 1, 3&lt;/code&gt;, she will be able to blow out &lt;code&gt;2&lt;/code&gt; candles successfully, since the tallest candles are of height &lt;code&gt;4&lt;/code&gt; and there are &lt;code&gt;2&lt;/code&gt; such candles.&lt;/p&gt;
&lt;br&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p>You are in charge of the cake for your niece’s birthday and have decided the cake will have one candle for each year of her total age. When she blows out the candles, she’ll only be able to blow out the tallest ones. Your task is to find out how many candles she can successfully blow out.</p><p>For example, if your niece is turning <code>4</code> years old, and the cake will have <code>4</code> candles of height <code>4, 4, 1, 3</code>, she will be able to blow out <code>2</code> candles successfully, since the tallest candles are of height <code>4</code> and there are <code>2</code> such candles.</p><br><a id="more"></a><h2 id="Function-Description"><a href="#Function-Description" class="headerlink" title="Function Description"></a>Function Description</h2><p>Complete the function birthdayCakeCandles in the editor below. It must return an integer representing the number of candles she can blow out.</p><p>birthdayCakeCandles has the following parameter(s):</p><ul><li>ar: an array of integers representing candle heights</li></ul><br><h2 id="Input-Format"><a href="#Input-Format" class="headerlink" title="Input Format"></a>Input Format</h2><p>The first line contains a single integer, <strong>n</strong>, denoting the number of candles on the cake.<br>The second line contains <strong>n</strong> space-separated integers, where each integer <strong>i</strong> describes the height of candle <strong>i</strong>.</p><br><h2 id="Constraints"><a href="#Constraints" class="headerlink" title="Constraints"></a>Constraints</h2><ul><li><img src="https://latex.codecogs.com/gif.latex?1%5Cleq&space;n%5Cleq&space;10%5E%7B5%7D" alt></li><li><img src="https://latex.codecogs.com/gif.latex?1%5Cleq&space;ar%5Bi%5D&space;%5Cleq&space;10%5E%7B7%7D" alt></li></ul><br><h2 id="Output-Format"><a href="#Output-Format" class="headerlink" title="Output Format"></a>Output Format</h2><p>Print the number of candles that can be blown out on a new line.</p><br><h2 id="Sample-Input-0"><a href="#Sample-Input-0" class="headerlink" title="Sample Input 0"></a>Sample Input 0</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">3 2 1 3</span><br></pre></td></tr></table></figure><br><h2 id="Sample-Output-0"><a href="#Sample-Output-0" class="headerlink" title="Sample Output 0"></a>Sample Output 0</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure><br><h2 id="Explanation-0"><a href="#Explanation-0" class="headerlink" title="Explanation 0"></a>Explanation 0</h2><p>We have one candle of height <code>1</code>, one candle of height <code>2</code>, and two candles of height <code>3</code>. Your niece only blows out the tallest candles, meaning the candles where <code>heoght = 3</code>. Because there are <code>2</code> such candles, we print <code>2</code> on a new line.</p><br><hr><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">birthdayCakeCandles</span>(<span class="hljs-params">ar</span>) </span>&#123;</span><br><span class="line">    <span class="hljs-keyword">let</span> max = <span class="hljs-built_in">Math</span>.max(...ar);</span><br><span class="line">    <span class="hljs-keyword">return</span> ar.sort(<span class="hljs-function">(<span class="hljs-params">a, b</span>) =&gt;</span> b - a).reduce(<span class="hljs-function">(<span class="hljs-params">target, number</span>) =&gt;</span> &#123; </span><br><span class="line">        number === max &amp;&amp; ++target;</span><br><span class="line"></span><br><span class="line">        <span class="hljs-keyword">return</span> target;</span><br><span class="line">    &#125;, <span class="hljs-number">0</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://alleyful.github.io/2019/07/06/algorithm/hackerrank/08_BirthdayCakeCandles/#disqus_thread</comments>
    </item>
    
    <item>
      <title>프로그래머스 - 기능개발</title>
      <link>https://alleyful.github.io/2019/07/05/algorithm/programmers/level2-06/</link>
      <guid>https://alleyful.github.io/2019/07/05/algorithm/programmers/level2-06/</guid>
      <pubDate>Fri, 05 Jul 2019 03:20:19 GMT</pubDate>
      <description>
      
        &lt;p&gt;프로그래머스 팀에서는 &lt;code&gt;기능 개선 작업을 수행&lt;/code&gt; 중입니다. 각 기능은 진도가 100%일 때 서비스에 반영할 수 있습니다.&lt;/p&gt;
&lt;p&gt;또, 각 기능의 개발속도는 모두 다르기 때문에 뒤에 있는 기능이 앞에 있는 기능보다 먼저 개발될 수 있고, 이때 뒤에 있는 기능은 앞에 있는 기능이 배포될 때 함께 배포됩니다.&lt;/p&gt;
&lt;p&gt;먼저 배포되어야 하는 순서대로 작업의 진도가 적힌 정수 배열 progresses와 각 작업의 개발 속도가 적힌 정수 배열 speeds가 주어질 때 각 &lt;code&gt;배포마다 몇 개의 기능이 배포되는지&lt;/code&gt;를 return 하도록 solution 함수를 완성하세요.&lt;/p&gt;
&lt;br&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p>프로그래머스 팀에서는 <code>기능 개선 작업을 수행</code> 중입니다. 각 기능은 진도가 100%일 때 서비스에 반영할 수 있습니다.</p><p>또, 각 기능의 개발속도는 모두 다르기 때문에 뒤에 있는 기능이 앞에 있는 기능보다 먼저 개발될 수 있고, 이때 뒤에 있는 기능은 앞에 있는 기능이 배포될 때 함께 배포됩니다.</p><p>먼저 배포되어야 하는 순서대로 작업의 진도가 적힌 정수 배열 progresses와 각 작업의 개발 속도가 적힌 정수 배열 speeds가 주어질 때 각 <code>배포마다 몇 개의 기능이 배포되는지</code>를 return 하도록 solution 함수를 완성하세요.</p><br><a id="more"></a><h2 id="제한-사항"><a href="#제한-사항" class="headerlink" title="제한 사항"></a>제한 사항</h2><p>작업의 개수(progresses, speeds배열의 길이)는 100개 이하입니다.<br>작업 진도는 100 미만의 자연수입니다.<br>작업 속도는 100 이하의 자연수입니다.<br>배포는 하루에 한 번만 할 수 있으며, 하루의 끝에 이루어진다고 가정합니다. 예를 들어 진도율이 95%인 작업의 개발 속도가 하루에 4%라면 배포는 2일 뒤에 이루어집니다.</p><br><h2 id="입출력-예"><a href="#입출력-예" class="headerlink" title="입출력 예"></a>입출력 예</h2><table><thead><tr><th align="center">progresses</th><th align="center">speeds</th><th align="center">return</th></tr></thead><tbody><tr><td align="center">[93,30,55]</td><td align="center">[1,30,5]</td><td align="center">[2,1]</td></tr></tbody></table><br><h2 id="입출력-예-설명"><a href="#입출력-예-설명" class="headerlink" title="입출력 예 설명"></a>입출력 예 설명</h2><ul><li>첫 번째 기능은 93% 완료되어 있고 하루에 1%씩 작업이 가능하므로 7일간 작업 후 배포가 가능합니다.</li><li>두 번째 기능은 30%가 완료되어 있고 하루에 30%씩 작업이 가능하므로 3일간 작업 후 배포가 가능합니다.<br>하지만 이전 첫 번째 기능이 아직 완성된 상태가 아니기 때문에 첫 번째 기능이 배포되는 7일째 배포됩니다.</li><li>세 번째 기능은 55%가 완료되어 있고 하루에 5%씩 작업이 가능하므로 9일간 작업 후 배포가 가능합니다.</li></ul><p>따라서 7일째에 2개의 기능, 9일째에 1개의 기능이 배포됩니다.</p><br><hr><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">solution</span>(<span class="hljs-params">n</span>) </span>&#123;</span><br><span class="line">    <span class="hljs-keyword">return</span> n </span><br><span class="line">        ? solution((n - (n % <span class="hljs-number">3</span> || <span class="hljs-number">3</span>)) / <span class="hljs-number">3</span>) + (n % <span class="hljs-number">3</span> || <span class="hljs-number">4</span>)</span><br><span class="line">        : <span class="hljs-string">''</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://alleyful.github.io/2019/07/05/algorithm/programmers/level2-06/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Mini-Max Sum</title>
      <link>https://alleyful.github.io/2019/07/04/algorithm/hackerrank/07_Mini-MaxSum/</link>
      <guid>https://alleyful.github.io/2019/07/04/algorithm/hackerrank/07_Mini-MaxSum/</guid>
      <pubDate>Thu, 04 Jul 2019 03:30:41 GMT</pubDate>
      <description>
      
        &lt;p&gt;Given five positive integers, find the minimum and maximum values that can be calculated by summing exactly four of the five integers.&lt;br&gt;Then print the respective minimum and maximum values as a single line of two space-separated long integers.&lt;/p&gt;
&lt;p&gt;For example, &lt;code&gt;arr = [ 1, 3, 5, 7, 9 ]&lt;/code&gt;. 
Our minimum sum is &lt;code&gt;1 + 3 + 5 + 7 = 16&lt;/code&gt; and our maximum sum is &lt;code&gt;3 + 5 + 7 + 9 = 24&lt;/code&gt;. 
We would print&lt;/p&gt;
&lt;figure class=&quot;highlight plain hljs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;16 24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;br&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p>Given five positive integers, find the minimum and maximum values that can be calculated by summing exactly four of the five integers.<br>Then print the respective minimum and maximum values as a single line of two space-separated long integers.</p><p>For example, <code>arr = [ 1, 3, 5, 7, 9 ]</code>. Our minimum sum is <code>1 + 3 + 5 + 7 = 16</code> and our maximum sum is <code>3 + 5 + 7 + 9 = 24</code>. We would print</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">16 24</span><br></pre></td></tr></table></figure><br><a id="more"></a><h2 id="Function-Description"><a href="#Function-Description" class="headerlink" title="Function Description"></a>Function Description</h2><p>Complete the miniMaxSum function in the editor below.<br>It should print two space-separated integers on one line: the minimum sum and the maximum sum of  of  elements.</p><p>miniMaxSum has the following parameter(s):</p><ul><li>arr: an array of  integers</li></ul><br><h2 id="Input-Format"><a href="#Input-Format" class="headerlink" title="Input Format"></a>Input Format</h2><p>A single line of five space-separated integers.</p><br><h2 id="Constraints"><a href="#Constraints" class="headerlink" title="Constraints"></a>Constraints</h2><p><img src="https://latex.codecogs.com/gif.latex?1%5Cleq&space;arr%5Bi%5D%5Cleq&space;10%5E%7B9%7D" alt></p><br><h2 id="Output-Format"><a href="#Output-Format" class="headerlink" title="Output Format"></a>Output Format</h2><p>Print two space-separated long integers denoting the respective minimum and maximum values that can be calculated by summing exactly four of the five integers. (The output can be greater than a 32 bit integer.)</p><br><h2 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 2 3 4 5</span><br></pre></td></tr></table></figure><br><h2 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10 14</span><br></pre></td></tr></table></figure><br><h2 id="Explanation"><a href="#Explanation" class="headerlink" title="Explanation"></a>Explanation</h2><p>Our initial numbers are <code>1, 2, 3, 4, and 5</code>. We can calculate the following sums using four of the five integers:</p><ul><li>If we sum everything except <code>1</code>, our sum is <code>2 + 3 + 4 + 5 = 14</code>.</li><li>If we sum everything except <code>2</code>, our sum is <code>1 + 3 + 4 + 5 = 13</code>.</li><li>If we sum everything except <code>3</code>, our sum is <code>1 + 2 + 4 + 5 = 12</code>.</li><li>If we sum everything except <code>4</code>, our sum is <code>1 + 2 + 3 + 5 = 11</code>.</li><li>If we sum everything except <code>5</code>, our sum is <code>1 + 2 + 3 + 4 = 10</code>.</li></ul><p><strong>Hints</strong>: Beware of integer overflow! Use 64-bit Integer.</p><br><hr><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">miniMaxSum</span>(<span class="hljs-params">arr</span>) </span>&#123;</span><br><span class="line">    <span class="hljs-keyword">let</span> length = arr.length - <span class="hljs-number">1</span>;</span><br><span class="line">    <span class="hljs-keyword">return</span> arr.sort(<span class="hljs-function">(<span class="hljs-params">a, b</span>) =&gt;</span> a &gt; b).reduce(<span class="hljs-function">(<span class="hljs-params">target, item, index</span>) =&gt;</span> &#123;</span><br><span class="line">        !(index === length) &amp;&amp; (target[<span class="hljs-number">0</span>] += item);</span><br><span class="line">        !(index === <span class="hljs-number">0</span>) &amp;&amp; (target[<span class="hljs-number">1</span>] += item);</span><br><span class="line"></span><br><span class="line">        <span class="hljs-keyword">return</span> target</span><br><span class="line">    &#125;, [<span class="hljs-number">0</span>, <span class="hljs-number">0</span>]).join(<span class="hljs-string">' '</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://alleyful.github.io/2019/07/04/algorithm/hackerrank/07_Mini-MaxSum/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Staircase</title>
      <link>https://alleyful.github.io/2019/07/03/algorithm/hackerrank/06_Staircase/</link>
      <guid>https://alleyful.github.io/2019/07/03/algorithm/hackerrank/06_Staircase/</guid>
      <pubDate>Wed, 03 Jul 2019 13:15:40 GMT</pubDate>
      <description>
      
        &lt;p&gt;Consider a staircase of size &lt;strong&gt;n = 4&lt;/strong&gt;:&lt;/p&gt;
&lt;figure class=&quot;highlight plain hljs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;   #&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ##&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; ###&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;####&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;Observe that its base and height are both equal to &lt;strong&gt;n&lt;/strong&gt;, and the image is drawn using # symbols and spaces. The last line is not preceded by any spaces.&lt;/p&gt;
&lt;p&gt;Write a program that prints a staircase of size &lt;strong&gt;n&lt;/strong&gt;.&lt;/p&gt;
&lt;br&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p>Consider a staircase of size <strong>n = 4</strong>:</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">   #</span><br><span class="line">  ##</span><br><span class="line"> ###</span><br><span class="line">####</span><br></pre></td></tr></table></figure><p>Observe that its base and height are both equal to <strong>n</strong>, and the image is drawn using # symbols and spaces. The last line is not preceded by any spaces.</p><p>Write a program that prints a staircase of size <strong>n</strong>.</p><br><a id="more"></a><h2 id="Function-Description"><a href="#Function-Description" class="headerlink" title="Function Description"></a>Function Description</h2><p>Complete the staircase function in the editor below. It should print a staircase as described above.</p><p>staircase has the following parameter(s):</p><ul><li>n: an integer</li></ul><br><h2 id="Input-Format"><a href="#Input-Format" class="headerlink" title="Input Format"></a>Input Format</h2><p>A single integer, <strong>n</strong>, denoting the size of the staircase.</p><br><h2 id="Constraints"><a href="#Constraints" class="headerlink" title="Constraints"></a>Constraints</h2><p><img src="https://latex.codecogs.com/gif.latex?0%3C&space;n%5Cleq&space;100" alt></p><br><h2 id="Output-Format"><a href="#Output-Format" class="headerlink" title="Output Format"></a>Output Format</h2><p>Print a staircase of size  using # symbols and spaces.</p><p><strong>Note</strong>: The last line must have  spaces in it.</p><br><h2 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">6</span><br></pre></td></tr></table></figure><br><h2 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">     #</span><br><span class="line">    ##</span><br><span class="line">   ###</span><br><span class="line">  ####</span><br><span class="line"> #####</span><br><span class="line">######</span><br></pre></td></tr></table></figure><br><h2 id="Explanation"><a href="#Explanation" class="headerlink" title="Explanation"></a>Explanation</h2><p>The staircase is right-aligned, composed of # symbols and spaces, and has a height and width of <strong>n = 6</strong>.</p><br><hr><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">staircase</span>(<span class="hljs-params">n</span>) </span>&#123;</span><br><span class="line">    <span class="hljs-keyword">let</span> strings = <span class="hljs-built_in">Array</span>(n).fill(<span class="hljs-string">'#'</span>);</span><br><span class="line"></span><br><span class="line">    <span class="hljs-keyword">return</span> strings.reduceRight(<span class="hljs-function">(<span class="hljs-params">target, string, index</span>) =&gt;</span> &#123;</span><br><span class="line">        target.push([...strings].join(<span class="hljs-string">''</span>).replace(<span class="hljs-string">'#'</span>.repeat(index), <span class="hljs-string">' '</span>.repeat(index)));</span><br><span class="line"></span><br><span class="line">        <span class="hljs-keyword">return</span> target</span><br><span class="line">    &#125;, []).join(<span class="hljs-string">'\n'</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://alleyful.github.io/2019/07/03/algorithm/hackerrank/06_Staircase/#disqus_thread</comments>
    </item>
    
    <item>
      <title>프로그래머스 - 124 나라의 숫자</title>
      <link>https://alleyful.github.io/2019/07/02/algorithm/programmers/level2-05/</link>
      <guid>https://alleyful.github.io/2019/07/02/algorithm/programmers/level2-05/</guid>
      <pubDate>Tue, 02 Jul 2019 14:29:19 GMT</pubDate>
      <description>
      
        &lt;p&gt;&lt;code&gt;124 나라&lt;/code&gt;가 있습니다. 124 나라에서는 10진법이 아닌 다음과 같은 &lt;code&gt;자신들만의 규칙&lt;/code&gt;으로 수를 표현합니다.&lt;/p&gt;
&lt;p&gt;124 나라에는 &lt;code&gt;자연수&lt;/code&gt;만 존재합니다. 124 나라에는 모든 수를 표현할 때 &lt;code&gt;1, 2, 4만 사용&lt;/code&gt;합니다. 예를 들어서 124 나라에서 사용하는 숫자는 다음과 같이 변환됩니다.&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p><code>124 나라</code>가 있습니다. 124 나라에서는 10진법이 아닌 다음과 같은 <code>자신들만의 규칙</code>으로 수를 표현합니다.</p><p>124 나라에는 <code>자연수</code>만 존재합니다. 124 나라에는 모든 수를 표현할 때 <code>1, 2, 4만 사용</code>합니다. 예를 들어서 124 나라에서 사용하는 숫자는 다음과 같이 변환됩니다.</p><a id="more"></a><table><thead><tr><th align="center">10진법</th><th align="center">124 나라</th><th align="center">10진법</th><th align="center">124 나라</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">1</td><td align="center">6</td><td align="center">14</td></tr><tr><td align="center">2</td><td align="center">2</td><td align="center">7</td><td align="center">21</td></tr><tr><td align="center">3</td><td align="center">4</td><td align="center">8</td><td align="center">22</td></tr><tr><td align="center">4</td><td align="center">11</td><td align="center">9</td><td align="center">24</td></tr><tr><td align="center">5</td><td align="center">12</td><td align="center">10</td><td align="center">41</td></tr></tbody></table><p>자연수 n이 매개변수로 주어질 때, n을 124 나라에서 사용하는 숫자로 바꾼 값을 return 하도록 solution 함수를 완성해 주세요.</p><br><h2 id="제한사항"><a href="#제한사항" class="headerlink" title="제한사항"></a>제한사항</h2><ul><li>n은 500,000,000이하의 자연수 입니다.</li></ul><br><h2 id="입출력-예"><a href="#입출력-예" class="headerlink" title="입출력 예"></a>입출력 예</h2><table><thead><tr><th align="center">n</th><th align="center">result</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">1</td></tr><tr><td align="center">2</td><td align="center">2</td></tr><tr><td align="center">3</td><td align="center">4</td></tr><tr><td align="center">4</td><td align="center">11</td></tr></tbody></table><br><hr><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">solution</span>(<span class="hljs-params">n</span>) </span>&#123;</span><br><span class="line">    <span class="hljs-keyword">return</span> n </span><br><span class="line">        ? solution((n - (n % <span class="hljs-number">3</span> || <span class="hljs-number">3</span>)) / <span class="hljs-number">3</span>) + (n % <span class="hljs-number">3</span> || <span class="hljs-number">4</span>)</span><br><span class="line">        : <span class="hljs-string">''</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://alleyful.github.io/2019/07/02/algorithm/programmers/level2-05/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Plus Minus</title>
      <link>https://alleyful.github.io/2019/07/01/algorithm/hackerrank/05_PlusMinus/</link>
      <guid>https://alleyful.github.io/2019/07/01/algorithm/hackerrank/05_PlusMinus/</guid>
      <pubDate>Mon, 01 Jul 2019 04:11:40 GMT</pubDate>
      <description>
      
        &lt;p&gt;Given an array of integers, calculate the fractions of its elements that are positive, negative, and are zeros. Print the decimal value of each fraction on a new line.&lt;/p&gt;
&lt;br&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p>Given an array of integers, calculate the fractions of its elements that are positive, negative, and are zeros. Print the decimal value of each fraction on a new line.</p><br><a id="more"></a><p><strong>Note</strong>: This challenge introduces precision problems. The test cases are scaled to six decimal places, though answers with absolute error of up to <img src="https://latex.codecogs.com/gif.latex?10%5E%7B-4%7D" alt> are acceptable.</p><p>For example, given the array <strong>arr = [1, 1, 0, -1, -1]</strong> there are <strong>5</strong> elements, two positive, two negative and one zero. Their ratios would be <img src="https://latex.codecogs.com/gif.latex?%5Cfrac%7B2%7D%7B5%7D=0.400000" alt>, <img src="https://latex.codecogs.com/gif.latex?%5Cfrac%7B2%7D%7B5%7D=0.400000" alt> and <img src="https://latex.codecogs.com/gif.latex?%5Cfrac%7B1%7D%7B5%7D=0.200000" alt>. It should be printed as</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">0.400000</span><br><span class="line">0.400000</span><br><span class="line">0.200000</span><br></pre></td></tr></table></figure><br><h2 id="Function-Description"><a href="#Function-Description" class="headerlink" title="Function Description"></a>Function Description</h2><p>Complete the plusMinus function in the editor below. It should print out the ratio of positive, negative and zero items in the array, each on a separate line rounded to six decimals.</p><p>plusMinus has the following parameter(s):</p><ul><li>arr: an array of integers</li></ul><br><h2 id="Input-Format"><a href="#Input-Format" class="headerlink" title="Input Format"></a>Input Format</h2><p>The first line contains an integer, <strong>n</strong>, denoting the size of the array.<br>The second line contains <strong>n</strong> space-separated integers describing an array of numbers <strong>arr=(arr[0], arr[1], arr[2], …, a[n-1])</strong>.</p><br><h2 id="Constraints"><a href="#Constraints" class="headerlink" title="Constraints"></a>Constraints</h2><ul><li><img src="https://latex.codecogs.com/gif.latex?0%3C&space;n%5Cleq&space;100" alt></li><li><img src="https://latex.codecogs.com/gif.latex?-100%5Cleq&space;arr%5Bi%5D%5Cleq&space;100" alt></li></ul><br><h2 id="Output-Format"><a href="#Output-Format" class="headerlink" title="Output Format"></a>Output Format</h2><p>You must print the following <strong>3</strong> lines:</p><ol><li>A decimal representing of the fraction of positive numbers in the array compared to its size.</li><li>A decimal representing of the fraction of negative numbers in the array compared to its size.</li><li>A decimal representing of the fraction of zeros in the array compared to its size.</li></ol><br><h2 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">6</span><br><span class="line">-4 3 -9 0 4 1</span><br></pre></td></tr></table></figure><br><h2 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">0.500000</span><br><span class="line">0.333333</span><br><span class="line">0.166667</span><br></pre></td></tr></table></figure><br><h2 id="Explanation"><a href="#Explanation" class="headerlink" title="Explanation"></a>Explanation</h2><p>There are <strong>3</strong> positive numbers, <strong>2</strong> negative numbers, and <strong>1</strong> zero in the array.<br>The proportions of occurrence are positive: <img src="https://latex.codecogs.com/gif.latex?%5Cfrac%7B3%7D%7B6%7D=0.500000" alt>, negative: <img src="https://latex.codecogs.com/gif.latex?%5Cfrac%7B2%7D%7B6%7D=0.333333" alt> and zeros: <img src="https://latex.codecogs.com/gif.latex?%5Cfrac%7B1%7D%7B6%7D=0.166667" alt>.</p><br><hr><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">diagonalDifference</span>(<span class="hljs-params">arr</span>) </span>&#123;</span><br><span class="line">    <span class="hljs-comment">// Write your code here</span></span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.abs(arr.reduce(<span class="hljs-function">(<span class="hljs-params">target, item, index</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="hljs-keyword">let</span> length = item.length - <span class="hljs-number">1</span>;</span><br><span class="line">        <span class="hljs-keyword">return</span> target + item[index] - item[length - index]</span><br><span class="line">    &#125;, <span class="hljs-number">0</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://alleyful.github.io/2019/07/01/algorithm/hackerrank/05_PlusMinus/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Diagonal Difference</title>
      <link>https://alleyful.github.io/2019/06/30/algorithm/hackerrank/04_DiagonalDifference/</link>
      <guid>https://alleyful.github.io/2019/06/30/algorithm/hackerrank/04_DiagonalDifference/</guid>
      <pubDate>Sun, 30 Jun 2019 13:51:37 GMT</pubDate>
      <description>
      
        &lt;p&gt;Given a square matrix, calculate the absolute difference between the sums of its diagonals.&lt;/p&gt;
&lt;p&gt;For example, the square matrix  is shown below:&lt;/p&gt;
&lt;figure class=&quot;highlight plain hljs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1 2 3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4 5 6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9 8 9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;The left-to-right diagonal = &lt;strong&gt;1 + 5 + 9 = 15&lt;/strong&gt;. The right to left diagonal = &lt;strong&gt;3 + 5 + 9 = 17&lt;/strong&gt;. 
Their absolute difference is &lt;strong&gt;|15 - 17| = 2&lt;/strong&gt;.&lt;/p&gt;
&lt;br&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p>Given a square matrix, calculate the absolute difference between the sums of its diagonals.</p><p>For example, the square matrix  is shown below:</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1 2 3</span><br><span class="line">4 5 6</span><br><span class="line">9 8 9</span><br></pre></td></tr></table></figure><p>The left-to-right diagonal = <strong>1 + 5 + 9 = 15</strong>. The right to left diagonal = <strong>3 + 5 + 9 = 17</strong>. Their absolute difference is <strong>|15 - 17| = 2</strong>.</p><br><a id="more"></a><h2 id="Function-description"><a href="#Function-description" class="headerlink" title="Function description"></a>Function description</h2><p>Complete the <strong>diagonalDifference</strong> function in the editor below. It must return an integer representing the absolute diagonal difference.</p><p>diagonalDifference takes the following parameter:</p><ul><li>arr: an array of integers .</li></ul><br><h2 id="Input-Format"><a href="#Input-Format" class="headerlink" title="Input Format"></a>Input Format</h2><p>The first line contains a single integer, <strong>n</strong>, the number of rows and columns in the matrix <strong>arr</strong>. Each of the next <strong>n</strong> lines describes a row, <strong>arr[i]</strong>, and consists of <strong>n</strong> space-separated integers <strong>arr[i][j]</strong>.</p><br><h2 id="Constraints"><a href="#Constraints" class="headerlink" title="Constraints"></a>Constraints</h2><ul><li><img src="https://latex.codecogs.com/gif.latex?-100%5Cleq&space;arr%5Bi%5D%5Bj%5D%5Cleq&space;100" alt></li></ul><br><h2 id="Output-Format"><a href="#Output-Format" class="headerlink" title="Output Format"></a>Output Format</h2><p>Print the absolute difference between the sums of the matrix’s two diagonals as a single integer.</p><br><h2 id="Sample-Input"><a href="#Sample-Input" class="headerlink" title="Sample Input"></a>Sample Input</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">3</span><br><span class="line">11 2 4</span><br><span class="line">4 5 6</span><br><span class="line">10 8 -12</span><br></pre></td></tr></table></figure><br><h2 id="Sample-Output"><a href="#Sample-Output" class="headerlink" title="Sample Output"></a>Sample Output</h2><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">15</span><br></pre></td></tr></table></figure><br><h2 id="Explanation"><a href="#Explanation" class="headerlink" title="Explanation"></a>Explanation</h2><p>The primary diagonal is:</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">11</span><br><span class="line">   5</span><br><span class="line">     -12</span><br></pre></td></tr></table></figure><p>Sum across the primary diagonal: 11 + 5 - 12 = 4</p><p>The secondary diagonal is:</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">     4</span><br><span class="line">   5</span><br><span class="line">10</span><br></pre></td></tr></table></figure><p>Sum across the secondary diagonal: 4 + 5 + 10 = 19<br>Difference: |4 - 19| = 15</p><ul><li>Note: |x| is the absolute value of x</li></ul><br><hr><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">diagonalDifference</span>(<span class="hljs-params">arr</span>) </span>&#123;</span><br><span class="line">    <span class="hljs-comment">// Write your code here</span></span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.abs(arr.reduce(<span class="hljs-function">(<span class="hljs-params">target, item, index</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="hljs-keyword">let</span> length = item.length - <span class="hljs-number">1</span>;</span><br><span class="line">        <span class="hljs-keyword">return</span> target + item[index] - item[length - index]</span><br><span class="line">    &#125;, <span class="hljs-number">0</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://alleyful.github.io/2019/06/30/algorithm/hackerrank/04_DiagonalDifference/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
