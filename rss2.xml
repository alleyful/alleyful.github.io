<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>ALLEY</title>
    <link>https://alleyful.github.io/</link>
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>alley&#39;s blog for study</description>
    <pubDate>Wed, 26 Jun 2019 15:14:59 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>프로그래머스 - 스킬트리</title>
      <link>https://alleyful.github.io/2019/06/26/algorithm/programmers/level2-03/</link>
      <guid>https://alleyful.github.io/2019/06/26/algorithm/programmers/level2-03/</guid>
      <pubDate>Wed, 26 Jun 2019 13:53:39 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;문제-설명&quot;&gt;&lt;a href=&quot;#문제-설명&quot; class=&quot;headerlink&quot; title=&quot;문제 설명&quot;&gt;&lt;/a&gt;문제 설명&lt;/h2&gt;&lt;p&gt;선행 스킬이란 어떤 스킬을 배우기 전에 먼저 배워야 하는 스킬을 뜻합니다.&lt;/p&gt;
&lt;p&gt;예를 들어 선행 스킬 순서가 &lt;code&gt;스파크 → 라이트닝 볼트 → 썬더&lt;/code&gt;일때, 썬더를 배우려면 먼저 라이트닝 볼트를 배워야 하고, 라이트닝 볼트를 배우려면 먼저 스파크를 배워야 합니다.&lt;/p&gt;
&lt;p&gt;위 순서에 없는 다른 스킬(힐링 등)은 순서에 상관없이 배울 수 있습니다. 따라서 &lt;code&gt;스파크 → 힐링 → 라이트닝 볼트 → 썬더&lt;/code&gt;와 같은 스킬트리는 가능하지만, &lt;code&gt;썬더 → 스파크&lt;/code&gt;나 &lt;code&gt;라이트닝 볼트 → 스파크 → 힐링 → 썬더&lt;/code&gt;와 같은 스킬트리는 불가능합니다.&lt;/p&gt;
&lt;p&gt;선행 스킬 순서 skill과 유저들이 만든 스킬트리1를 담은 배열 skill_trees가 매개변수로 주어질 때, 가능한 스킬트리 개수를 return 하는 solution 함수를 작성해주세요.&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<h2 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h2><p>선행 스킬이란 어떤 스킬을 배우기 전에 먼저 배워야 하는 스킬을 뜻합니다.</p><p>예를 들어 선행 스킬 순서가 <code>스파크 → 라이트닝 볼트 → 썬더</code>일때, 썬더를 배우려면 먼저 라이트닝 볼트를 배워야 하고, 라이트닝 볼트를 배우려면 먼저 스파크를 배워야 합니다.</p><p>위 순서에 없는 다른 스킬(힐링 등)은 순서에 상관없이 배울 수 있습니다. 따라서 <code>스파크 → 힐링 → 라이트닝 볼트 → 썬더</code>와 같은 스킬트리는 가능하지만, <code>썬더 → 스파크</code>나 <code>라이트닝 볼트 → 스파크 → 힐링 → 썬더</code>와 같은 스킬트리는 불가능합니다.</p><p>선행 스킬 순서 skill과 유저들이 만든 스킬트리1를 담은 배열 skill_trees가 매개변수로 주어질 때, 가능한 스킬트리 개수를 return 하는 solution 함수를 작성해주세요.</p><a id="more"></a><br><h2 id="제한-조건"><a href="#제한-조건" class="headerlink" title="제한 조건"></a>제한 조건</h2><ul><li>스킬은 알파벳 대문자로 표기하며, 모든 문자열은 알파벳 대문자로만 이루어져 있습니다.</li><li>스킬 순서와 스킬트리는 문자열로 표기합니다.<ul><li>예를 들어, <code>C → B → D</code> 라면 CBD로 표기합니다</li></ul></li><li>선행 스킬 순서 skill의 길이는 2 이상 26 이하이며, 스킬은 중복해 주어지지 않습니다.</li><li>skill_trees는 길이 1 이상 20 이하인 배열입니다.</li><li>skill_trees의 원소는 스킬을 나타내는 문자열입니다.<ul><li>skill_trees의 원소는 길이가 2 이상 26 이하인 문자열이며, 스킬이 중복해 주어지지 않습니다.</li></ul></li></ul><br><h2 id="입출력-예"><a href="#입출력-예" class="headerlink" title="입출력 예"></a>입출력 예</h2><table><thead><tr><th align="center">skill</th><th align="left">skill_trees</th><th align="left">return</th></tr></thead><tbody><tr><td align="center">“CBD”</td><td align="left">[“BACDE”, “CBADF”, “AECB”, “BDA”]</td><td align="left">2</td></tr></tbody></table><br><h3 id="입출력-예-설명"><a href="#입출력-예-설명" class="headerlink" title="입출력 예 설명"></a>입출력 예 설명</h3><ul><li>BACDE: B 스킬을 배우기 전에 C 스킬을 먼저 배워야 합니다. 불가능한 스킬트립니다.</li><li>CBADF: 가능한 스킬트리입니다.</li><li>AECB: 가능한 스킬트리입니다.</li><li>BDA: B 스킬을 배우기 전에 C 스킬을 먼저 배워야 합니다. 불가능한 스킬트리입니다.</li></ul><br><hr><h3 id="Solution-1"><a href="#Solution-1" class="headerlink" title="Solution 1"></a>Solution 1</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">solution</span>(<span class="hljs-params">skill, skill_trees</span>) </span>&#123;</span><br><span class="line">    <span class="hljs-keyword">return</span> skill_trees.reduce(<span class="hljs-function">(<span class="hljs-params">target, tree</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="hljs-keyword">let</span> filter = [...tree].reduce(<span class="hljs-function">(<span class="hljs-params">target, item</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="hljs-keyword">let</span> count = <span class="hljs-number">0</span>;</span><br><span class="line">            skill.includes(item) &amp;&amp; (target.push(item));          </span><br><span class="line">            <span class="hljs-keyword">return</span> target;</span><br><span class="line">        &#125;, []);</span><br><span class="line">        </span><br><span class="line">        (filter.reduce(<span class="hljs-function">(<span class="hljs-params">target, item, index</span>) =&gt;</span> &#123;</span><br><span class="line">            target = target &amp;&amp; item === skill[index];</span><br><span class="line">            <span class="hljs-keyword">return</span> target;</span><br><span class="line">        &#125;, <span class="hljs-literal">true</span>)) &amp;&amp; target.push(tree);</span><br><span class="line">        </span><br><span class="line">        <span class="hljs-keyword">return</span> target;</span><br><span class="line">    &#125;, []).length</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Solution-2"><a href="#Solution-2" class="headerlink" title="Solution 2"></a>Solution 2</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">solution</span>(<span class="hljs-params">skill, skill_trees</span>) </span>&#123;</span><br><span class="line">    <span class="hljs-keyword">var</span> answer = <span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">var</span> regex = <span class="hljs-keyword">new</span> <span class="hljs-built_in">RegExp</span>(<span class="hljs-string">`[^<span class="hljs-subst">$&#123;skill&#125;</span>]`</span>, <span class="hljs-string">'g'</span>);</span><br><span class="line"></span><br><span class="line">    <span class="hljs-keyword">return</span> skill_trees</span><br><span class="line">        .map(<span class="hljs-function">(<span class="hljs-params">x</span>) =&gt;</span> x.replace(regex, <span class="hljs-string">''</span>))</span><br><span class="line">        .filter(<span class="hljs-function">(<span class="hljs-params">x</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="hljs-keyword">return</span> skill.indexOf(x) === <span class="hljs-number">0</span> || x === <span class="hljs-string">""</span>;</span><br><span class="line">        &#125;)</span><br><span class="line">        .length</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://alleyful.github.io/2019/06/26/algorithm/programmers/level2-03/#disqus_thread</comments>
    </item>
    
    <item>
      <title>프로그래머스 - 쇠막대기</title>
      <link>https://alleyful.github.io/2019/06/24/algorithm/programmers/level2-02/</link>
      <guid>https://alleyful.github.io/2019/06/24/algorithm/programmers/level2-02/</guid>
      <pubDate>Mon, 24 Jun 2019 14:50:39 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;문제-설명&quot;&gt;&lt;a href=&quot;#문제-설명&quot; class=&quot;headerlink&quot; title=&quot;문제 설명&quot;&gt;&lt;/a&gt;문제 설명&lt;/h2&gt;&lt;p&gt;여러 개의 쇠막대기를 레이저로 절단하려고 합니다.&lt;br&gt;효율적인 작업을 위해서 쇠막대기를 아래에서 위로 겹쳐 놓고, 레이저를 위에서 수직으로 발사하여 쇠막대기들을 자릅니다.&lt;br&gt;쇠막대기와 레이저의 배치는 다음 조건을 만족합니다.&lt;/p&gt;
&lt;figure class=&quot;highlight plain hljs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;- 쇠막대기는 자신보다 긴 쇠막대기 위에만 놓일 수 있습니다.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- 쇠막대기를 다른 쇠막대기 위에 놓는 경우 완전히 포함되도록 놓되, 끝점은 겹치지 않도록 놓습니다.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- 각 쇠막대기를 자르는 레이저는 적어도 하나 존재합니다.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- 레이저는 어떤 쇠막대기의 양 끝점과도 겹치지 않습니다.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
      
      </description>
      
      <content:encoded><![CDATA[<h2 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h2><p>여러 개의 쇠막대기를 레이저로 절단하려고 합니다.<br>효율적인 작업을 위해서 쇠막대기를 아래에서 위로 겹쳐 놓고, 레이저를 위에서 수직으로 발사하여 쇠막대기들을 자릅니다.<br>쇠막대기와 레이저의 배치는 다음 조건을 만족합니다.</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">- 쇠막대기는 자신보다 긴 쇠막대기 위에만 놓일 수 있습니다.</span><br><span class="line">- 쇠막대기를 다른 쇠막대기 위에 놓는 경우 완전히 포함되도록 놓되, 끝점은 겹치지 않도록 놓습니다.</span><br><span class="line">- 각 쇠막대기를 자르는 레이저는 적어도 하나 존재합니다.</span><br><span class="line">- 레이저는 어떤 쇠막대기의 양 끝점과도 겹치지 않습니다.</span><br></pre></td></tr></table></figure><a id="more"></a><br><p>아래 그림은 위 조건을 만족하는 예를 보여줍니다.<br>수평으로 그려진 굵은 실선은 쇠막대기이고, 점은 레이저의 위치, 수직으로 그려진 점선 화살표는 레이저의 발사 방향입니다.</p><p><img src="https://github.com/alleyful/algorithm-solutions/raw/master/Programmers/Level2/images/question2-2-01.png" alt="쇠막대기"></p><br><p>이러한 레이저와 쇠막대기의 배치는 다음과 같이 괄호를 이용하여 왼쪽부터 순서대로 표현할 수 있습니다.</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">(a) 레이저는 여는 괄호와 닫는 괄호의 인접한 쌍 &apos;()&apos;으로 표현합니다. 또한 모든 &apos;()&apos;는 반드시 레이저를 표현합니다.</span><br><span class="line">(b) 쇠막대기의 왼쪽 끝은 여는 괄호 &apos;(&apos;로, 오른쪽 끝은 닫힌 괄호 &apos;)&apos;로 표현됩니다.</span><br></pre></td></tr></table></figure><p>위 예의 괄호 표현은 그림 위에 주어져 있습니다.<br>쇠막대기는 레이저에 의해 몇 개의 조각으로 잘리는데, 위 예에서 가장 위에 있는 두 개의 쇠막대기는 각각 3개와 2개의 조각으로 잘리고, 이와 같은 방식으로 주어진 쇠막대기들은 총 17개의 조각으로 잘립니다.</p><p>쇠막대기와 레이저의 배치를 표현한 문자열 arrangement가 매개변수로 주어질 때, 잘린 쇠막대기 조각의 총 개수를 return 하도록 solution 함수를 작성해주세요.</p><br><h2 id="제한사항"><a href="#제한사항" class="headerlink" title="제한사항"></a>제한사항</h2><p>arrangement의 길이는 최대 100,000입니다.<br>arrangement의 여는 괄호와 닫는 괄호는 항상 쌍을 이룹니다.</p><br><h2 id="입출력-예"><a href="#입출력-예" class="headerlink" title="입출력 예"></a>입출력 예</h2><table><thead><tr><th align="center">arrangement</th><th align="center">return</th></tr></thead><tbody><tr><td align="center">“()(((()())(())()))(())”</td><td align="center">17</td></tr></tbody></table><h3 id="입출력-예-설명"><a href="#입출력-예-설명" class="headerlink" title="입출력 예 설명"></a>입출력 예 설명</h3><p>문제에 나온 예와 같습니다.</p><br><hr><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">solution</span>(<span class="hljs-params">arrangement</span>) </span>&#123;</span><br><span class="line">    <span class="hljs-keyword">const</span> stack = [];</span><br><span class="line">    <span class="hljs-keyword">return</span> [...arrangement].reduce(<span class="hljs-function">(<span class="hljs-params">target, item</span>) =&gt;</span> &#123;</span><br><span class="line">        item === <span class="hljs-string">'('</span> </span><br><span class="line">            ? stack.push(item) </span><br><span class="line">            : (stack.pop(),target[ <span class="hljs-string">'num'</span> ] += (target[ <span class="hljs-string">'char'</span> ] === <span class="hljs-string">')'</span>) ? <span class="hljs-number">1</span> : stack.length);</span><br><span class="line">        target[ <span class="hljs-string">'char'</span> ] = item;</span><br><span class="line">        </span><br><span class="line">        <span class="hljs-keyword">return</span> target;</span><br><span class="line">    &#125;, &#123; <span class="hljs-attr">char</span>:<span class="hljs-string">''</span>, <span class="hljs-attr">num</span>: <span class="hljs-number">0</span> &#125;)[ <span class="hljs-string">'num'</span> ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://alleyful.github.io/2019/06/24/algorithm/programmers/level2-02/#disqus_thread</comments>
    </item>
    
    <item>
      <title>프로그래머스 - 프린터</title>
      <link>https://alleyful.github.io/2019/06/23/algorithm/programmers/level2-01/</link>
      <guid>https://alleyful.github.io/2019/06/23/algorithm/programmers/level2-01/</guid>
      <pubDate>Sun, 23 Jun 2019 02:50:39 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;문제-설명&quot;&gt;&lt;a href=&quot;#문제-설명&quot; class=&quot;headerlink&quot; title=&quot;문제 설명&quot;&gt;&lt;/a&gt;문제 설명&lt;/h2&gt;&lt;p&gt;일반적인 프린터는 인쇄 요청이 들어온 순서대로 인쇄합니다.&lt;br&gt;그렇기 때문에 중요한 문서가 나중에 인쇄될 수 있습니다.&lt;br&gt;이런 문제를 보완하기 위해 중요도가 높은 문서를 먼저 인쇄하는 프린터를 개발했습니다.&lt;br&gt;이 새롭게 개발한 프린터는 아래와 같은 방식으로 인쇄 작업을 수행합니다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;인쇄 대기목록의 가장 앞에 있는 문서(J)를 대기목록에서 꺼냅니다.&lt;/li&gt;
&lt;li&gt;나머지 인쇄 대기목록에서 J보다 중요도가 높은 문서가 한 개라도 존재하면 J를 대기목록의 가장 마지막에 넣습니다.&lt;/li&gt;
&lt;li&gt;그렇지 않으면 J를 인쇄합니다.&lt;br&gt;예를 들어, 4개의 문서(A, B, C, D)가 순서대로 인쇄 대기목록에 있고 중요도가 2 1 3 2 라면 C D A B 순으로 인쇄하게 됩니다.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;내가 인쇄를 요청한 문서가 몇 번째로 인쇄되는지 알고 싶습니다. 위의 예에서 C는 1번째로, A는 3번째로 인쇄됩니다.&lt;/p&gt;
&lt;p&gt;현재 대기목록에 있는 문서의 중요도가 순서대로 담긴 배열 priorities와 내가 인쇄를 요청한 문서가 현재 대기목록의 어떤 위치에 있는지를 알려주는 location이 매개변수로 주어질 때, 내가 인쇄를 요청한 문서가 몇 번째로 인쇄되는지 return 하도록 solution 함수를 작성해주세요.&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<h2 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h2><p>일반적인 프린터는 인쇄 요청이 들어온 순서대로 인쇄합니다.<br>그렇기 때문에 중요한 문서가 나중에 인쇄될 수 있습니다.<br>이런 문제를 보완하기 위해 중요도가 높은 문서를 먼저 인쇄하는 프린터를 개발했습니다.<br>이 새롭게 개발한 프린터는 아래와 같은 방식으로 인쇄 작업을 수행합니다.</p><ol><li>인쇄 대기목록의 가장 앞에 있는 문서(J)를 대기목록에서 꺼냅니다.</li><li>나머지 인쇄 대기목록에서 J보다 중요도가 높은 문서가 한 개라도 존재하면 J를 대기목록의 가장 마지막에 넣습니다.</li><li>그렇지 않으면 J를 인쇄합니다.<br>예를 들어, 4개의 문서(A, B, C, D)가 순서대로 인쇄 대기목록에 있고 중요도가 2 1 3 2 라면 C D A B 순으로 인쇄하게 됩니다.</li></ol><p>내가 인쇄를 요청한 문서가 몇 번째로 인쇄되는지 알고 싶습니다. 위의 예에서 C는 1번째로, A는 3번째로 인쇄됩니다.</p><p>현재 대기목록에 있는 문서의 중요도가 순서대로 담긴 배열 priorities와 내가 인쇄를 요청한 문서가 현재 대기목록의 어떤 위치에 있는지를 알려주는 location이 매개변수로 주어질 때, 내가 인쇄를 요청한 문서가 몇 번째로 인쇄되는지 return 하도록 solution 함수를 작성해주세요.</p><a id="more"></a><br><h2 id="제한사항"><a href="#제한사항" class="headerlink" title="제한사항"></a>제한사항</h2><p>현재 대기목록에는 1개 이상 100개 이하의 문서가 있습니다.<br>인쇄 작업의 중요도는 1~9로 표현하며 숫자가 클수록 중요하다는 뜻입니다.<br>location은 0 이상 (현재 대기목록에 있는 작업 수 - 1) 이하의 값을 가지며 대기목록의 가장 앞에 있으면 0, 두 번째에 있으면 1로 표현합니다.</p><br><h2 id="입출력-예"><a href="#입출력-예" class="headerlink" title="입출력 예"></a>입출력 예</h2><table><thead><tr><th align="center">priorities</th><th align="center">location</th><th align="center">return</th></tr></thead><tbody><tr><td align="center">[2, 1, 3, 2]</td><td align="center">2</td><td align="center">1</td></tr><tr><td align="center">[1, 1, 9, 1, 1, 1]</td><td align="center">0</td><td align="center">5</td></tr></tbody></table><h3 id="입출력-예-설명"><a href="#입출력-예-설명" class="headerlink" title="입출력 예 설명"></a>입출력 예 설명</h3><ul><li>예제 #1<ul><li>문제에 나온 예와 같습니다.</li></ul></li><li>예제 #2<ul><li>6개의 문서(A, B, C, D, E, F)가 인쇄 대기목록에 있고 중요도가 1 1 9 1 1 1 이므로 C D E F A B 순으로 인쇄합니다.</li></ul></li></ul><br><hr><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">solution</span>(<span class="hljs-params">priorities, location</span>) </span>&#123;</span><br><span class="line">    <span class="hljs-keyword">let</span> array = priorities;</span><br><span class="line">    <span class="hljs-keyword">let</span> result = location;</span><br><span class="line">    <span class="hljs-keyword">let</span> count = <span class="hljs-number">0</span>;</span><br><span class="line">    <span class="hljs-keyword">while</span>(result &gt;= <span class="hljs-number">0</span>) &#123;</span><br><span class="line">        <span class="hljs-built_in">Math</span>.max(...array) === array[<span class="hljs-number">0</span>] </span><br><span class="line">            ? (array.shift(), count++, result--) </span><br><span class="line">            : (array.push(array.shift()), result = result &gt; <span class="hljs-number">0</span> ? result - <span class="hljs-number">1</span> : result + array.length - <span class="hljs-number">1</span> )</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="hljs-keyword">return</span> count;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://alleyful.github.io/2019/06/23/algorithm/programmers/level2-01/#disqus_thread</comments>
    </item>
    
    <item>
      <title>프로그래머스 - 예산</title>
      <link>https://alleyful.github.io/2019/06/22/algorithm/programmers/level1-32/</link>
      <guid>https://alleyful.github.io/2019/06/22/algorithm/programmers/level1-32/</guid>
      <pubDate>Sat, 22 Jun 2019 14:41:18 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;문제-설명&quot;&gt;&lt;a href=&quot;#문제-설명&quot; class=&quot;headerlink&quot; title=&quot;문제 설명&quot;&gt;&lt;/a&gt;문제 설명&lt;/h2&gt;&lt;p&gt;S사에서는 각 부서에 필요한 물품을 지원해 주기 위해 부서별로 물품을 구매하는데 필요한 금액을 조사했습니다.&lt;br&gt;그러나, 전체 예산이 정해져 있기 때문에 모든 부서의 물품을 구매해 줄 수는 없습니다.&lt;br&gt;그래서 최대한 많은 부서의 물품을 구매해 줄 수 있도록 하려고 합니다.&lt;/p&gt;
&lt;p&gt;물품을 구매해 줄 때는 각 부서가 신청한 금액만큼을 모두 지원해 줘야 합니다.&lt;br&gt;예를 들어 1,000원을 신청한 부서에는 정확히 1,000원을 지원해야 하며, 1,000원보다 적은 금액을 지원해 줄 수는 없습니다.&lt;/p&gt;
&lt;p&gt;부서별로 신청한 금액이 들어있는 배열 d와 예산 budget이 매개변수로 주어질 때, 최대 몇 개의 부서에 물품을 지원할 수 있는지 return 하도록 solution 함수를 완성해주세요.&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<h2 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h2><p>S사에서는 각 부서에 필요한 물품을 지원해 주기 위해 부서별로 물품을 구매하는데 필요한 금액을 조사했습니다.<br>그러나, 전체 예산이 정해져 있기 때문에 모든 부서의 물품을 구매해 줄 수는 없습니다.<br>그래서 최대한 많은 부서의 물품을 구매해 줄 수 있도록 하려고 합니다.</p><p>물품을 구매해 줄 때는 각 부서가 신청한 금액만큼을 모두 지원해 줘야 합니다.<br>예를 들어 1,000원을 신청한 부서에는 정확히 1,000원을 지원해야 하며, 1,000원보다 적은 금액을 지원해 줄 수는 없습니다.</p><p>부서별로 신청한 금액이 들어있는 배열 d와 예산 budget이 매개변수로 주어질 때, 최대 몇 개의 부서에 물품을 지원할 수 있는지 return 하도록 solution 함수를 완성해주세요.</p><a id="more"></a><br><h2 id="제한사항"><a href="#제한사항" class="headerlink" title="제한사항"></a>제한사항</h2><p>d는 부서별로 신청한 금액이 들어있는 배열이며, 길이(전체 부서의 개수)는 1 이상 100 이하입니다.<br>d의 각 원소는 부서별로 신청한 금액을 나타내며, 부서별 신청 금액은 1 이상 100,000 이하의 자연수입니다.<br>budget은 예산을 나타내며, 1 이상 10,000,000 이하의 자연수입니다.</p><br><h2 id="입출력-예"><a href="#입출력-예" class="headerlink" title="입출력 예"></a>입출력 예</h2><table><thead><tr><th align="center">d</th><th align="center">budget</th><th align="center">result</th></tr></thead><tbody><tr><td align="center">[1,3,2,5,4]</td><td align="center">9</td><td align="center">3</td></tr><tr><td align="center">[2,2,3,3]</td><td align="center">10</td><td align="center">4</td></tr></tbody></table><br><h2 id="입출력-예-설명"><a href="#입출력-예-설명" class="headerlink" title="입출력 예 설명"></a>입출력 예 설명</h2><h3 id="입출력-예-1"><a href="#입출력-예-1" class="headerlink" title="입출력 예 #1"></a>입출력 예 #1</h3><p>각 부서에서 [1원, 3원, 2원, 5원, 4원]만큼의 금액을 신청했습니다.<br>만약에, 1원, 2원, 4원을 신청한 부서의 물품을 구매해주면 예산 9원에서 7원이 소비되어 2원이 남습니다.<br>항상 정확히 신청한 금액만큼 지원해 줘야 하므로 남은 2원으로 나머지 부서를 지원해 주지 않습니다.<br>위 방법 외에 3개 부서를 지원해 줄 방법들은 다음과 같습니다.</p><p>1원, 2원, 3원을 신청한 부서의 물품을 구매해주려면 6원이 필요합니다.<br>1원, 2원, 5원을 신청한 부서의 물품을 구매해주려면 8원이 필요합니다.<br>1원, 3원, 4원을 신청한 부서의 물품을 구매해주려면 8원이 필요합니다.<br>1원, 3원, 5원을 신청한 부서의 물품을 구매해주려면 9원이 필요합니다.<br>3개 부서보다 더 많은 부서의 물품을 구매해 줄 수는 없으므로 최대 3개 부서의 물품을 구매해 줄 수 있습니다.</p><h3 id="입출력-예-2"><a href="#입출력-예-2" class="headerlink" title="입출력 예 #2"></a>입출력 예 #2</h3><p>모든 부서의 물품을 구매해주면 10원이 됩니다. 따라서 최대 4개 부서의 물품을 구매해 줄 수 있습니다.</p><br><hr><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">solution</span>(<span class="hljs-params">d, budget</span>) </span>&#123;</span><br><span class="line">    <span class="hljs-keyword">let</span> lestBudget = budget; </span><br><span class="line">    <span class="hljs-keyword">return</span> d.sort(<span class="hljs-function">(<span class="hljs-params">a, b</span>) =&gt;</span> a - b).reduce(<span class="hljs-function">(<span class="hljs-params">target, item</span>) =&gt;</span> &#123;</span><br><span class="line">        lestBudget -= item; </span><br><span class="line">        lestBudget &gt;= <span class="hljs-number">0</span> &amp;&amp; target.push(item);        </span><br><span class="line">        <span class="hljs-keyword">return</span> target;</span><br><span class="line">    &#125;, []).length</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://alleyful.github.io/2019/06/22/algorithm/programmers/level1-32/#disqus_thread</comments>
    </item>
    
    <item>
      <title>프로그래머스 - 직사각형 별찍기</title>
      <link>https://alleyful.github.io/2019/06/22/algorithm/programmers/level1-31/</link>
      <guid>https://alleyful.github.io/2019/06/22/algorithm/programmers/level1-31/</guid>
      <pubDate>Sat, 22 Jun 2019 13:42:15 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;문제-설명&quot;&gt;&lt;a href=&quot;#문제-설명&quot; class=&quot;headerlink&quot; title=&quot;문제 설명&quot;&gt;&lt;/a&gt;문제 설명&lt;/h2&gt;&lt;p&gt;이 문제에는 표준 입력으로 두 개의 정수 n과 m이 주어집니다.&lt;br&gt;별(*) 문자를 이용해 가로의 길이가 n, 세로의 길이가 m인 직사각형 형태를 출력해보세요.&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<h2 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h2><p>이 문제에는 표준 입력으로 두 개의 정수 n과 m이 주어집니다.<br>별(*) 문자를 이용해 가로의 길이가 n, 세로의 길이가 m인 직사각형 형태를 출력해보세요.</p><a id="more"></a><br><h2 id="제한-조건"><a href="#제한-조건" class="headerlink" title="제한 조건"></a>제한 조건</h2><p>n과 m은 각각 1000 이하인 자연수입니다.</p><h2 id="예시"><a href="#예시" class="headerlink" title="예시"></a>예시</h2><p>입력</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5 3</span><br></pre></td></tr></table></figure><p>출력</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">*****</span><br><span class="line">*****</span><br><span class="line">*****</span><br></pre></td></tr></table></figure><br><hr><h3 id="Solution-1"><a href="#Solution-1" class="headerlink" title="Solution 1"></a>Solution 1</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">process.stdin.setEncoding(<span class="hljs-string">'utf8'</span>);</span><br><span class="line">process.stdin.on(<span class="hljs-string">'data'</span>, data =&gt; &#123;</span><br><span class="line">    <span class="hljs-keyword">const</span> n = data.split(<span class="hljs-string">" "</span>);</span><br><span class="line">    <span class="hljs-keyword">const</span> a = <span class="hljs-built_in">Number</span>(n[<span class="hljs-number">0</span>]), b = <span class="hljs-built_in">Number</span>(n[<span class="hljs-number">1</span>]);</span><br><span class="line">    <span class="hljs-keyword">const</span> row = <span class="hljs-string">'*'</span>.repeat(a);</span><br><span class="line">    <span class="hljs-built_in">Array</span>(b).fill(<span class="hljs-string">''</span>).map(<span class="hljs-function">(<span class="hljs-params">v, i</span>) =&gt;</span> <span class="hljs-built_in">console</span>.log(row));</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="Solution-2"><a href="#Solution-2" class="headerlink" title="Solution 2"></a>Solution 2</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">process.stdin.setEncoding(<span class="hljs-string">'utf8'</span>);</span><br><span class="line">process.stdin.on(<span class="hljs-string">'data'</span>, data =&gt; &#123;</span><br><span class="line">    <span class="hljs-keyword">const</span> n = data.split(<span class="hljs-string">" "</span>);</span><br><span class="line">    <span class="hljs-keyword">const</span> a = <span class="hljs-built_in">Number</span>(n[<span class="hljs-number">0</span>]), b = <span class="hljs-built_in">Number</span>(n[<span class="hljs-number">1</span>]);</span><br><span class="line">    <span class="hljs-keyword">const</span> row = <span class="hljs-string">'*'</span>.repeat(a);</span><br><span class="line">    </span><br><span class="line">     <span class="hljs-keyword">const</span> result = <span class="hljs-built_in">Array</span>(b).fill(<span class="hljs-string">'*'</span>).reduce(<span class="hljs-function">(<span class="hljs-params">target, item</span>) =&gt;</span> &#123;</span><br><span class="line">         target.push(row);</span><br><span class="line">        </span><br><span class="line">         <span class="hljs-keyword">return</span> target;</span><br><span class="line">     &#125;, []).join(<span class="hljs-string">'\n'</span>);</span><br><span class="line">    </span><br><span class="line">     <span class="hljs-built_in">console</span>.log(result)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://alleyful.github.io/2019/06/22/algorithm/programmers/level1-31/#disqus_thread</comments>
    </item>
    
    <item>
      <title>프로그래머스 - x만큼 간격이 있는 n개의 숫자</title>
      <link>https://alleyful.github.io/2019/06/22/algorithm/programmers/level1-30/</link>
      <guid>https://alleyful.github.io/2019/06/22/algorithm/programmers/level1-30/</guid>
      <pubDate>Sat, 22 Jun 2019 13:31:27 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;문제-설명&quot;&gt;&lt;a href=&quot;#문제-설명&quot; class=&quot;headerlink&quot; title=&quot;문제 설명&quot;&gt;&lt;/a&gt;문제 설명&lt;/h2&gt;&lt;p&gt;함수 solution은 정수 x와 자연수 n을 입력 받아, x부터 시작해 x씩 증가하는 숫자를 n개 지니는 리스트를 리턴해야 합니다.&lt;br&gt;다음 제한 조건을 보고, 조건을 만족하는 함수, solution을 완성해주세요.&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<h2 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h2><p>함수 solution은 정수 x와 자연수 n을 입력 받아, x부터 시작해 x씩 증가하는 숫자를 n개 지니는 리스트를 리턴해야 합니다.<br>다음 제한 조건을 보고, 조건을 만족하는 함수, solution을 완성해주세요.</p><a id="more"></a><br><h2 id="제한-조건"><a href="#제한-조건" class="headerlink" title="제한 조건"></a>제한 조건</h2><p>x는 -10000000 이상, 10000000 이하인 정수입니다.<br>n은 1000 이하인 자연수입니다.</p><br><h2 id="입출력-예"><a href="#입출력-예" class="headerlink" title="입출력 예"></a>입출력 예</h2><table><thead><tr><th align="center">x</th><th align="center">n</th><th align="center">answer</th></tr></thead><tbody><tr><td align="center">2</td><td align="center">5</td><td align="center">[2,4,6,8,10]</td></tr><tr><td align="center">4</td><td align="center">3</td><td align="center">[4,8,12]</td></tr><tr><td align="center">-4</td><td align="center">2</td><td align="center">[-4, -8]</td></tr></tbody></table><br><hr><h3 id="Solution-1"><a href="#Solution-1" class="headerlink" title="Solution 1"></a>Solution 1</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">solution</span>(<span class="hljs-params">x, n</span>) </span>&#123;</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-built_in">Array</span>(n).fill(x).map(<span class="hljs-function">(<span class="hljs-params">v, i</span>) =&gt;</span> (i + <span class="hljs-number">1</span>) * v);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Solution-2"><a href="#Solution-2" class="headerlink" title="Solution 2"></a>Solution 2</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">solution</span>(<span class="hljs-params">x, n</span>) </span>&#123;</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-built_in">Array</span>(n).fill(<span class="hljs-number">0</span>).reduce(<span class="hljs-function">(<span class="hljs-params">target, number, index</span>) =&gt;</span> &#123;</span><br><span class="line">        target.push( x * (index + <span class="hljs-number">1</span>) );</span><br><span class="line">        </span><br><span class="line">        <span class="hljs-keyword">return</span> target;</span><br><span class="line">    &#125;, [])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://alleyful.github.io/2019/06/22/algorithm/programmers/level1-30/#disqus_thread</comments>
    </item>
    
    <item>
      <title>프로그래머스 - 행렬의 덧셈</title>
      <link>https://alleyful.github.io/2019/06/22/algorithm/programmers/level1-29/</link>
      <guid>https://alleyful.github.io/2019/06/22/algorithm/programmers/level1-29/</guid>
      <pubDate>Sat, 22 Jun 2019 13:29:15 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;문제-설명&quot;&gt;&lt;a href=&quot;#문제-설명&quot; class=&quot;headerlink&quot; title=&quot;문제 설명&quot;&gt;&lt;/a&gt;문제 설명&lt;/h2&gt;&lt;p&gt;행렬의 덧셈은 행과 열의 크기가 같은 두 행렬의 같은 행, 같은 열의 값을 서로 더한 결과가 됩니다.&lt;br&gt;2개의 행렬 arr1과 arr2를 입력받아, 행렬 덧셈의 결과를 반환하는 함수, solution을 완성해주세요.&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<h2 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h2><p>행렬의 덧셈은 행과 열의 크기가 같은 두 행렬의 같은 행, 같은 열의 값을 서로 더한 결과가 됩니다.<br>2개의 행렬 arr1과 arr2를 입력받아, 행렬 덧셈의 결과를 반환하는 함수, solution을 완성해주세요.</p><a id="more"></a><br><h2 id="제한-조건"><a href="#제한-조건" class="headerlink" title="제한 조건"></a>제한 조건</h2><p>행렬 arr1, arr2의 행과 열의 길이는 500을 넘지 않습니다.</p><br><h2 id="입출력-예"><a href="#입출력-예" class="headerlink" title="입출력 예"></a>입출력 예</h2><table><thead><tr><th align="center">arr1</th><th align="center">arr2</th><th align="center">return</th></tr></thead><tbody><tr><td align="center">[[1,2],[2,3]]</td><td align="center">[[3,4],[5,6]]</td><td align="center">[[4,6],[7,9]]</td></tr><tr><td align="center">[[1],[2]]</td><td align="center">[[3],[4]]</td><td align="center">[[4],[6]]</td></tr></tbody></table><br><hr><h3 id="Solution-1"><a href="#Solution-1" class="headerlink" title="Solution 1"></a>Solution 1</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">solution</span>(<span class="hljs-params">arr1, arr2</span>) </span>&#123;</span><br><span class="line">    <span class="hljs-keyword">return</span> arr1.map(<span class="hljs-function">(<span class="hljs-params">a,i</span>) =&gt;</span> a.map(<span class="hljs-function">(<span class="hljs-params">b, j</span>) =&gt;</span> b + arr2[i][j]));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Solution-2"><a href="#Solution-2" class="headerlink" title="Solution 2"></a>Solution 2</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">solution</span>(<span class="hljs-params">arr1, arr2</span>) </span>&#123;</span><br><span class="line">    <span class="hljs-keyword">return</span> arr1.reduce(<span class="hljs-function">(<span class="hljs-params">target, arr, index</span>) =&gt;</span> &#123;</span><br><span class="line">        target.push(</span><br><span class="line">            arr.reduce(<span class="hljs-function">(<span class="hljs-params">target, inner_arr, inner_index</span>) =&gt;</span> &#123;</span><br><span class="line">            target.push(</span><br><span class="line">                inner_arr + arr2[index][inner_index]</span><br><span class="line">            );</span><br><span class="line">            </span><br><span class="line">            <span class="hljs-keyword">return</span> target;</span><br><span class="line">        &#125;, []));</span><br><span class="line">        </span><br><span class="line">        <span class="hljs-keyword">return</span> target;</span><br><span class="line">    &#125;, [])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://alleyful.github.io/2019/06/22/algorithm/programmers/level1-29/#disqus_thread</comments>
    </item>
    
    <item>
      <title>프로그래머스 - 하샤드 수</title>
      <link>https://alleyful.github.io/2019/06/22/algorithm/programmers/level1-27/</link>
      <guid>https://alleyful.github.io/2019/06/22/algorithm/programmers/level1-27/</guid>
      <pubDate>Sat, 22 Jun 2019 13:13:52 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;문제-설명&quot;&gt;&lt;a href=&quot;#문제-설명&quot; class=&quot;headerlink&quot; title=&quot;문제 설명&quot;&gt;&lt;/a&gt;문제 설명&lt;/h2&gt;&lt;p&gt;양의 정수 x가 하샤드 수이려면 x의 자릿수의 합으로 x가 나누어져야 합니다.&lt;br&gt;예를 들어 18의 자릿수 합은 1+8=9이고, 18은 9로 나누어 떨어지므로 18은 하샤드 수입니다.&lt;br&gt;자연수 x를 입력받아 x가 하샤드 수인지 아닌지 검사하는 함수, solution을 완성해주세요.&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<h2 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h2><p>양의 정수 x가 하샤드 수이려면 x의 자릿수의 합으로 x가 나누어져야 합니다.<br>예를 들어 18의 자릿수 합은 1+8=9이고, 18은 9로 나누어 떨어지므로 18은 하샤드 수입니다.<br>자연수 x를 입력받아 x가 하샤드 수인지 아닌지 검사하는 함수, solution을 완성해주세요.</p><a id="more"></a><br><h2 id="제한-조건"><a href="#제한-조건" class="headerlink" title="제한 조건"></a>제한 조건</h2><p>x는 1 이상, 10000 이하인 정수입니다.</p><br><h2 id="입출력-예"><a href="#입출력-예" class="headerlink" title="입출력 예"></a>입출력 예</h2><table><thead><tr><th align="left">arr</th><th align="left">return</th></tr></thead><tbody><tr><td align="left">10</td><td align="left">true</td></tr><tr><td align="left">12</td><td align="left">true</td></tr><tr><td align="left">11</td><td align="left">false</td></tr><tr><td align="left">13</td><td align="left">false</td></tr></tbody></table><br><h3 id="입출력-예-설명"><a href="#입출력-예-설명" class="headerlink" title="입출력 예 설명"></a>입출력 예 설명</h3><ul><li><p>입출력 예 #1</p><ul><li>10의 모든 자릿수의 합은 1입니다. 10은 1로 나누어 떨어지므로 10은 하샤드 수입니다.</li></ul></li><li><p>입출력 예 #2</p><ul><li>12의 모든 자릿수의 합은 3입니다. 12는 3으로 나누어 떨어지므로 12는 하샤드 수입니다.</li></ul></li><li><p>입출력 예 #3</p><ul><li>11의 모든 자릿수의 합은 2입니다. 11은 2로 나누어 떨어지지 않으므로 11는 하샤드 수가 아닙니다.</li></ul></li><li><p>입출력 예 #4</p><ul><li>13의 모든 자릿수의 합은 4입니다. 13은 4로 나누어 떨어지지 않으므로 13은 하샤드 수가 아닙니다.</li></ul></li></ul><br><hr><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">solution</span>(<span class="hljs-params">x</span>) </span>&#123;</span><br><span class="line">    <span class="hljs-keyword">return</span> x % <span class="hljs-function">(<span class="hljs-params">[...<span class="hljs-built_in">String</span>(x</span>)].<span class="hljs-params">reduce</span>(<span class="hljs-params">(target, number</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="hljs-keyword">return</span> target + <span class="hljs-built_in">Number</span>(number)</span><br><span class="line">    &#125;, <span class="hljs-number">0</span>)) === <span class="hljs-number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://alleyful.github.io/2019/06/22/algorithm/programmers/level1-27/#disqus_thread</comments>
    </item>
    
    <item>
      <title>프로그래머스 - 핸드폰 번호 가리기</title>
      <link>https://alleyful.github.io/2019/06/22/algorithm/programmers/level1-28/</link>
      <guid>https://alleyful.github.io/2019/06/22/algorithm/programmers/level1-28/</guid>
      <pubDate>Sat, 22 Jun 2019 13:13:52 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;문제-설명&quot;&gt;&lt;a href=&quot;#문제-설명&quot; class=&quot;headerlink&quot; title=&quot;문제 설명&quot;&gt;&lt;/a&gt;문제 설명&lt;/h2&gt;&lt;p&gt;프로그래머스 모바일은 개인정보 보호를 위해 고지서를 보낼 때 고객들의 전화번호의 일부를 가립니다.&lt;br&gt;전화번호가 문자열 phone_number로 주어졌을 때, 전화번호의 뒷 4자리를 제외한 나머지 숫자를 전부 *으로 가린 문자열을 리턴하는 함수, solution을 완성해주세요.&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<h2 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h2><p>프로그래머스 모바일은 개인정보 보호를 위해 고지서를 보낼 때 고객들의 전화번호의 일부를 가립니다.<br>전화번호가 문자열 phone_number로 주어졌을 때, 전화번호의 뒷 4자리를 제외한 나머지 숫자를 전부 *으로 가린 문자열을 리턴하는 함수, solution을 완성해주세요.</p><a id="more"></a><br><h2 id="제한-조건"><a href="#제한-조건" class="headerlink" title="제한 조건"></a>제한 조건</h2><p>s는 길이 4 이상, 20이하인 문자열입니다.</p><br><h2 id="입출력-예"><a href="#입출력-예" class="headerlink" title="입출력 예"></a>입출력 예</h2><table><thead><tr><th align="left">phone_number</th><th align="left">return</th></tr></thead><tbody><tr><td align="left">“01033334444”</td><td align="left">“<strong>***</strong>4444”</td></tr><tr><td align="left">“027778888”</td><td align="left">“*****8888”</td></tr></tbody></table><br><hr><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">solution</span>(<span class="hljs-params">phone_number</span>) </span>&#123;</span><br><span class="line">    <span class="hljs-keyword">return</span> phone_number.replace(<span class="hljs-regexp">/\d(?=\d&#123;4&#125;)/g</span>, <span class="hljs-string">"*"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://alleyful.github.io/2019/06/22/algorithm/programmers/level1-28/#disqus_thread</comments>
    </item>
    
    <item>
      <title>프로그래머스 - 평균 구하기</title>
      <link>https://alleyful.github.io/2019/06/22/algorithm/programmers/level1-26/</link>
      <guid>https://alleyful.github.io/2019/06/22/algorithm/programmers/level1-26/</guid>
      <pubDate>Sat, 22 Jun 2019 13:04:25 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;문제-설명&quot;&gt;&lt;a href=&quot;#문제-설명&quot; class=&quot;headerlink&quot; title=&quot;문제 설명&quot;&gt;&lt;/a&gt;문제 설명&lt;/h2&gt;&lt;p&gt;정수를 담고 있는 배열 arr의 평균값을 return하는 함수, solution을 완성해보세요.&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<h2 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h2><p>정수를 담고 있는 배열 arr의 평균값을 return하는 함수, solution을 완성해보세요.</p><a id="more"></a><br><h2 id="제한사항"><a href="#제한사항" class="headerlink" title="제한사항"></a>제한사항</h2><p>arr은 길이 1 이상, 100 이하인 배열입니다.<br>arr의 원소는 -10,000 이상 10,000 이하인 정수입니다.</p><br><h2 id="입출력-예"><a href="#입출력-예" class="headerlink" title="입출력 예"></a>입출력 예</h2><table><thead><tr><th align="left">arr</th><th align="center">return</th></tr></thead><tbody><tr><td align="left">[1,2,3,4]</td><td align="center">2.5</td></tr><tr><td align="left">[5,5]</td><td align="center">5</td></tr></tbody></table><br><hr><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">solution</span>(<span class="hljs-params">arr</span>) </span>&#123;</span><br><span class="line">    <span class="hljs-keyword">return</span> arr.reduce(<span class="hljs-function">(<span class="hljs-params">target, number</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="hljs-keyword">return</span> target + number</span><br><span class="line">    &#125;, <span class="hljs-number">0</span>) / arr.length</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://alleyful.github.io/2019/06/22/algorithm/programmers/level1-26/#disqus_thread</comments>
    </item>
    
    <item>
      <title>프로그래머스 - 콜라츠 추측</title>
      <link>https://alleyful.github.io/2019/06/22/algorithm/programmers/level1-25/</link>
      <guid>https://alleyful.github.io/2019/06/22/algorithm/programmers/level1-25/</guid>
      <pubDate>Sat, 22 Jun 2019 12:54:18 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;문제-설명&quot;&gt;&lt;a href=&quot;#문제-설명&quot; class=&quot;headerlink&quot; title=&quot;문제 설명&quot;&gt;&lt;/a&gt;문제 설명&lt;/h2&gt;&lt;p&gt;1937년 Collatz란 사람에 의해 제기된 이 추측은, 주어진 수가 1이 될때까지 다음 작업을 반복하면, 모든 수를 1로 만들 수 있다는 추측입니다.&lt;br&gt;작업은 다음과 같습니다.&lt;/p&gt;
&lt;figure class=&quot;highlight plain hljs&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1-1. 입력된 수가 짝수라면 2로 나눕니다. &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1-2. 입력된 수가 홀수라면 3을 곱하고 1을 더합니다.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2. 결과로 나온 수에 같은 작업을 1이 될 때까지 반복합니다.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;예를 들어, 입력된 수가 6이라면 6→3→10→5→16→8→4→2→1 이 되어 총 8번 만에 1이 됩니다. 위 작업을 몇 번이나 반복해야하는지 반환하는 함수, solution을 완성해 주세요. 단, 작업을 500번을 반복해도 1이 되지 않는다면 –1을 반환해 주세요.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
      
      </description>
      
      <content:encoded><![CDATA[<h2 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h2><p>1937년 Collatz란 사람에 의해 제기된 이 추측은, 주어진 수가 1이 될때까지 다음 작업을 반복하면, 모든 수를 1로 만들 수 있다는 추측입니다.<br>작업은 다음과 같습니다.</p><figure class="highlight plain hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1-1. 입력된 수가 짝수라면 2로 나눕니다. </span><br><span class="line">1-2. 입력된 수가 홀수라면 3을 곱하고 1을 더합니다.</span><br><span class="line">2. 결과로 나온 수에 같은 작업을 1이 될 때까지 반복합니다.</span><br><span class="line">예를 들어, 입력된 수가 6이라면 6→3→10→5→16→8→4→2→1 이 되어 총 8번 만에 1이 됩니다. 위 작업을 몇 번이나 반복해야하는지 반환하는 함수, solution을 완성해 주세요. 단, 작업을 500번을 반복해도 1이 되지 않는다면 –1을 반환해 주세요.</span><br></pre></td></tr></table></figure><a id="more"></a><br><h2 id="제한-사항"><a href="#제한-사항" class="headerlink" title="제한 사항"></a>제한 사항</h2><p>입력된 수, num은 1 이상 8000000 미만인 정수입니다.</p><br><h2 id="입출력-예"><a href="#입출력-예" class="headerlink" title="입출력 예"></a>입출력 예</h2><table><thead><tr><th align="left">n</th><th align="left">result</th></tr></thead><tbody><tr><td align="left">6</td><td align="left">8</td></tr><tr><td align="left">16</td><td align="left">4</td></tr><tr><td align="left">626331</td><td align="left">-1</td></tr></tbody></table><br><h3 id="입출력-예-설명"><a href="#입출력-예-설명" class="headerlink" title="입출력 예 설명"></a>입출력 예 설명</h3><ul><li><p>입출력 예 #1</p><ul><li>문제의 설명과 같습니다.</li></ul></li><li><p>입출력 예 #2</p><ul><li>16 -&gt; 8 -&gt; 4 -&gt; 2 -&gt; 1 이되어 총 4번만에 1이 됩니다.</li></ul></li><li><p>입출력 예 #3</p><ul><li>626331은 500번을 시도해도 1이 되지 못하므로 -1을 리턴해야합니다.</li></ul></li></ul><br><hr><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">solution</span>(<span class="hljs-params">num, count=<span class="hljs-number">0</span></span>) </span>&#123;</span><br><span class="line">    <span class="hljs-keyword">return</span> count &lt; <span class="hljs-number">500</span> ? (num === <span class="hljs-number">1</span> ? count : solution((num % <span class="hljs-number">2</span> === <span class="hljs-number">0</span> ? num / <span class="hljs-number">2</span> : num * <span class="hljs-number">3</span> + <span class="hljs-number">1</span>), ++count)) : <span class="hljs-number">-1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://alleyful.github.io/2019/06/22/algorithm/programmers/level1-25/#disqus_thread</comments>
    </item>
    
    <item>
      <title>프로그래머스 - 최대공약수와 최소공배수</title>
      <link>https://alleyful.github.io/2019/06/22/algorithm/programmers/level1-24/</link>
      <guid>https://alleyful.github.io/2019/06/22/algorithm/programmers/level1-24/</guid>
      <pubDate>Sat, 22 Jun 2019 12:48:27 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;문제-설명&quot;&gt;&lt;a href=&quot;#문제-설명&quot; class=&quot;headerlink&quot; title=&quot;문제 설명&quot;&gt;&lt;/a&gt;문제 설명&lt;/h2&gt;&lt;p&gt;두 수를 입력받아 두 수의 최대공약수와 최소공배수를 반환하는 함수, solution을 완성해 보세요.&lt;br&gt;배열의 맨 앞에 최대공약수, 그다음 최소공배수를 넣어 반환하면 됩니다.&lt;br&gt;예를 들어 두 수 3, 12의 최대공약수는 3, 최소공배수는 12이므로 solution(3, 12)는 [3, 12]를 반환해야 합니다.&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<h2 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h2><p>두 수를 입력받아 두 수의 최대공약수와 최소공배수를 반환하는 함수, solution을 완성해 보세요.<br>배열의 맨 앞에 최대공약수, 그다음 최소공배수를 넣어 반환하면 됩니다.<br>예를 들어 두 수 3, 12의 최대공약수는 3, 최소공배수는 12이므로 solution(3, 12)는 [3, 12]를 반환해야 합니다.</p><a id="more"></a><br><h2 id="제한-사항"><a href="#제한-사항" class="headerlink" title="제한 사항"></a>제한 사항</h2><p>두 수는 1이상 1000000이하의 자연수입니다.</p><br><h2 id="입출력-예"><a href="#입출력-예" class="headerlink" title="입출력 예"></a>입출력 예</h2><table><thead><tr><th align="center">n</th><th align="center">m</th><th align="center">return</th></tr></thead><tbody><tr><td align="center">3</td><td align="center">12</td><td align="center">[3, 12]</td></tr><tr><td align="center">2</td><td align="center">5</td><td align="center">[1, 10]</td></tr></tbody></table><br><h3 id="입출력-예-설명"><a href="#입출력-예-설명" class="headerlink" title="입출력 예 설명"></a>입출력 예 설명</h3><ul><li><p>입출력 예 #1</p><ul><li>위의 설명과 같습니다.</li></ul></li><li><p>입출력 예 #2</p><ul><li>자연수 2와 5의 최대공약수는 1, 최소공배수는 10이므로 [1, 10]을 리턴해야 합니다.</li></ul></li></ul><br><hr><h3 id="Solution-1"><a href="#Solution-1" class="headerlink" title="Solution 1"></a>Solution 1</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">solution</span>(<span class="hljs-params">n, m</span>) </span>&#123;</span><br><span class="line"><span class="hljs-keyword">const</span> gcd = <span class="hljs-function">(<span class="hljs-params">a, b</span>) =&gt;</span> a % b === <span class="hljs-number">0</span> ? b : gcd(b, a % b) ;</span><br><span class="line"><span class="hljs-keyword">const</span> gcdValue = n &gt; m ? gcd(n, m) : gcd(m , n);</span><br><span class="line"><span class="hljs-keyword">return</span> [ gcdValue, ( n * m ) / gcdValue ];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Solution-2"><a href="#Solution-2" class="headerlink" title="Solution 2"></a>Solution 2</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">solution</span>(<span class="hljs-params">n, m</span>) </span>&#123;</span><br><span class="line"><span class="hljs-keyword">let</span> t = <span class="hljs-number">0</span>, first = n, second = m;</span><br><span class="line"><span class="hljs-keyword">while</span>(second)&#123;</span><br><span class="line">t = first % second;</span><br><span class="line">first = second;</span><br><span class="line">second = t;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">return</span> [first, (n * m) / first];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://alleyful.github.io/2019/06/22/algorithm/programmers/level1-24/#disqus_thread</comments>
    </item>
    
    <item>
      <title>프로그래머스 - 짝수와 홀수</title>
      <link>https://alleyful.github.io/2019/06/22/algorithm/programmers/level1-23/</link>
      <guid>https://alleyful.github.io/2019/06/22/algorithm/programmers/level1-23/</guid>
      <pubDate>Sat, 22 Jun 2019 12:35:48 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;문제-설명&quot;&gt;&lt;a href=&quot;#문제-설명&quot; class=&quot;headerlink&quot; title=&quot;문제 설명&quot;&gt;&lt;/a&gt;문제 설명&lt;/h2&gt;&lt;p&gt;정수 num이 짝수일 경우 Even을 반환하고 홀수인 경우 Odd를 반환하는 함수, solution을 완성해주세요.&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<h2 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h2><p>정수 num이 짝수일 경우 Even을 반환하고 홀수인 경우 Odd를 반환하는 함수, solution을 완성해주세요.</p><a id="more"></a><br><h2 id="제한-조건"><a href="#제한-조건" class="headerlink" title="제한 조건"></a>제한 조건</h2><p>num은 int 범위의 정수입니다.<br>0은 짝수입니다.</p><br><h2 id="입출력-예"><a href="#입출력-예" class="headerlink" title="입출력 예"></a>입출력 예</h2><table><thead><tr><th align="center">num</th><th align="center">return</th></tr></thead><tbody><tr><td align="center">3</td><td align="center">Odd</td></tr><tr><td align="center">4</td><td align="center">Even</td></tr></tbody></table><br><hr><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">solution</span>(<span class="hljs-params">num</span>) </span>&#123;</span><br><span class="line">    <span class="hljs-keyword">return</span> num % <span class="hljs-number">2</span> === <span class="hljs-number">0</span> ? <span class="hljs-string">"Even"</span> : <span class="hljs-string">"Odd"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://alleyful.github.io/2019/06/22/algorithm/programmers/level1-23/#disqus_thread</comments>
    </item>
    
    <item>
      <title>프로그래머스 - 제일 작은 수 제거하기</title>
      <link>https://alleyful.github.io/2019/06/22/algorithm/programmers/level1-22/</link>
      <guid>https://alleyful.github.io/2019/06/22/algorithm/programmers/level1-22/</guid>
      <pubDate>Sat, 22 Jun 2019 12:22:10 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;문제-설명&quot;&gt;&lt;a href=&quot;#문제-설명&quot; class=&quot;headerlink&quot; title=&quot;문제 설명&quot;&gt;&lt;/a&gt;문제 설명&lt;/h2&gt;&lt;p&gt;정수를 저장한 배열, arr 에서 가장 작은 수를 제거한 배열을 리턴하는 함수, solution을 완성해주세요.&lt;br&gt;&lt;br&gt;단, 리턴하려는 배열이 빈 배열인 경우엔 배열에 -1을 채워 리턴하세요. &lt;br&gt;&lt;br&gt;예를들어 arr이 [4,3,2,1]인 경우는 [4,3,2]를 리턴 하고, [10]면 [-1]을 리턴 합니다.&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<h2 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h2><p>정수를 저장한 배열, arr 에서 가장 작은 수를 제거한 배열을 리턴하는 함수, solution을 완성해주세요.<br><br>단, 리턴하려는 배열이 빈 배열인 경우엔 배열에 -1을 채워 리턴하세요. <br><br>예를들어 arr이 [4,3,2,1]인 경우는 [4,3,2]를 리턴 하고, [10]면 [-1]을 리턴 합니다.</p><a id="more"></a><br><h2 id="제한-조건"><a href="#제한-조건" class="headerlink" title="제한 조건"></a>제한 조건</h2><p>arr은 길이 1 이상인 배열입니다.<br>인덱스 i, j에 대해 i ≠ j이면 arr[i] ≠ arr[j] 입니다.</p><br><h2 id="입출력-예"><a href="#입출력-예" class="headerlink" title="입출력 예"></a>입출력 예</h2><table><thead><tr><th align="left">arr</th><th align="left">return</th></tr></thead><tbody><tr><td align="left">[4,3,2,1]</td><td align="left">[4,3,2]</td></tr><tr><td align="left">[10]</td><td align="left">[-1]</td></tr></tbody></table><br><hr><h3 id="Solution-1"><a href="#Solution-1" class="headerlink" title="Solution 1"></a>Solution 1</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">solution</span>(<span class="hljs-params">arr</span>) </span>&#123;</span><br><span class="line">    arr.splice(arr.findIndex(<span class="hljs-function"><span class="hljs-params">v</span> =&gt;</span> v === <span class="hljs-built_in">Math</span>.min(...arr)), <span class="hljs-number">1</span>);</span><br><span class="line">    arr.length &lt; <span class="hljs-number">1</span> &amp;&amp; arr.push(<span class="hljs-number">-1</span>);</span><br><span class="line">    <span class="hljs-keyword">return</span> arr</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Solution-2"><a href="#Solution-2" class="headerlink" title="Solution 2"></a>Solution 2</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">solution</span>(<span class="hljs-params">arr</span>) </span>&#123;</span><br><span class="line">     <span class="hljs-keyword">let</span> min = <span class="hljs-built_in">Math</span>.min(...arr);</span><br><span class="line">     <span class="hljs-keyword">return</span> arr.reduce(<span class="hljs-function">(<span class="hljs-params">target, number, index</span>) =&gt;</span> &#123;</span><br><span class="line">         !(min === number) &amp;&amp; target.push(number);</span><br><span class="line">         target.length &lt;= <span class="hljs-number">0</span> &amp;&amp; target.push(<span class="hljs-number">-1</span>);</span><br><span class="line">        </span><br><span class="line">         <span class="hljs-keyword">return</span> target</span><br><span class="line">     &#125;, [])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://alleyful.github.io/2019/06/22/algorithm/programmers/level1-22/#disqus_thread</comments>
    </item>
    
    <item>
      <title>프로그래머스 - 정수 제곱근 판별</title>
      <link>https://alleyful.github.io/2019/06/22/algorithm/programmers/level1-21/</link>
      <guid>https://alleyful.github.io/2019/06/22/algorithm/programmers/level1-21/</guid>
      <pubDate>Sat, 22 Jun 2019 12:20:39 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;문제-설명&quot;&gt;&lt;a href=&quot;#문제-설명&quot; class=&quot;headerlink&quot; title=&quot;문제 설명&quot;&gt;&lt;/a&gt;문제 설명&lt;/h2&gt;&lt;p&gt;임의의 정수 n에 대해, n이 어떤 정수 x의 제곱인지 아닌지 판단하려 합니다.&lt;br&gt;n이 정수 x의 제곱이라면 x+1의 제곱을 리턴하고, n이 정수 x의 제곱이 아니라면 -1을 리턴하는 함수를 완성하세요.&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<h2 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h2><p>임의의 정수 n에 대해, n이 어떤 정수 x의 제곱인지 아닌지 판단하려 합니다.<br>n이 정수 x의 제곱이라면 x+1의 제곱을 리턴하고, n이 정수 x의 제곱이 아니라면 -1을 리턴하는 함수를 완성하세요.</p><a id="more"></a><br><h2 id="제한-사항"><a href="#제한-사항" class="headerlink" title="제한 사항"></a>제한 사항</h2><p>n은 1이상, 50000000000000 이하인 정수입니다.</p><br><h2 id="입출력-예"><a href="#입출력-예" class="headerlink" title="입출력 예"></a>입출력 예</h2><table><thead><tr><th align="left">n</th><th align="center">return</th></tr></thead><tbody><tr><td align="left">121</td><td align="center">144</td></tr><tr><td align="left">3</td><td align="center">-1</td></tr></tbody></table><br><h3 id="입출력-예-설명"><a href="#입출력-예-설명" class="headerlink" title="입출력 예 설명"></a>입출력 예 설명</h3><ul><li><p>입출력 예#1</p><ul><li>121은 정수 11의 제곱이므로, (11+1)를 제곱한 144를 리턴합니다.</li></ul></li><li><p>입출력 예#2</p><ul><li>3은 정수의 제곱이 아니므로, -1을 리턴합니다.</li></ul></li></ul><br><hr><h3 id="Solution-1"><a href="#Solution-1" class="headerlink" title="Solution 1"></a>Solution 1</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">solution</span>(<span class="hljs-params">n</span>) </span>&#123;</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-built_in">Number</span>.isInteger(<span class="hljs-built_in">Math</span>.sqrt(n)) ? <span class="hljs-built_in">Math</span>.pow((<span class="hljs-built_in">Math</span>.sqrt(n) + <span class="hljs-number">1</span>), <span class="hljs-number">2</span>) : <span class="hljs-number">-1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Solution-2"><a href="#Solution-2" class="headerlink" title="Solution 2"></a>Solution 2</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">solution</span>(<span class="hljs-params">n</span>) </span>&#123;</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-built_in">Number</span>.isInteger(<span class="hljs-built_in">Math</span>.sqrt(n)) ? (<span class="hljs-built_in">Math</span>.sqrt(n) + <span class="hljs-number">1</span>) ** <span class="hljs-number">2</span> : <span class="hljs-number">-1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://alleyful.github.io/2019/06/22/algorithm/programmers/level1-21/#disqus_thread</comments>
    </item>
    
    <item>
      <title>프로그래머스 - 정수 내림차순으로 배치하기</title>
      <link>https://alleyful.github.io/2019/06/22/algorithm/programmers/level1-20/</link>
      <guid>https://alleyful.github.io/2019/06/22/algorithm/programmers/level1-20/</guid>
      <pubDate>Sat, 22 Jun 2019 11:59:39 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;문제-설명&quot;&gt;&lt;a href=&quot;#문제-설명&quot; class=&quot;headerlink&quot; title=&quot;문제 설명&quot;&gt;&lt;/a&gt;문제 설명&lt;/h2&gt;&lt;p&gt;함수 solution은 정수 n을 매개변수로 입력받습니다.&lt;br&gt;n의 각 자릿수를 큰것부터 작은 순으로 정렬한 새로운 정수를 리턴해주세요.&lt;br&gt;예를들어 n이 118372면 873211을 리턴하면 됩니다.&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<h2 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h2><p>함수 solution은 정수 n을 매개변수로 입력받습니다.<br>n의 각 자릿수를 큰것부터 작은 순으로 정렬한 새로운 정수를 리턴해주세요.<br>예를들어 n이 118372면 873211을 리턴하면 됩니다.</p><a id="more"></a><br><h2 id="제한-조건"><a href="#제한-조건" class="headerlink" title="제한 조건"></a>제한 조건</h2><p>n은 1이상 8000000000 이하인 자연수입니다.</p><br><h2 id="입출력-예"><a href="#입출력-예" class="headerlink" title="입출력 예"></a>입출력 예</h2><table><thead><tr><th align="left">n</th><th align="left">return</th></tr></thead><tbody><tr><td align="left">118372</td><td align="left">873211</td></tr></tbody></table><br><hr><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">solution</span>(<span class="hljs-params">n</span>) </span>&#123;</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-built_in">Number</span>([...String(n)].sort(<span class="hljs-function">(<span class="hljs-params">a, b</span>) =&gt;</span> b - a).join(<span class="hljs-string">''</span>))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://alleyful.github.io/2019/06/22/algorithm/programmers/level1-20/#disqus_thread</comments>
    </item>
    
    <item>
      <title>프로그래머스 - 자연수 뒤집어 배열로 만들기</title>
      <link>https://alleyful.github.io/2019/06/21/algorithm/programmers/level1-19/</link>
      <guid>https://alleyful.github.io/2019/06/21/algorithm/programmers/level1-19/</guid>
      <pubDate>Fri, 21 Jun 2019 13:59:39 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;문제-설명&quot;&gt;&lt;a href=&quot;#문제-설명&quot; class=&quot;headerlink&quot; title=&quot;문제 설명&quot;&gt;&lt;/a&gt;문제 설명&lt;/h2&gt;&lt;p&gt;자연수 n을 뒤집어 각 자리 숫자를 원소로 가지는 배열 형태로 리턴해주세요.&lt;br&gt;예를들어 n이 12345이면 [5,4,3,2,1]을 리턴합니다.&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<h2 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h2><p>자연수 n을 뒤집어 각 자리 숫자를 원소로 가지는 배열 형태로 리턴해주세요.<br>예를들어 n이 12345이면 [5,4,3,2,1]을 리턴합니다.</p><a id="more"></a><br><h2 id="제한-조건"><a href="#제한-조건" class="headerlink" title="제한 조건"></a>제한 조건</h2><p>n은 10,000,000,000이하인 자연수입니다.</p><br><h2 id="입출력-예"><a href="#입출력-예" class="headerlink" title="입출력 예"></a>입출력 예</h2><table><thead><tr><th align="center">n</th><th align="center">return</th></tr></thead><tbody><tr><td align="center">12345</td><td align="center">[5,4,3,2,1]</td></tr></tbody></table><br><hr><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">solution</span>(<span class="hljs-params">n</span>) </span>&#123;</span><br><span class="line">    <span class="hljs-keyword">return</span> [...n.toString()].reverse().map(<span class="hljs-function"><span class="hljs-params">v</span> =&gt;</span> <span class="hljs-built_in">Number</span>(v))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://alleyful.github.io/2019/06/21/algorithm/programmers/level1-19/#disqus_thread</comments>
    </item>
    
    <item>
      <title>프로그래머스 - 자릿수 더하기</title>
      <link>https://alleyful.github.io/2019/06/21/algorithm/programmers/level1-18/</link>
      <guid>https://alleyful.github.io/2019/06/21/algorithm/programmers/level1-18/</guid>
      <pubDate>Thu, 20 Jun 2019 16:09:22 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;문제-설명&quot;&gt;&lt;a href=&quot;#문제-설명&quot; class=&quot;headerlink&quot; title=&quot;문제 설명&quot;&gt;&lt;/a&gt;문제 설명&lt;/h2&gt;&lt;p&gt;자연수 N이 주어지면, N의 각 자릿수의 합을 구해서 return 하는 solution 함수를 만들어 주세요.&lt;br&gt;예를들어 N = 123이면 1 + 2 + 3 = 6을 return 하면 됩니다.&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<h2 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h2><p>자연수 N이 주어지면, N의 각 자릿수의 합을 구해서 return 하는 solution 함수를 만들어 주세요.<br>예를들어 N = 123이면 1 + 2 + 3 = 6을 return 하면 됩니다.</p><a id="more"></a><br><h2 id="제한-사항"><a href="#제한-사항" class="headerlink" title="제한 사항"></a>제한 사항</h2><p>N의 범위 : 100,000,000 이하의 자연수</p><br><h2 id="입출력-예"><a href="#입출력-예" class="headerlink" title="입출력 예"></a>입출력 예</h2><table><thead><tr><th align="left">N</th><th align="left">answer</th></tr></thead><tbody><tr><td align="left">123</td><td align="left">6</td></tr><tr><td align="left">987</td><td align="left">24</td></tr></tbody></table><br><h3 id="입출력-예-설명"><a href="#입출력-예-설명" class="headerlink" title="입출력 예 설명"></a>입출력 예 설명</h3><ul><li><p>입출력 예 #1</p><ul><li>문제의 예시와 같습니다.</li></ul></li><li><p>입출력 예 #2</p><ul><li>9 + 8 + 7 = 24이므로 24를 return 하면 됩니다.</li></ul></li></ul><br><br><hr><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">solution</span>(<span class="hljs-params">n</span>)</span></span><br><span class="line"><span class="hljs-function"></span>&#123;</span><br><span class="line">    <span class="hljs-keyword">return</span> [...n.toString()].reduce(<span class="hljs-function">(<span class="hljs-params">target, item</span>) =&gt;</span> &#123;    </span><br><span class="line">        <span class="hljs-keyword">return</span> target += <span class="hljs-built_in">Number</span>(item);</span><br><span class="line">    &#125;, <span class="hljs-number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://alleyful.github.io/2019/06/21/algorithm/programmers/level1-18/#disqus_thread</comments>
    </item>
    
    <item>
      <title>프로그래머스 - 이상한 문자 만들기</title>
      <link>https://alleyful.github.io/2019/06/20/algorithm/programmers/level1-17/</link>
      <guid>https://alleyful.github.io/2019/06/20/algorithm/programmers/level1-17/</guid>
      <pubDate>Wed, 19 Jun 2019 15:50:49 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;문제-설명&quot;&gt;&lt;a href=&quot;#문제-설명&quot; class=&quot;headerlink&quot; title=&quot;문제 설명&quot;&gt;&lt;/a&gt;문제 설명&lt;/h2&gt;&lt;p&gt;문자열 s는 한 개 이상의 단어로 구성되어 있습니다.&lt;br&gt;각 단어는 하나 이상의 공백문자로 구분되어 있습니다.&lt;br&gt;각 단어의 짝수번째 알파벳은 대문자로, 홀수번째 알파벳은 소문자로 바꾼 문자열을 리턴하는 함수, solution을 완성하세요.&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<h2 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h2><p>문자열 s는 한 개 이상의 단어로 구성되어 있습니다.<br>각 단어는 하나 이상의 공백문자로 구분되어 있습니다.<br>각 단어의 짝수번째 알파벳은 대문자로, 홀수번째 알파벳은 소문자로 바꾼 문자열을 리턴하는 함수, solution을 완성하세요.</p><a id="more"></a><br><h2 id="제한-사항"><a href="#제한-사항" class="headerlink" title="제한 사항"></a>제한 사항</h2><p>문자열 전체의 짝/홀수 인덱스가 아니라, 단어(공백을 기준)별로 짝/홀수 인덱스를 판단해야합니다.<br>첫 번째 글자는 0번째 인덱스로 보아 짝수번째 알파벳으로 처리해야 합니다.</p><br><h2 id="입출력-예"><a href="#입출력-예" class="headerlink" title="입출력 예"></a>입출력 예</h2><table><thead><tr><th align="left">s</th><th align="left">return</th></tr></thead><tbody><tr><td align="left">“try hello world”</td><td align="left">“TrY HeLlO WoRlD”</td></tr></tbody></table><h3 id="입출력-예-설명"><a href="#입출력-예-설명" class="headerlink" title="입출력 예 설명"></a>입출력 예 설명</h3><ul><li>“try hello world”는 세 단어 “try”, “hello”, “world”로 구성되어 있습니다. </li><li>각 단어의 짝수번째 문자를 대문자로, 홀수번째 문자를 소문자로 바꾸면 “TrY”, “HeLlO”, “WoRlD”입니다. </li><li>따라서 “TrY HeLlO WoRlD” 를 리턴합니다.</li></ul><br><br><hr><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">solution</span>(<span class="hljs-params">s</span>) </span>&#123;</span><br><span class="line">    <span class="hljs-keyword">return</span> s.split(<span class="hljs-string">' '</span>).reduce(<span class="hljs-function">(<span class="hljs-params">target, string</span>) =&gt;</span> &#123;</span><br><span class="line">        target.push(</span><br><span class="line">            [...string].reduce(<span class="hljs-function">(<span class="hljs-params">target, item, index</span>) =&gt;</span> &#123;</span><br><span class="line">                target.push(index % <span class="hljs-number">2</span> === <span class="hljs-number">0</span> ? item.toUpperCase() : item.toLowerCase())</span><br><span class="line">                </span><br><span class="line">                <span class="hljs-keyword">return</span> target;</span><br><span class="line">            &#125;, []).join(<span class="hljs-string">''</span>)</span><br><span class="line">        );</span><br><span class="line">        </span><br><span class="line">        <span class="hljs-keyword">return</span> target;</span><br><span class="line">    &#125;, []).join(<span class="hljs-string">' '</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://alleyful.github.io/2019/06/20/algorithm/programmers/level1-17/#disqus_thread</comments>
    </item>
    
    <item>
      <title>프로그래머스 - 약수의 합</title>
      <link>https://alleyful.github.io/2019/06/19/algorithm/programmers/level1-16/</link>
      <guid>https://alleyful.github.io/2019/06/19/algorithm/programmers/level1-16/</guid>
      <pubDate>Tue, 18 Jun 2019 15:52:49 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;문제-설명&quot;&gt;&lt;a href=&quot;#문제-설명&quot; class=&quot;headerlink&quot; title=&quot;문제 설명&quot;&gt;&lt;/a&gt;문제 설명&lt;/h2&gt;&lt;p&gt;자연수 n을 입력받아 n의 약수를 모두 더한 값을 리턴하는 함수, solution을 완성해주세요.&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<h2 id="문제-설명"><a href="#문제-설명" class="headerlink" title="문제 설명"></a>문제 설명</h2><p>자연수 n을 입력받아 n의 약수를 모두 더한 값을 리턴하는 함수, solution을 완성해주세요.</p><a id="more"></a><br><h2 id="제한-사항"><a href="#제한-사항" class="headerlink" title="제한 사항"></a>제한 사항</h2><p>n은 0 이상 3000이하인 자연수입니다.</p><br><h2 id="입출력-예"><a href="#입출력-예" class="headerlink" title="입출력 예"></a>입출력 예</h2><table><thead><tr><th align="center">n</th><th align="center">return</th></tr></thead><tbody><tr><td align="center">12</td><td align="center">28</td></tr><tr><td align="center">5</td><td align="center">6</td></tr></tbody></table><br><h2 id="입출력-예-설명"><a href="#입출력-예-설명" class="headerlink" title="입출력 예 설명"></a>입출력 예 설명</h2><ul><li><p>입출력 예 #1</p><ul><li>12의 약수는 1, 2, 3, 4, 6, 12입니다. 이를 모두 더하면 28입니다.</li></ul></li><li><p>입출력 예 #2</p><ul><li>5의 약수는 1, 5입니다. 이를 모두 더하면 6입니다.</li></ul></li></ul><br><hr><h3 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h3><figure class="highlight javascript hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">solution</span>(<span class="hljs-params">n</span>) </span>&#123;</span><br><span class="line">    <span class="hljs-keyword">return</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Array</span>(<span class="hljs-built_in">Math</span>.floor(<span class="hljs-built_in">Math</span>.sqrt(n))).fill(<span class="hljs-number">0</span>).reduce(<span class="hljs-function">(<span class="hljs-params">target, arr, index</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="hljs-keyword">let</span> number = index + <span class="hljs-number">1</span>;</span><br><span class="line">        <span class="hljs-keyword">let</span> numberLast = n / number;</span><br><span class="line">        n % number === <span class="hljs-number">0</span> &amp;&amp; (target = target + (numberLast === number ? number : number + numberLast))</span><br><span class="line">        <span class="hljs-keyword">return</span> target;</span><br><span class="line">    &#125;, <span class="hljs-number">0</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>https://alleyful.github.io/2019/06/19/algorithm/programmers/level1-16/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
